"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[58596],{35318:(e,t,i)=>{i.d(t,{Zo:()=>p,kt:()=>d});var n=i(27378);function a(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function r(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function o(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?r(Object(i),!0).forEach((function(t){a(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):r(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function s(e,t){if(null==e)return{};var i,n,a=function(e,t){if(null==e)return{};var i,n,a={},r=Object.keys(e);for(n=0;n<r.length;n++)i=r[n],t.indexOf(i)>=0||(a[i]=e[i]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)i=r[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(a[i]=e[i])}return a}var l=n.createContext({}),c=function(e){var t=n.useContext(l),i=t;return e&&(i="function"==typeof e?e(t):o(o({},t),e)),i},p=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var i=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=c(i),d=a,g=m["".concat(l,".").concat(d)]||m[d]||u[d]||r;return i?n.createElement(g,o(o({ref:t},p),{},{components:i})):n.createElement(g,o({ref:t},p))}));function d(e,t){var i=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=i.length,o=new Array(r);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var c=2;c<r;c++)o[c]=i[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,i)}m.displayName="MDXCreateElement"},50915:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var n=i(25773),a=(i(27378),i(35318));const r={title:"From stdio to HTTP SSE: Host Your MCP Server with APISIX API Gateway",authors:[{name:"Ming Wen",title:"author",url:"https://www.linkedin.com/in/ming-wen-api7/",image_url:"https://github.com/moonming.png"},{name:"Zeping Bai",title:"author",url:"https://github.com/bzp2010",image_url:"https://github.com/bzp2010.png"}],keywords:["HTTP","SSE","API Gateway","MCP","MCP Server","mcp-bridge"],description:"Discover APISIX-MCP, leveraging AI for effortless API management. Simplify resource operations with natural language in Apache APISIX.",tags:["Ecosystem"],image:"https://static.api7.ai/uploads/2025/04/23/USwzplCO_apisix-mcp-briget-cover-final.webp"},o=void 0,s={permalink:"/blog/2025/04/21/host-mcp-server-with-api-gateway",source:"@site/blog/2025/04/21/host-mcp-server-with-api-gateway.md",title:"From stdio to HTTP SSE: Host Your MCP Server with APISIX API Gateway",description:"Discover APISIX-MCP, leveraging AI for effortless API management. Simplify resource operations with natural language in Apache APISIX.",date:"2025-04-21T00:00:00.000Z",formattedDate:"April 21, 2025",tags:[{label:"Ecosystem",permalink:"/blog/tags/ecosystem"}],readingTime:3.585,truncated:!0,authors:[{name:"Ming Wen",title:"author",url:"https://www.linkedin.com/in/ming-wen-api7/",image_url:"https://github.com/moonming.png",imageURL:"https://github.com/moonming.png"},{name:"Zeping Bai",title:"author",url:"https://github.com/bzp2010",image_url:"https://github.com/bzp2010.png",imageURL:"https://github.com/bzp2010.png"}],prevItem:{title:"APISIX Gateway Practices in Honor's Massive Business",permalink:"/blog/2025/04/27/apisix-honor-gateway-practice-in-massive-business"},nextItem:{title:"Introducing APISIX AI Gateway",permalink:"/blog/2025/04/08/introducing-apisix-ai-gateway"}},l={authorsImageUrls:[void 0,void 0]},c=[{value:"Introduction",id:"introduction",children:[],level:2},{value:"Model Context Protocol (MCP) Overview",id:"model-context-protocol-mcp-overview",children:[],level:2},{value:"What Is the <code>mcp-bridge</code> Plugin?",id:"what-is-the-mcp-bridge-plugin",children:[],level:2},{value:"How It Works and Architecture Diagram",id:"how-it-works-and-architecture-diagram",children:[],level:2},{value:"Application Scenarios and Benefits",id:"application-scenarios-and-benefits",children:[],level:2},{value:"Authentication and Rate Limiting with Apache APISIX Plugins",id:"authentication-and-rate-limiting-with-apache-apisix-plugins",children:[{value:"Authentication Plugins",id:"authentication-plugins",children:[],level:3},{value:"Rate-Limiting Plugins",id:"rate-limiting-plugins",children:[],level:3}],level:2},{value:"Adding Authentication and Rate Limiting to MCP Servers",id:"adding-authentication-and-rate-limiting-to-mcp-servers",children:[],level:2},{value:"Roadmap",id:"roadmap",children:[],level:2},{value:"Summary",id:"summary",children:[],level:2}],p={toc:c};function u(e){let{components:t,...i}=e;return(0,a.kt)("wrapper",(0,n.Z)({},p,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Discover how the Apache APISIX mcp-bridge plugin seamlessly converts stdio-based MCP servers to scalable HTTP SSE services.")),(0,a.kt)("h2",{id:"introduction"},"Introduction"),(0,a.kt)("p",null,"In contemporary API infrastructure, HTTP protocols and streaming communications (like SSE, WebSocket) have become mainstream for building real-time, interactive applications. Over the past few months, the Model Context Protocol (MCP) has gained popularity. However, most MCP Servers are implemented via stdio for local environments and cannot be invoked by external services and developers."),(0,a.kt)("p",null,"To bridge these services with modern API architectures, Apache APISIX has introduced the ",(0,a.kt)("inlineCode",{parentName:"p"},"mcp-bridge")," plugin. It seamlessly converts stdio-based MCP services into HTTP SSE streaming interfaces and manages them through an API gateway for routing and traffic management."),(0,a.kt)("h2",{id:"model-context-protocol-mcp-overview"},"Model Context Protocol (MCP) Overview"),(0,a.kt)("p",null,"MCP is an open protocol that standardizes how AI applications provide context information to large language models (LLMs). It allows developers to switch between different LLM providers while ensuring data security and facilitating integration with local or remote data sources. Supporting a client-server architecture, MCP servers expose specific functionalities that are accessible to clients via these servers."),(0,a.kt)("h2",{id:"what-is-the-mcp-bridge-plugin"},"What Is the ",(0,a.kt)("inlineCode",{parentName:"h2"},"mcp-bridge")," Plugin?"),(0,a.kt)("p",null,"The Apache APISIX ",(0,a.kt)("inlineCode",{parentName:"p"},"mcp-bridge")," plugin launches a subprocess to manage the MCP Server, takes over its stdio channel, transforms client HTTP SSE requests into MCP protocol calls, and pushes responses back to the client via SSE."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Key features:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\ud83d\udce1 Wraps MCP RPC calls into SSE message streams"),(0,a.kt)("li",{parentName:"ul"},"\ud83d\udd04 Manages subprocess stdio lifecycle with queued RPC scheduling"),(0,a.kt)("li",{parentName:"ul"},"\ud83d\uddc2\ufe0f Lightweight MCP session management (including session ID, ping keep-alive, and queuing)"),(0,a.kt)("li",{parentName:"ul"},"\ud83e\uddf0 Supports session sharing across multiple workers for stability in APISIX multi-worker environments")),(0,a.kt)("h2",{id:"how-it-works-and-architecture-diagram"},"How It Works and Architecture Diagram"),(0,a.kt)("p",null,"Below is a sequence diagram illustrating the working mechanism of the ",(0,a.kt)("inlineCode",{parentName:"p"},"mcp-bridge")," plugin, helping you to understand the data flow from stdio to SSE:"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://static.api7.ai/uploads/2025/04/21/7gnb0QrW_1-mcp-bridge-sequence-diagram.webp",alt:"MCP-Bridge Architecture Diagram"})),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u2705 Highlights:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"APISIX manages SSE long-lived connections"),(0,a.kt)("li",{parentName:"ul"},"The ",(0,a.kt)("inlineCode",{parentName:"li"},"mcp-bridge")," plugin handles subprocesses, stdio, and scheduling queues"),(0,a.kt)("li",{parentName:"ul"},"Clients receive real-time subprocess outputs, forming streaming SSE responses")),(0,a.kt)("h2",{id:"application-scenarios-and-benefits"},"Application Scenarios and Benefits"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u2705 Typical Application Scenarios")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\ud83d\udee0\ufe0f Integrating existing MCP/stdio services with web platforms"),(0,a.kt)("li",{parentName:"ul"},"\ud83d\udda5\ufe0f Cross-language and cross-platform subprocess service management")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u2705 Benefits")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\ud83c\udf10 Modernization: Instantly transform stdio services into HTTP SSE APIs"),(0,a.kt)("li",{parentName:"ul"},"\ud83d\udd79\ufe0f Managed: Unified management of subprocess launch and IO lifecycle"),(0,a.kt)("li",{parentName:"ul"},"\ud83d\udcc8 Scalability: Session sharing in multi-worker environments for large-scale deployment support"),(0,a.kt)("li",{parentName:"ul"},"\ud83d\udd04 Traffic Control Integration: Seamless API management system integration with APISIX traffic control, authentication, and rate-limiting plugins")),(0,a.kt)("h2",{id:"authentication-and-rate-limiting-with-apache-apisix-plugins"},"Authentication and Rate Limiting with Apache APISIX Plugins"),(0,a.kt)("p",null,"Apache APISIX provides robust authentication plugins (like OAuth 2.0, JWT, and OIDC) and rate-limiting plugins (such as rate limiting and circuit breakers). These enhance the ",(0,a.kt)("inlineCode",{parentName:"p"},"mcp-bridge")," plugin, ensuring secure authentication and traffic control for connected MCP services."),(0,a.kt)("h3",{id:"authentication-plugins"},"Authentication Plugins"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Support for OAuth 2.0, JWT, and OIDC plugins to protect APIs and MCP services."),(0,a.kt)("li",{parentName:"ul"},"Automatic client identity verification during API gateway requests to prevent unauthorized access.")),(0,a.kt)("h3",{id:"rate-limiting-plugins"},"Rate-Limiting Plugins"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Rate Limiting: Restricts each client's request rate to prevent system overload."),(0,a.kt)("li",{parentName:"ul"},"Circuit Breaker: Automatically switches or returns errors to avoid system crashes during high traffic or failures.")),(0,a.kt)("h2",{id:"adding-authentication-and-rate-limiting-to-mcp-servers"},"Adding Authentication and Rate Limiting to MCP Servers"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://static.api7.ai/uploads/2025/04/21/ffwep58W_2-add-auth-and-rate-limiting-to-mcp-server.webp",alt:"Add Authentication and Rate Limiting to MCP Servers"})),(0,a.kt)("p",null,"By integrating authentication and rate-limiting plugins with the ",(0,a.kt)("inlineCode",{parentName:"p"},"mcp-bridge")," plugin, you can enhance API security and ensure system stability in high-concurrency environments."),(0,a.kt)("h2",{id:"roadmap"},"Roadmap"),(0,a.kt)("p",null,"The current version is a prototype. Future enhancements include:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Currently, MCP sessions are not shared across multiple APISIX instances. For multi-node APISIX clusters, proper session persistence configuration on the front-end load balancer is essential to ensure requests from the same client always go to the same APISIX instance.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"The current MCP SSE connection is loop-driven. While the loop doesn't consume many resources (stdio read/write will be synchronous non-blocking calls), it's not efficient. We plan to connect to a message queue for an event-driven, scalable cluster approach.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"The MCP session management module is just a prototype. We intend to abstract an MCP proxy server module to support launching MCP servers within APISIX for advanced scenarios. This proxy server module will be event-driven rather than loop-driven."))),(0,a.kt)("h2",{id:"summary"},"Summary"),(0,a.kt)("p",null,"The Apache APISIX ",(0,a.kt)("inlineCode",{parentName:"p"},"mcp-bridge")," plugin significantly simplifies the integration of Model Context Protocol (MCP) services with the HTTP API world. It offers a modern streaming interface management approach for traditional services."))}u.isMDXComponent=!0}}]);