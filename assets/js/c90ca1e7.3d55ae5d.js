"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[75452],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>c});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),o=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=o(e.components);return a.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=o(n),c=r,h=u["".concat(p,".").concat(c)]||u[c]||m[c]||i;return n?a.createElement(h,l(l({ref:t},d),{},{components:n})):a.createElement(h,l({ref:t},d))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=u;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:r,l[1]=s;for(var o=2;o<i;o++)l[o]=n[o];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},12035:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const i={title:"traffic-split",keywords:["Apache APISIX","API Gateway","Traffic Split","Blue-green Deployment","Canary Deployment"],description:"This document contains information about the Apache APISIX traffic-split Plugin, you can use it to dynamically direct portions of traffic to various Upstream services."},l=void 0,s={unversionedId:"plugins/traffic-split",id:"version-3.10/plugins/traffic-split",isDocsHomePage:!1,title:"traffic-split",description:"This document contains information about the Apache APISIX traffic-split Plugin, you can use it to dynamically direct portions of traffic to various Upstream services.",source:"@site/docs-apisix_versioned_docs/version-3.10/plugins/traffic-split.md",sourceDirName:"plugins",slug:"/plugins/traffic-split",permalink:"/docs/apisix/3.10/plugins/traffic-split",editUrl:"/edit#https://github.com/apache/apisix/edit/release/3.10/docs/en/latest/plugins/traffic-split.md",tags:[],version:"3.10",frontMatter:{title:"traffic-split",keywords:["Apache APISIX","API Gateway","Traffic Split","Blue-green Deployment","Canary Deployment"],description:"This document contains information about the Apache APISIX traffic-split Plugin, you can use it to dynamically direct portions of traffic to various Upstream services."},sidebar:"version-3.10/docs",previous:{title:"api-breaker",permalink:"/docs/apisix/3.10/plugins/api-breaker"},next:{title:"request-id",permalink:"/docs/apisix/3.10/plugins/request-id"}},p=[{value:"Description",id:"description",children:[]},{value:"Attributes",id:"attributes",children:[]},{value:"Enable Plugin",id:"enable-plugin",children:[]},{value:"Example usage",id:"example-usage",children:[{value:"Canary release",id:"canary-release",children:[]},{value:"Blue-green release",id:"blue-green-release",children:[]},{value:"Custom release",id:"custom-release",children:[]},{value:"Multiple rules to correspond to Upstream",id:"multiple-rules-to-correspond-to-upstream",children:[]}]},{value:"Delete Plugin",id:"delete-plugin",children:[]}],o={toc:p};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},o,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"description"},"Description"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"traffic-split")," Plugin can be used to dynamically direct portions of traffic to various Upstream services."),(0,r.kt)("p",null,"This is done by configuring ",(0,r.kt)("inlineCode",{parentName:"p"},"match"),", which are custom rules for splitting traffic, and ",(0,r.kt)("inlineCode",{parentName:"p"},"weighted_upstreams")," which is a set of Upstreams to direct traffic to."),(0,r.kt)("p",null,"When a request is matched based on the ",(0,r.kt)("inlineCode",{parentName:"p"},"match")," attribute configuration, it will be directed to the Upstreams based on their configured ",(0,r.kt)("inlineCode",{parentName:"p"},"weights"),". You can also omit using the ",(0,r.kt)("inlineCode",{parentName:"p"},"match")," attribute and direct all traffic based on ",(0,r.kt)("inlineCode",{parentName:"p"},"weighted_upstreams"),"."),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"The traffic ratio between Upstream services may be less accurate since round robin algorithm is used to direct traffic (especially when the state is reset)."))),(0,r.kt)("h2",{id:"attributes"},"Attributes"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Valid values"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"rules.match"),(0,r.kt)("td",{parentName:"tr",align:null},"array","[object]"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Rules to match for conditional traffic split. By default the list is empty and the traffic will be split unconditionally.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"rules.match.vars"),(0,r.kt)("td",{parentName:"tr",align:null},"array","[array]"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"List of variables to match for filtering requests for conditional traffic split. It is in the format ",(0,r.kt)("inlineCode",{parentName:"td"},"{variable operator value}"),". For example, ",(0,r.kt)("inlineCode",{parentName:"td"},'{"arg_name", "==", "json"}'),". The variables here are consistent with NGINX internal variables. For details on supported operators, ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/api7/lua-resty-expr#operator-list"},"lua-resty-expr"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"rules.weighted_upstreams"),(0,r.kt)("td",{parentName:"tr",align:null},"array","[object]"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"List of Upstream configurations.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"weighted_upstreams.upstream_id"),(0,r.kt)("td",{parentName:"tr",align:null},"string/integer"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"ID of the configured Upstream object.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"weighted_upstreams.upstream"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Configuration of the Upstream.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"upstream.type"),(0,r.kt)("td",{parentName:"tr",align:null},"enum"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null},"roundrobin"),(0,r.kt)("td",{parentName:"tr",align:null},"[roundrobin, chash]"),(0,r.kt)("td",{parentName:"tr",align:null},"Type of mechanism to use for traffic splitting. ",(0,r.kt)("inlineCode",{parentName:"td"},"roundobin")," supports weighted load and ",(0,r.kt)("inlineCode",{parentName:"td"},"chash")," does consistent hashing.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"upstream.hash_on"),(0,r.kt)("td",{parentName:"tr",align:null},"enum"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null},"vars"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Only valid if the ",(0,r.kt)("inlineCode",{parentName:"td"},"type")," is ",(0,r.kt)("inlineCode",{parentName:"td"},"chash"),". Supported ",(0,r.kt)("inlineCode",{parentName:"td"},"vars")," (Nginx variables), ",(0,r.kt)("inlineCode",{parentName:"td"},"header")," (custom header), ",(0,r.kt)("inlineCode",{parentName:"td"},"cookie"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"consumer"),", and ",(0,r.kt)("inlineCode",{parentName:"td"},"vars_combinations"),". For more details, refer ",(0,r.kt)("a",{parentName:"td",href:"/docs/apisix/3.10/admin-api#upstream"},"Upstream"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"upstream.key"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Only valid if the ",(0,r.kt)("inlineCode",{parentName:"td"},"type")," is ",(0,r.kt)("inlineCode",{parentName:"td"},"chash"),". Finds the corresponding node ",(0,r.kt)("inlineCode",{parentName:"td"},"id")," according to ",(0,r.kt)("inlineCode",{parentName:"td"},"hash_on")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"key")," values. For more details, refer ",(0,r.kt)("a",{parentName:"td",href:"/docs/apisix/3.10/admin-api#upstream"},"Upstream"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"upstream.nodes"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"IP addresses (with optional ports) of the Upstream nodes represented as a hash table. In the hash table, the key is the IP address and the value is the weight of the node. Setting ",(0,r.kt)("inlineCode",{parentName:"td"},"weight")," to ",(0,r.kt)("inlineCode",{parentName:"td"},"0")," means that a request is never forwarded to that node.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"upstream.timeout"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null},"15"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Timeout in seconds for connecting, sending and receiving messages.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"upstream.pass_host"),(0,r.kt)("td",{parentName:"tr",align:null},"enum"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null},'"pass"'),(0,r.kt)("td",{parentName:"tr",align:null},'["pass", "node", "rewrite"]'),(0,r.kt)("td",{parentName:"tr",align:null},"Configures the host when the request is forwarded to the upstream. Can be one of ",(0,r.kt)("inlineCode",{parentName:"td"},"pass"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"node")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"rewrite"),". ",(0,r.kt)("inlineCode",{parentName:"td"},"pass"),"- transparently passes the client's host to the Upstream. ",(0,r.kt)("inlineCode",{parentName:"td"},"node"),"- uses the host configured in the node of the Upstream. ",(0,r.kt)("inlineCode",{parentName:"td"},"rewrite"),"- Uses the value configured in ",(0,r.kt)("inlineCode",{parentName:"td"},"upstream_host"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"upstream.name"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Identifier for the Upstream for specifying service name, usage scenarios etc.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"upstream.upstream_host"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Host of the Upstream request. Only valid when ",(0,r.kt)("inlineCode",{parentName:"td"},"pass_host")," attribute is set to ",(0,r.kt)("inlineCode",{parentName:"td"},"rewrite"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"weighted_upstreams.weight"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null},"weight = 1"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Weight to give to each Upstream node for splitting traffic.")))),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Some of the configuration fields supported in Upstream are not supported in weighted_upstreams.upstream. These fields are ",(0,r.kt)("inlineCode",{parentName:"p"},"service_name"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"discovery_type"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"checks"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"retries"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"retry_timeout"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"desc"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"scheme"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"labels"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"create_time"),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"update_time"),"."),(0,r.kt)("p",{parentName:"div"},"As a workaround, you can create an Upstream object and configure it in ",(0,r.kt)("inlineCode",{parentName:"p"},"weighted_upstreams.upstream_id")," to achieve these functionalities."))),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"IMPORTANT")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"In the ",(0,r.kt)("inlineCode",{parentName:"p"},"match")," attribute configuration, the expression in variable is related as AND whereas multiple variables are related by OR."),(0,r.kt)("p",{parentName:"div"},"If only the ",(0,r.kt)("inlineCode",{parentName:"p"},"weight")," attribute is configured, it corresponds to the weight of the Upstream service configured on the Route or Service. You can see this in action below."))),(0,r.kt)("h2",{id:"enable-plugin"},"Enable Plugin"),(0,r.kt)("p",null,"You can configure the Plugin on a Route as shown below:"),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"You can fetch the ",(0,r.kt)("inlineCode",{parentName:"p"},"admin_key")," from ",(0,r.kt)("inlineCode",{parentName:"p"},"config.yaml")," and save to an environment variable with the following command:"),(0,r.kt)("pre",{parentName:"div"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"admin_key=$(yq '.deployment.admin.admin_key[0].key' conf/config.yaml | sed 's/\"//g')\n")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl http://127.0.0.1:9180/apisix/admin/routes/1 \\\n-H "X-API-KEY: $admin_key" -X PUT -d \'\n{\n    "uri": "/index.html",\n    "plugins": {\n        "traffic-split": {\n            "rules": [\n                {\n                    "weighted_upstreams": [\n                        {\n                            "upstream": {\n                                "name": "upstream_A",\n                                "type": "roundrobin",\n                                "nodes": {\n                                    "127.0.0.1:1981":10\n                                },\n                                "timeout": {\n                                    "connect": 15,\n                                    "send": 15,\n                                    "read": 15\n                                }\n                            },\n                            "weight": 1\n                        },\n                        {\n                            "weight": 1\n                        }\n                    ]\n                }\n            ]\n        }\n    },\n    "upstream": {\n            "type": "roundrobin",\n            "nodes": {\n                "127.0.0.1:1980": 1\n            }\n    }\n}\'\n')),(0,r.kt)("p",null,"Alternatively, you can configure ",(0,r.kt)("inlineCode",{parentName:"p"},"upstream_id")," if you have already configured an Upstream object:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl http://127.0.0.1:9180/apisix/admin/routes/1 \\\n-H "X-API-KEY: $admin_key" -X PUT -d \'\n{\n    "uri": "/index.html",\n    "plugins": {\n        "traffic-split": {\n            "rules": [\n                {\n                    "weighted_upstreams": [\n                        {\n                            "upstream_id": 1,\n                            "weight": 1\n                        },\n                        {\n                            "weight": 1\n                        }\n                    ]\n                }\n            ]\n        }\n    },\n    "upstream": {\n            "type": "roundrobin",\n            "nodes": {\n                "127.0.0.1:1980": 1\n            }\n    }\n}\'\n')),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Configure via ",(0,r.kt)("inlineCode",{parentName:"p"},"upstream_id")," to reuse Upstream's health detection, retires, and other functions."))),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"You can use both ",(0,r.kt)("inlineCode",{parentName:"p"},"upstream")," configuration and ",(0,r.kt)("inlineCode",{parentName:"p"},"upstream_id")," configuration together."))),(0,r.kt)("h2",{id:"example-usage"},"Example usage"),(0,r.kt)("p",null,"The examples below shows different use cases for using the ",(0,r.kt)("inlineCode",{parentName:"p"},"traffic-split")," Plugin."),(0,r.kt)("h3",{id:"canary-release"},"Canary release"),(0,r.kt)("p",null,"This is the process of gradually rolling out a release by splitting an increasing percentage of traffic to the new release until all traffic is directed to the new release."),(0,r.kt)("p",null,"To set this up, you can configure the ",(0,r.kt)("inlineCode",{parentName:"p"},"weight")," attribute of your ",(0,r.kt)("inlineCode",{parentName:"p"},"weighted_upstreams")," as shown below:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl http://127.0.0.1:9180/apisix/admin/routes/1 \\\n-H "X-API-KEY: $admin_key" -X PUT -d \'\n{\n    "uri": "/index.html",\n    "plugins": {\n        "traffic-split": {\n            "rules": [\n                {\n                    "weighted_upstreams": [\n                        {\n                            "upstream": {\n                                "name": "upstream_A",\n                                "type": "roundrobin",\n                                "nodes": {\n                                    "127.0.0.1:1981":10\n                                },\n                                "timeout": {\n                                    "connect": 15,\n                                    "send": 15,\n                                    "read": 15\n                                }\n                            },\n                            "weight": 3\n                        },\n                        {\n                            "weight": 2\n                        }\n                    ]\n                }\n            ]\n        }\n    },\n    "upstream": {\n            "type": "roundrobin",\n            "nodes": {\n                "127.0.0.1:1980": 1\n            }\n    }\n}\'\n')),(0,r.kt)("p",null,"Here, the weights are in the ratio 3:2 which means that 60% of the traffic reaches the Upstream service running on ",(0,r.kt)("inlineCode",{parentName:"p"},":1981")," (Plugin's Upstream) and 40% reaches the service running on ",(0,r.kt)("inlineCode",{parentName:"p"},":1980")," which is the Route's Upstream service."),(0,r.kt)("p",null,"Now to test this configuration, if you make 5 requests, 3 will hit one service and 2 will hit the other:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"curl http://127.0.0.1:9080/index.html -i\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"HTTP/1.1 200 OK\nContent-Type: text/html; charset=utf-8\n...\nhello 1980\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"curl http://127.0.0.1:9080/index.html -i\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"HTTP/1.1 200 OK\nContent-Type: text/html; charset=utf-8\n...\nworld 1981\n")),(0,r.kt)("h3",{id:"blue-green-release"},"Blue-green release"),(0,r.kt)("p",null,'In this setup, user traffic is shifted from the "green" (production) environment to the "blue" (staging) environment once the new changes have been tested and accepted within the blue environment.'),(0,r.kt)("p",null,"To set this up, you can configure ",(0,r.kt)("inlineCode",{parentName:"p"},"match")," rules based on the request headers as shown below:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl http://127.0.0.1:9180/apisix/admin/routes/1 \\\n-H "X-API-KEY: $admin_key" -X PUT -d \'\n{\n    "uri": "/index.html",\n    "plugins": {\n        "traffic-split": {\n            "rules": [\n                {\n                    "match": [\n                        {\n                            "vars": [\n                                ["http_release","==","new_release"]\n                            ]\n                        }\n                    ],\n                    "weighted_upstreams": [\n                        {\n                            "upstream": {\n                                "name": "upstream_A",\n                                "type": "roundrobin",\n                                "nodes": {\n                                    "127.0.0.1:1981":10\n                                }\n                            }\n                        }\n                    ]\n                }\n            ]\n        }\n    },\n    "upstream": {\n            "type": "roundrobin",\n            "nodes": {\n                "127.0.0.1:1980": 1\n            }\n    }\n}\'\n')),(0,r.kt)("p",null,"Here, if the request comes with a ",(0,r.kt)("inlineCode",{parentName:"p"},"release")," header with value ",(0,r.kt)("inlineCode",{parentName:"p"},"new_release")," it is directed to the new Upstream."),(0,r.kt)("p",null,"Now if you send a request with ",(0,r.kt)("inlineCode",{parentName:"p"},"new_release")," as the value for the ",(0,r.kt)("inlineCode",{parentName:"p"},"release")," header, it will be directed to one Upstream and other requests will be directed to another Upstream."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"curl http://127.0.0.1:9080/index.html -H 'release: new_release' -i\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"HTTP/1.1 200 OK\nContent-Type: text/html; charset=utf-8\n...\nworld 1981\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"curl http://127.0.0.1:9080/index.html -H 'release: old_release' -i\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"HTTP/1.1 200 OK\nContent-Type: text/html; charset=utf-8\n...\nhello 1980\n")),(0,r.kt)("h3",{id:"custom-release"},"Custom release"),(0,r.kt)("p",null,"You can also make custom releases by configuring rules and setting weights."),(0,r.kt)("p",null,"In the example below, only one ",(0,r.kt)("inlineCode",{parentName:"p"},"vars")," rule is configured and the multiple expressions in the rule have an AND relationship. The weights are configured in 3:2 ratio and traffic not matching the ",(0,r.kt)("inlineCode",{parentName:"p"},"vars")," will be redirected to the Upstream configured on the Route."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl http://127.0.0.1:9180/apisix/admin/routes/1 \\\n-H "X-API-KEY: $admin_key" -X PUT -d \'\n{\n    "uri": "/index.html",\n    "plugins": {\n        "traffic-split": {\n            "rules": [\n                {\n                    "match": [\n                        {\n                            "vars": [\n                                ["arg_name","==","jack"],\n                                ["http_user-id",">","23"],\n                                ["http_apisix-key","~~","[a-z]+"]\n                            ]\n                        }\n                    ],\n                    "weighted_upstreams": [\n                        {\n                            "upstream": {\n                                "name": "upstream_A",\n                                "type": "roundrobin",\n                                "nodes": {\n                                    "127.0.0.1:1981":10\n                                }\n                            },\n                            "weight": 3\n                        },\n                        {\n                            "weight": 2\n                        }\n                    ]\n                }\n            ]\n        }\n    },\n    "upstream": {\n            "type": "roundrobin",\n            "nodes": {\n                "127.0.0.1:1980": 1\n            }\n    }\n}\'\n')),(0,r.kt)("p",null,"After the rules are matched, 60% of the traffic hit the Upstream on port ",(0,r.kt)("inlineCode",{parentName:"p"},"1981")," and 40% hit the one on ",(0,r.kt)("inlineCode",{parentName:"p"},"1980"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"curl 'http://127.0.0.1:9080/index.html?name=jack' \\\n-H 'user-id:30' -H 'apisix-key: hello' -i\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"HTTP/1.1 200 OK\nContent-Type: text/html; charset=utf-8\n...\nworld 1981\n")),(0,r.kt)("p",null,"If the rule fails to match, then the request is directed to the service on ",(0,r.kt)("inlineCode",{parentName:"p"},"1980"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"curl 'http://127.0.0.1:9080/index.html?name=jack' \\\n-H 'user-id:30' -H 'apisix-key: hello' -i\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"HTTP/1.1 200 OK\nContent-Type: text/html; charset=utf-8\n...\nhello 1980\n")),(0,r.kt)("p",null,"In the example below, multiple ",(0,r.kt)("inlineCode",{parentName:"p"},"vars")," rules are configured and they have an OR relationship."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl http://127.0.0.1:9180/apisix/admin/routes/1 \\\n-H "X-API-KEY: $admin_key" -X PUT -d \'\n{\n    "uri": "/index.html",\n    "plugins": {\n        "traffic-split": {\n            "rules": [\n                {\n                    "match": [\n                        {\n                            "vars": [\n                                ["arg_name","==","jack"],\n                                ["http_user-id",">","23"],\n                                ["http_apisix-key","~~","[a-z]+"]\n                            ]\n                        },\n                        {\n                            "vars": [\n                                ["arg_name2","==","rose"],\n                                ["http_user-id2","!",">","33"],\n                                ["http_apisix-key2","~~","[a-z]+"]\n                            ]\n                        }\n                    ],\n                    "weighted_upstreams": [\n                        {\n                            "upstream": {\n                                "name": "upstream_A",\n                                "type": "roundrobin",\n                                "nodes": {\n                                    "127.0.0.1:1981":10\n                                }\n                            },\n                            "weight": 3\n                        },\n                        {\n                            "weight": 2\n                        }\n                    ]\n                }\n            ]\n        }\n    },\n    "upstream": {\n            "type": "roundrobin",\n            "nodes": {\n                "127.0.0.1:1980": 1\n            }\n    }\n}\'\n')),(0,r.kt)("p",null,"In the example below, both the ",(0,r.kt)("inlineCode",{parentName:"p"},"vars")," rules are matched. After the rules are matched, 60% of the traffic is directed to the service on ",(0,r.kt)("inlineCode",{parentName:"p"},"1981")," and 40% to the service on ",(0,r.kt)("inlineCode",{parentName:"p"},"1980"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"curl 'http://127.0.0.1:9080/index.html?name=jack&name2=rose' \\\n-H 'user-id:30' -H 'user-id2:22' -H 'apisix-key: hello' -H 'apisix-key2: world' -i\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"HTTP/1.1 200 OK\nContent-Type: text/html; charset=utf-8\n...\nworld 1981\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"curl 'http://127.0.0.1:9080/index.html?name=jack&name2=rose' \\\n-H 'user-id:30' -H 'user-id2:22' -H 'apisix-key: hello' -H 'apisix-key2: world' -i\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"HTTP/1.1 200 OK\nContent-Type: text/html; charset=utf-8\n...\nhello 1980\n")),(0,r.kt)("p",null,"In the example below, the second ",(0,r.kt)("inlineCode",{parentName:"p"},"vars")," rule fail to match. But since it is an OR relationship, the rules are matched and traffic is directed as configured:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"curl 'http://127.0.0.1:9080/index.html?name=jack' \\\n-H 'user-id:30' -H 'user-id2:22' -H 'apisix-key: hello' -H 'apisix-key2: world' -i\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"HTTP/1.1 200 OK\nContent-Type: text/html; charset=utf-8\n...\nworld 1981\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"curl 'http://127.0.0.1:9080/index.html?name=jack' \\\n-H 'user-id:30' -H 'user-id2:22' -H 'apisix-key: hello' -H 'apisix-key2: world' -i\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"HTTP/1.1 200 OK\nContent-Type: text/html; charset=utf-8\n...\nhello 1980\n")),(0,r.kt)("p",null,"In the example below the required headers are missing and both the ",(0,r.kt)("inlineCode",{parentName:"p"},"vars")," rules fail to match and the request is directed to the default Upstream of the Route (",(0,r.kt)("inlineCode",{parentName:"p"},"1980"),"):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"curl 'http://127.0.0.1:9080/index.html?name=jack' -i\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"HTTP/1.1 200 OK\nContent-Type: text/html; charset=utf-8\n...\nhello 1980\n")),(0,r.kt)("h3",{id:"multiple-rules-to-correspond-to-upstream"},"Multiple rules to correspond to Upstream"),(0,r.kt)("p",null,"You can achieve one-to-one correspondence between rules and Upstream by configuring multiple ",(0,r.kt)("inlineCode",{parentName:"p"},"rules"),":"),(0,r.kt)("p",null,"For example, when the request header ",(0,r.kt)("inlineCode",{parentName:"p"},"x-api-id")," is equal to ",(0,r.kt)("inlineCode",{parentName:"p"},"1")," it should be directed to Upstream on port ",(0,r.kt)("inlineCode",{parentName:"p"},"1981")," and if it is equal to ",(0,r.kt)("inlineCode",{parentName:"p"},"2")," it should be directed to Upstream on port ",(0,r.kt)("inlineCode",{parentName:"p"},"1982"),". And in other cases, it should default to the Upstream on port ",(0,r.kt)("inlineCode",{parentName:"p"},"1980"),". You can configure this as shown below:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl http://127.0.0.1:9180/apisix/admin/routes/1 \\\n-H "X-API-KEY: $admin_key" -X PUT -d \'\n{\n    "uri": "/hello",\n    "plugins": {\n        "traffic-split": {\n            "rules": [\n                {\n                    "match": [\n                        {\n                            "vars": [\n                                ["http_x-api-id","==","1"]\n                            ]\n                        }\n                    ],\n                    "weighted_upstreams": [\n                        {\n                            "upstream": {\n                                "name": "upstream-A",\n                                "type": "roundrobin",\n                                "nodes": {\n                                    "127.0.0.1:1981":1\n                                }\n                            },\n                            "weight": 3\n                        }\n                    ]\n                },\n                {\n                    "match": [\n                        {\n                            "vars": [\n                                ["http_x-api-id","==","2"]\n                            ]\n                        }\n                    ],\n                    "weighted_upstreams": [\n                        {\n                            "upstream": {\n                                "name": "upstream-B",\n                                "type": "roundrobin",\n                                "nodes": {\n                                    "127.0.0.1:1982":1\n                                }\n                            },\n                            "weight": 3\n                        }\n                    ]\n                }\n            ]\n        }\n    },\n    "upstream": {\n            "type": "roundrobin",\n            "nodes": {\n                "127.0.0.1:1980": 1\n            }\n    }\n}\'\n')),(0,r.kt)("p",null,"Now, when the request header ",(0,r.kt)("inlineCode",{parentName:"p"},"x-api-id")," is equal to ",(0,r.kt)("inlineCode",{parentName:"p"},"1"),", it will hit the Upstream on ",(0,r.kt)("inlineCode",{parentName:"p"},"1981"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"curl http://127.0.0.1:9080/hello -H 'x-api-id: 1'\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"1981\n")),(0,r.kt)("p",null,"If request header ",(0,r.kt)("inlineCode",{parentName:"p"},"x-api-id")," is equal to ",(0,r.kt)("inlineCode",{parentName:"p"},"2"),", it will hit the Upstream on ",(0,r.kt)("inlineCode",{parentName:"p"},"1982"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"curl http://127.0.0.1:9080/hello -H 'x-api-id: 2'\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"1982\n")),(0,r.kt)("p",null,"If request header ",(0,r.kt)("inlineCode",{parentName:"p"},"x-api-id")," is equal to ",(0,r.kt)("inlineCode",{parentName:"p"},"3"),", the rules do not match, and it will hit the Upstream on ",(0,r.kt)("inlineCode",{parentName:"p"},"1980"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"curl http://127.0.0.1:9080/hello -H 'x-api-id: 3'\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"1980\n")),(0,r.kt)("h2",{id:"delete-plugin"},"Delete Plugin"),(0,r.kt)("p",null,"To remove the ",(0,r.kt)("inlineCode",{parentName:"p"},"traffic-split")," Plugin, you can delete the corresponding JSON configuration from the Plugin configuration. APISIX will automatically reload and you do not have to restart for this to take effect."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl http://127.0.0.1:9180/apisix/admin/routes/1 \\\n-H "X-API-KEY: $admin_key" -X PUT -d \'\n{\n    "uri": "/index.html",\n    "plugins": {},\n    "upstream": {\n        "type": "roundrobin",\n        "nodes": {\n            "127.0.0.1:1980": 1\n        }\n    }\n}\'\n')))}d.isMDXComponent=!0}}]);