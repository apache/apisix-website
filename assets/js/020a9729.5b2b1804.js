"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[77247],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),g=p(n),m=r,k=g["".concat(s,".").concat(m)]||g[m]||u[m]||l;return n?a.createElement(k,o(o({ref:t},d),{},{components:n})):a.createElement(k,o({ref:t},d))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=g;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var p=2;p<l;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},58298:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>o,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var a=n(87462),r=(n(67294),n(3905));const l={title:"loki-logger",keywords:["Apache APISIX","API Gateway","Plugin","Loki-logger","Grafana Loki"],description:"The loki-logger Plugin pushes request and response logs in batches to Grafana Loki, via the Loki HTTP API /loki/api/v1/push. The Plugin also supports the customization of log formats."},o=void 0,i={unversionedId:"plugins/loki-logger",id:"version-3.14/plugins/loki-logger",isDocsHomePage:!1,title:"loki-logger",description:"The loki-logger Plugin pushes request and response logs in batches to Grafana Loki, via the Loki HTTP API /loki/api/v1/push. The Plugin also supports the customization of log formats.",source:"@site/docs-apisix_versioned_docs/version-3.14/plugins/loki-logger.md",sourceDirName:"plugins",slug:"/plugins/loki-logger",permalink:"/docs/apisix/plugins/loki-logger",editUrl:"/edit#https://github.com/apache/apisix/edit/release/3.14/docs/en/latest/plugins/loki-logger.md",tags:[],version:"3.14",frontMatter:{title:"loki-logger",keywords:["Apache APISIX","API Gateway","Plugin","Loki-logger","Grafana Loki"],description:"The loki-logger Plugin pushes request and response logs in batches to Grafana Loki, via the Loki HTTP API /loki/api/v1/push. The Plugin also supports the customization of log formats."},sidebar:"version-3.14/docs",previous:{title:"tencent-cloud-cls",permalink:"/docs/apisix/plugins/tencent-cloud-cls"},next:{title:"lago",permalink:"/docs/apisix/plugins/lago"}},s=[{value:"Description",id:"description",children:[]},{value:"Attributes",id:"attributes",children:[]},{value:"Plugin Metadata",id:"plugin-metadata",children:[]},{value:"Examples",id:"examples",children:[{value:"Log Requests and Responses in Default Log Format",id:"log-requests-and-responses-in-default-log-format",children:[]},{value:"Customize Log Format with Plugin Metadata",id:"customize-log-format-with-plugin-metadata",children:[]},{value:"Log Request Bodies Conditionally",id:"log-request-bodies-conditionally",children:[]}]},{value:"FAQ",id:"faq",children:[{value:"Logs are not pushed properly",id:"logs-are-not-pushed-properly",children:[]},{value:"Getting errors when RPS is high?",id:"getting-errors-when-rps-is-high",children:[]}]}],p={toc:s};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("head",null,(0,r.kt)("link",{rel:"canonical",href:"https://docs.api7.ai/hub/loki-logger"})),(0,r.kt)("h2",{id:"description"},"Description"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"loki-logger")," Plugin pushes request and response logs in batches to ",(0,r.kt)("a",{parentName:"p",href:"https://grafana.com/oss/loki/"},"Grafana Loki"),", via the ",(0,r.kt)("a",{parentName:"p",href:"https://grafana.com/docs/loki/latest/reference/loki-http-api/#loki-http-api"},"Loki HTTP API")," ",(0,r.kt)("inlineCode",{parentName:"p"},"/loki/api/v1/push"),". The Plugin also supports the customization of log formats."),(0,r.kt)("p",null,"When enabled, the Plugin will serialize the request context information to ",(0,r.kt)("a",{parentName:"p",href:"https://grafana.com/docs/loki/latest/api/#push-log-entries-to-loki"},"JSON objects")," and add them to the queue, before they are pushed to Loki. See ",(0,r.kt)("a",{parentName:"p",href:"/docs/apisix/batch-processor"},"batch processor")," for more details."),(0,r.kt)("h2",{id:"attributes"},"Attributes"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Valid values"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"endpoint_addrs"),(0,r.kt)("td",{parentName:"tr",align:null},"array","[string]"),(0,r.kt)("td",{parentName:"tr",align:null},"True"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Loki API base URLs, such as ",(0,r.kt)("inlineCode",{parentName:"td"},"http://127.0.0.1:3100"),". If multiple endpoints are configured, the log will be pushed to a randomly determined endpoint from the list.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"endpoint_uri"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null},"/loki/api/v1/push"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"URI path to the Loki ingest endpoint.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"tenant_id"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null},"fake"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Loki tenant ID. According to Loki's ",(0,r.kt)("a",{parentName:"td",href:"https://grafana.com/docs/loki/latest/operations/multi-tenancy/#multi-tenancy"},"multi-tenancy documentation"),", the default value is set to ",(0,r.kt)("inlineCode",{parentName:"td"},"fake")," under single-tenancy.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"headers"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Key-value pairs of request headers (settings for ",(0,r.kt)("inlineCode",{parentName:"td"},"X-Scope-OrgID")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"Content-Type")," will be ignored).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"log_labels"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null},'{job = "apisix"}'),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Loki log label. Support ",(0,r.kt)("a",{parentName:"td",href:"https://nginx.org/en/docs/varindex.html"},"NGINX variables")," and constant strings in values. Variables should be prefixed with a ",(0,r.kt)("inlineCode",{parentName:"td"},"$")," sign. For example, the label can be ",(0,r.kt)("inlineCode",{parentName:"td"},'{"origin" = "apisix"}')," or ",(0,r.kt)("inlineCode",{parentName:"td"},'{"origin" = "$remote_addr"}'),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ssl_verify"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"If true, verify Loki's SSL certificates.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"timeout"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null},"3000"),(0,r.kt)("td",{parentName:"tr",align:null},"[1, 60000]"),(0,r.kt)("td",{parentName:"tr",align:null},"Timeout for the Loki service HTTP call in milliseconds.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"keepalive"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"If true, keep the connection alive for multiple requests.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"keepalive_timeout"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null},"60000"),(0,r.kt)("td",{parentName:"tr",align:null},">=1000"),(0,r.kt)("td",{parentName:"tr",align:null},"Keepalive timeout in milliseconds.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"keepalive_pool"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null},"5"),(0,r.kt)("td",{parentName:"tr",align:null},">=1"),(0,r.kt)("td",{parentName:"tr",align:null},"Maximum number of connections in the connection pool.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"log_format"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Custom log format in key-value pairs in JSON format. Support ",(0,r.kt)("a",{parentName:"td",href:"/docs/apisix/apisix-variable"},"APISIX variables")," and ",(0,r.kt)("a",{parentName:"td",href:"http://nginx.org/en/docs/varindex.html"},"NGINX variables")," in values.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"name"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null},"loki-logger"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Unique identifier of the Plugin for the batch processor. If you use ",(0,r.kt)("a",{parentName:"td",href:"/docs/apisix/plugins/prometheus"},"Prometheus")," to monitor APISIX metrics, the name is exported in ",(0,r.kt)("inlineCode",{parentName:"td"},"apisix_batch_process_entries"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"include_req_body"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"If true, include the request body in the log. Note that if the request body is too big to be kept in the memory, it can not be logged due to NGINX's limitations.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"include_req_body_expr"),(0,r.kt)("td",{parentName:"tr",align:null},"array","[array]"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"An array of one or more conditions in the form of ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/api7/lua-resty-expr"},"lua-resty-expr"),". Used when the ",(0,r.kt)("inlineCode",{parentName:"td"},"include_req_body")," is true. Request body would only be logged when the expressions configured here evaluate to true.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"include_resp_body"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"If true, include the response body in the log.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"include_resp_body_expr"),(0,r.kt)("td",{parentName:"tr",align:null},"array","[array]"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"An array of one or more conditions in the form of ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/api7/lua-resty-expr"},"lua-resty-expr"),". Used when the ",(0,r.kt)("inlineCode",{parentName:"td"},"include_resp_body")," is true. Response body would only be logged when the expressions configured here evaluate to true.")))),(0,r.kt)("p",null,"This Plugin supports using batch processors to aggregate and process entries (logs/data) in a batch. This avoids the need for frequently submitting the data. The batch processor submits data every ",(0,r.kt)("inlineCode",{parentName:"p"},"5")," seconds or when the data in the queue reaches ",(0,r.kt)("inlineCode",{parentName:"p"},"1000"),". See ",(0,r.kt)("a",{parentName:"p",href:"/docs/apisix/batch-processor#configuration"},"Batch Processor")," for more information or setting your custom configuration."),(0,r.kt)("h2",{id:"plugin-metadata"},"Plugin Metadata"),(0,r.kt)("p",null,"You can also configure log format on a global scale using the ",(0,r.kt)("a",{parentName:"p",href:"/docs/apisix/terminology/plugin-metadata"},"Plugin Metadata"),", which configures the log format for all ",(0,r.kt)("inlineCode",{parentName:"p"},"loki-logger")," Plugin instances. If the log format configured on the individual Plugin instance differs from the log format configured on Plugin metadata, the log format configured on the individual Plugin instance takes precedence."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"log_format"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Custom log format in key-value pairs in JSON format. Support ",(0,r.kt)("a",{parentName:"td",href:"/docs/apisix/apisix-variable"},"APISIX variables")," and ",(0,r.kt)("a",{parentName:"td",href:"http://nginx.org/en/docs/varindex.html"},"NGINX variables")," in values.")))),(0,r.kt)("h2",{id:"examples"},"Examples"),(0,r.kt)("p",null,"The examples below demonstrate how you can configure ",(0,r.kt)("inlineCode",{parentName:"p"},"loki-logger")," Plugin for different scenarios."),(0,r.kt)("p",null,"To follow along the examples, start a sample Loki instance in Docker:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"wget https://raw.githubusercontent.com/grafana/loki/v3.0.0/cmd/loki/loki-local-config.yaml -O loki-config.yaml\ndocker run --name loki -d -v $(pwd):/mnt/config -p 3100:3100 grafana/loki:3.2.1 -config.file=/mnt/config/loki-config.yaml\n")),(0,r.kt)("p",null,"Additionally, start a Grafana instance to view and visualize the logs:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"docker run -d --name=apisix-quickstart-grafana \\\n  -p 3000:3000 \\\n  grafana/grafana-oss\n")),(0,r.kt)("p",null,"To connect Loki and Grafana, visit Grafana at ",(0,r.kt)("a",{parentName:"p",href:"http://localhost:3000"},(0,r.kt)("inlineCode",{parentName:"a"},"http://localhost:3000")),". Under ",(0,r.kt)("strong",{parentName:"p"},"Connections > Data sources"),", add a new data source and select Loki. Your connection URL should follow the format of ",(0,r.kt)("inlineCode",{parentName:"p"},"http://{your_ip_address}:3100"),". When saving the new data source, Grafana should also test the connection, and you are expected to see Grafana notifying the data source is successfully connected."),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"You can fetch the ",(0,r.kt)("inlineCode",{parentName:"p"},"admin_key")," from ",(0,r.kt)("inlineCode",{parentName:"p"},"config.yaml")," and save to an environment variable with the following command:"),(0,r.kt)("pre",{parentName:"div"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"admin_key=$(yq '.deployment.admin.admin_key[0].key' conf/config.yaml | sed 's/\"//g')\n")))),(0,r.kt)("h3",{id:"log-requests-and-responses-in-default-log-format"},"Log Requests and Responses in Default Log Format"),(0,r.kt)("p",null,"The following example demonstrates how you can configure the ",(0,r.kt)("inlineCode",{parentName:"p"},"loki-logger")," Plugin on a Route to log requests and responses going through the route."),(0,r.kt)("p",null,"Create a Route with the ",(0,r.kt)("inlineCode",{parentName:"p"},"loki-logger")," Plugin and configure the address of Loki:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl "http://127.0.0.1:9180/apisix/admin/routes" -X PUT \\\n  -H "X-API-KEY: ${admin_key}" \\\n  -d \'{\n    "id": "loki-logger-route",\n    "uri": "/anything",\n    "plugins": {\n      "loki-logger": {\n        "endpoint_addrs": ["http://192.168.1.5:3100"]\n      }\n    },\n    "upstream": {\n      "nodes": {\n        "httpbin.org:80": 1\n      },\n      "type": "roundrobin"\n    }\n  }\'\n')),(0,r.kt)("p",null,"Send a few requests to the Route to generate log entries:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl "http://127.0.0.1:9080/anything"\n')),(0,r.kt)("p",null,"You should receive ",(0,r.kt)("inlineCode",{parentName:"p"},"HTTP/1.1 200 OK")," responses for all requests."),(0,r.kt)("p",null,"Navigate to the ",(0,r.kt)("a",{parentName:"p",href:"http://localhost:3000/explore"},"Grafana explore view")," and run a query ",(0,r.kt)("inlineCode",{parentName:"p"},"job = apisix"),". You should see a number of logs corresponding to your requests, such as the following:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "route_id": "loki-logger-route",\n  "response": {\n    "status": 200,\n    "headers": {\n      "date": "Fri, 03 Jan 2025 03:54:26 GMT",\n      "server": "APISIX/3.11.0",\n      "access-control-allow-credentials": "true",\n      "content-length": "391",\n      "access-control-allow-origin": "*",\n      "content-type": "application/json",\n      "connection": "close"\n    },\n    "size": 619\n  },\n  "start_time": 1735876466,\n  "client_ip": "192.168.65.1",\n  "service_id": "",\n  "apisix_latency": 5.0000038146973,\n  "upstream": "34.197.122.172:80",\n  "upstream_latency": 666,\n  "server": {\n    "hostname": "0b9a772e68f8",\n    "version": "3.11.0"\n  },\n  "request": {\n    "headers": {\n      "user-agent": "curl/8.6.0",\n      "accept": "*/*",\n      "host": "127.0.0.1:9080"\n    },\n    "size": 85,\n    "method": "GET",\n    "url": "http://127.0.0.1:9080/anything",\n    "querystring": {},\n    "uri": "/anything"\n  },\n  "latency": 671.0000038147\n}\n')),(0,r.kt)("p",null,"This verifies that Loki has been receiving logs from APISIX. You may also create dashboards in Grafana to further visualize and analyze the logs."),(0,r.kt)("h3",{id:"customize-log-format-with-plugin-metadata"},"Customize Log Format with Plugin Metadata"),(0,r.kt)("p",null,"The following example demonstrates how you can customize log format using ",(0,r.kt)("a",{parentName:"p",href:"/docs/apisix/terminology/plugin-metadata"},"Plugin Metadata"),"."),(0,r.kt)("p",null,"Create a Route with the ",(0,r.kt)("inlineCode",{parentName:"p"},"loki-logger")," plugin:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl "http://127.0.0.1:9180/apisix/admin/routes" -X PUT \\\n  -H "X-API-KEY: ${admin_key}" \\\n  -d \'{\n    "id": "loki-logger-route",\n    "uri": "/anything",\n    "plugins": {\n      "loki-logger": {\n        "endpoint_addrs": ["http://192.168.1.5:3100"]\n      }\n    },\n    "upstream": {\n      "type": "roundrobin",\n      "nodes": {\n        "httpbin.org": 1\n      }\n    }\n  }\'\n')),(0,r.kt)("p",null,"Configure Plugin metadata for ",(0,r.kt)("inlineCode",{parentName:"p"},"loki-logger"),", which will update the log format for all routes of which requests would be logged:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl "http://127.0.0.1:9180/apisix/admin/plugin_metadata/loki-logger" -X PUT \\\n  -H \'X-API-KEY: ${admin_key}\' \\\n  -d \'{\n    "log_format": {\n      "host": "$host",\n      "client_ip": "$remote_addr",\n      "route_id": "$route_id",\n      "@timestamp": "$time_iso8601"\n    }\n  }\'\n')),(0,r.kt)("p",null,"Send a request to the Route to generate a new log entry:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl -i "http://127.0.0.1:9080/anything"\n')),(0,r.kt)("p",null,"You should receive an ",(0,r.kt)("inlineCode",{parentName:"p"},"HTTP/1.1 200 OK")," response."),(0,r.kt)("p",null,"Navigate to the ",(0,r.kt)("a",{parentName:"p",href:"http://localhost:3000/explore"},"Grafana explore view")," and run a query ",(0,r.kt)("inlineCode",{parentName:"p"},"job = apisix"),". You should see a log entry corresponding to your request, similar to the following:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "@timestamp":"2025-01-03T21:11:34+00:00",\n  "client_ip":"192.168.65.1",\n  "route_id":"loki-logger-route",\n  "host":"127.0.0.1"\n}\n')),(0,r.kt)("p",null,"If the Plugin on a Route specifies a specific log format, it will take precedence over the log format specified in the Plugin metadata. For instance, update the Plugin on the previous Route as such:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl "http://127.0.0.1:9180/apisix/admin/routes/loki-logger-route" -X PATCH \\\n  -H "X-API-KEY: ${admin_key}" \\\n  -d \'{\n    "plugins": {\n      "loki-logger": {\n        "log_format": {\n          "route_id": "$route_id",\n          "client_ip": "$remote_addr",\n          "@timestamp": "$time_iso8601"\n        }\n      }\n    }\n  }\'\n')),(0,r.kt)("p",null,"Send a request to the Route to generate a new log entry:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl -i "http://127.0.0.1:9080/anything"\n')),(0,r.kt)("p",null,"You should receive an ",(0,r.kt)("inlineCode",{parentName:"p"},"HTTP/1.1 200 OK")," response."),(0,r.kt)("p",null,"Navigate to the ",(0,r.kt)("a",{parentName:"p",href:"http://localhost:3000/explore"},"Grafana explore view")," and re-run the query ",(0,r.kt)("inlineCode",{parentName:"p"},"job = apisix"),". You should see a log entry corresponding to your request, consistent with the format configured on the route, similar to the following:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "client_ip":"192.168.65.1",\n  "route_id":"loki-logger-route",\n  "@timestamp":"2025-01-03T21:19:45+00:00"\n}\n')),(0,r.kt)("h3",{id:"log-request-bodies-conditionally"},"Log Request Bodies Conditionally"),(0,r.kt)("p",null,"The following example demonstrates how you can conditionally log request body."),(0,r.kt)("p",null,"Create a Route with ",(0,r.kt)("inlineCode",{parentName:"p"},"loki-logger")," to only log request body if the URL query string ",(0,r.kt)("inlineCode",{parentName:"p"},"log_body")," is ",(0,r.kt)("inlineCode",{parentName:"p"},"yes"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl "http://127.0.0.1:9180/apisix/admin/routes" -X PUT \\\n  -H "X-API-KEY: ${admin_key}" \\\n  -d \'{\n    "id": "loki-logger-route",\n    "uri": "/anything",\n    "plugins": {\n      "loki-logger": {\n        "endpoint_addrs": ["http://192.168.1.5:3100"],\n        "include_req_body": true,\n        "include_req_body_expr": [["arg_log_body", "==", "yes"]]\n      }\n    },\n    "upstream": {\n      "nodes": {\n        "httpbin.org:80": 1\n      },\n      "type": "roundrobin"\n    }\n  }\'\n')),(0,r.kt)("p",null,"Send a request to the Route with a URL query string satisfying the condition:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl -i "http://127.0.0.1:9080/anything?log_body=yes" -X POST -d \'{"env": "dev"}\'\n')),(0,r.kt)("p",null,"Navigate to the ",(0,r.kt)("a",{parentName:"p",href:"http://localhost:3000/explore"},"Grafana explore view")," and run the query ",(0,r.kt)("inlineCode",{parentName:"p"},"job = apisix"),". You should see a log entry corresponding to your request, where the request body is logged:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "route_id": "loki-logger-route",\n  ...,\n  "request": {\n    "headers": {\n      ...\n    },\n    "body": "{\\"env\\": \\"dev\\"}",\n    "size": 182,\n    "method": "POST",\n    "url": "http://127.0.0.1:9080/anything?log_body=yes",\n    "querystring": {\n      "log_body": "yes"\n    },\n    "uri": "/anything?log_body=yes"\n  },\n  "latency": 809.99994277954\n}\n')),(0,r.kt)("p",null,"Send a request to the Route without any URL query string:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl -i "http://127.0.0.1:9080/anything" -X POST -d \'{"env": "dev"}\'\n')),(0,r.kt)("p",null,"Navigate to the ",(0,r.kt)("a",{parentName:"p",href:"http://localhost:3000/explore"},"Grafana explore view")," and run the query ",(0,r.kt)("inlineCode",{parentName:"p"},"job = apisix"),". You should see a log entry corresponding to your request, where the request body is not logged:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "route_id": "loki-logger-route",\n  ...,\n  "request": {\n    "headers": {\n      ...\n    },\n    "size": 169,\n    "method": "POST",\n    "url": "http://127.0.0.1:9080/anything",\n    "querystring": {},\n    "uri": "/anything"\n  },\n  "latency": 557.00016021729\n}\n')),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"If you have customized the ",(0,r.kt)("inlineCode",{parentName:"p"},"log_format")," in addition to setting ",(0,r.kt)("inlineCode",{parentName:"p"},"include_req_body")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"include_resp_body")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),", the Plugin would not include the bodies in the logs."),(0,r.kt)("p",{parentName:"div"},"As a workaround, you may be able to use the NGINX variable ",(0,r.kt)("inlineCode",{parentName:"p"},"$request_body")," in the log format, such as:"),(0,r.kt)("pre",{parentName:"div"},(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "kafka-logger": {\n    ...,\n    "log_format": {"body": "$request_body"}\n  }\n}\n')))),(0,r.kt)("h2",{id:"faq"},"FAQ"),(0,r.kt)("h3",{id:"logs-are-not-pushed-properly"},"Logs are not pushed properly"),(0,r.kt)("p",null,"Look at ",(0,r.kt)("inlineCode",{parentName:"p"},"error.log")," for such a log."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"2023/04/30 13:45:46 [error] 19381#19381: *1075673 [lua] batch-processor.lua:95: Batch Processor[loki logger] failed to process entries: loki server returned status: 401, body: no org id, context: ngx.timer, client: 127.0.0.1, server: 0.0.0.0:9081\n")),(0,r.kt)("p",null,"The error can be diagnosed based on the error code in the ",(0,r.kt)("inlineCode",{parentName:"p"},"failed to process entries: loki server returned status: 401, body: no org id")," and the response body of the loki server."),(0,r.kt)("h3",{id:"getting-errors-when-rps-is-high"},"Getting errors when RPS is high?"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Make sure to ",(0,r.kt)("inlineCode",{parentName:"p"},"keepalive")," related configuration is set properly. See ",(0,r.kt)("a",{parentName:"p",href:"#attributes"},"Attributes")," for more information.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Check the logs in ",(0,r.kt)("inlineCode",{parentName:"p"},"error.log"),", look for such a log."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-text"},"2023/04/30 13:49:34 [error] 19381#19381: *1082680 [lua] batch-processor.lua:95: Batch Processor[loki logger] failed to process entries: loki server returned status: 429, body: Ingestion rate limit exceeded for user tenant_1 (limit: 4194304 bytes/sec) while attempting to ingest '1000' lines totaling '616307' bytes, reduce log volume or contact your Loki administrator to see if the limit can be increased, context: ngx.timer, client: 127.0.0.1, server: 0.0.0.0:9081\n")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"The logs usually associated with high QPS look like the above. The error is: ",(0,r.kt)("inlineCode",{parentName:"p"},"Ingestion rate limit exceeded for user tenant_1 (limit: 4194304 bytes/sec) while attempting to ingest '1000' lines totaling '616307' bytes, reduce log volume or contact your Loki administrator to see if the limit can be increased"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Refer to ",(0,r.kt)("a",{parentName:"p",href:"https://grafana.com/docs/loki/latest/configuration/#limits_config"},"Loki documentation")," to add limits on the amount of default and burst logs, such as ",(0,r.kt)("inlineCode",{parentName:"p"},"ingestion_rate_mb")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"ingestion_burst_size_mb"),"."),(0,r.kt)("p",{parentName:"li"},"As the test during development, setting the ",(0,r.kt)("inlineCode",{parentName:"p"},"ingestion_burst_size_mb")," to 100 allows APISIX to push the logs correctly at least at 10000 RPS."))))))}d.isMDXComponent=!0}}]);