"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[29410],{3905:(e,r,n)=>{n.d(r,{Zo:()=>p,kt:()=>g});var t=n(67294);function o(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function a(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?a(Object(n),!0).forEach((function(r){o(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function l(e,r){if(null==e)return{};var n,t,o=function(e,r){if(null==e)return{};var n,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||(o[n]=e[n]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=t.createContext({}),c=function(e){var r=t.useContext(s),n=r;return e&&(n="function"==typeof e?e(r):i(i({},r),e)),n},p=function(e){var r=c(e.components);return t.createElement(s.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},f=t.forwardRef((function(e,r){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),f=c(n),g=o,d=f["".concat(s,".").concat(g)]||f[g]||u[g]||a;return n?t.createElement(d,i(i({ref:r},p),{},{components:n})):t.createElement(d,i({ref:r},p))}));function g(e,r){var n=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=f;var l={};for(var s in r)hasOwnProperty.call(r,s)&&(l[s]=r[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=n[c];return t.createElement.apply(null,i)}return t.createElement.apply(null,n)}f.displayName="MDXCreateElement"},73375:(e,r,n)=>{n.r(r),n.d(r,{contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var t=n(87462),o=(n(67294),n(3905));const a={title:"Configuration",keywords:["APISIX Ingress","Apache APISIX","Kubernetes Ingress","Gateway API"],description:"Configuration of the APISIX Ingress Controller"},i=void 0,l={unversionedId:"configure",id:"configure",isDocsHomePage:!1,title:"Configuration",description:"Configuration of the APISIX Ingress Controller",source:"@site/docs/apisix-ingress-controller/configure.md",sourceDirName:".",slug:"/configure",permalink:"/docs/ingress-controller/next/configure",editUrl:"/edit#https://github.com/apache/apisix-ingress-controller/edit/master/docs/en/latest/configure.md",tags:[],version:"current",frontMatter:{title:"Configuration",keywords:["APISIX Ingress","Apache APISIX","Kubernetes Ingress","Gateway API"],description:"Configuration of the APISIX Ingress Controller"}},s=[{value:"Example",id:"example",children:[{value:"Controller Name",id:"controller-name",children:[]}]}],c={toc:s};function p(e){let{components:r,...n}=e;return(0,o.kt)("wrapper",(0,t.Z)({},c,n,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The APISIX Ingress Controller is a Kubernetes Ingress Controller that implements the Gateway API. This document describes how to configure the APISIX Ingress Controller."),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'log_level: "info"                               # The log level of the APISIX Ingress Controller.\n                                                # the default value is "info".\n\ncontroller_name: apisix.apache.org/apisix-ingress-controller  # The controller name of the APISIX Ingress Controller,\n                                                          # which is used to identify the controller in the GatewayClass.\n                                                          # The default value is "apisix.apache.org/apisix-ingress-controller".\n\nleader_election_id: "apisix-ingress-controller-leader" # The leader election ID for the APISIX Ingress Controller.\n                                                        # The default value is "apisix-ingress-controller-leader".\n')),(0,o.kt)("h3",{id:"controller-name"},"Controller Name"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"controller_name")," field is used to identify the ",(0,o.kt)("inlineCode",{parentName:"p"},"controllerName")," in the GatewayClass."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: gateway.networking.k8s.io/v1\nkind: GatewayClass\nmetadata:\n  namespace: ingress-apisix\n  name: apisix\nspec:\n  controllerName: "apisix.apache.org/apisix-ingress-controller"\n')))}p.isMDXComponent=!0}}]);