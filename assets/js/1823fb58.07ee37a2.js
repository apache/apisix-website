"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[54769],{3905:(e,t,i)=>{i.d(t,{Zo:()=>d,kt:()=>u});var r=i(67294);function n(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function a(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,r)}return i}function o(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?a(Object(i),!0).forEach((function(t){n(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):a(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function s(e,t){if(null==e)return{};var i,r,n=function(e,t){if(null==e)return{};var i,r,n={},a=Object.keys(e);for(r=0;r<a.length;r++)i=a[r],t.indexOf(i)>=0||(n[i]=e[i]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)i=a[r],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(n[i]=e[i])}return n}var l=r.createContext({}),p=function(e){var t=r.useContext(l),i=t;return e&&(i="function"==typeof e?e(t):o(o({},t),e)),i},d=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var i=e.components,n=e.mdxType,a=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),h=p(i),u=n,m=h["".concat(l,".").concat(u)]||h[u]||c[u]||a;return i?r.createElement(m,o(o({ref:t},d),{},{components:i})):r.createElement(m,o({ref:t},d))}));function u(e,t){var i=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=i.length,o=new Array(a);o[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:n,o[1]=s;for(var p=2;p<a;p++)o[p]=i[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,i)}h.displayName="MDXCreateElement"},5213:(e,t,i)=>{i.r(t),i.d(t,{contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var r=i(87462),n=(i(67294),i(3905));const a={title:"FAQ"},o=void 0,s={unversionedId:"FAQ",id:"version-1.5.0/FAQ",isDocsHomePage:!1,title:"FAQ",description:"All resource objects are uniquely determined by the namespace / name / port combination Id. If the combined Id is the same, the service and upstream will be considered as a binding relationship.",source:"@site/docs-apisix-ingress-controller_versioned_docs/version-1.5.0/FAQ.md",sourceDirName:".",slug:"/FAQ",permalink:"/docs/ingress-controller/1.5.0/FAQ",editUrl:"/edit#https://github.com/apache/apisix-ingress-controller/edit/v1.5.0/docs/en/latest/FAQ.md",tags:[],version:"1.5.0",frontMatter:{title:"FAQ"},sidebar:"version-1.5.0/docs",previous:{title:"Developing for Apache APISIX Ingress Controller",permalink:"/docs/ingress-controller/1.5.0/contribute"}},l=[{value:"1. How to bind Service and Upstream",id:"1-how-to-bind-service-and-upstream",children:[]},{value:"2. When modifying a CRD, how do other binding objects perceive it",id:"2-when-modifying-a-crd-how-do-other-binding-objects-perceive-it",children:[]},{value:"3. Can I mix CRDs and admin api to define routing rules",id:"3-can-i-mix-crds-and-admin-api-to-define-routing-rules",children:[]},{value:"4. Why there are some error logs like &quot;list upstreams failed, err: http get failed, url: blahblahblah, err: status: 401&quot;",id:"4-why-there-are-some-error-logs-like-list-upstreams-failed-err-http-get-failed-url-blahblahblah-err-status-401",children:[]},{value:"5. Failed to create route with <code>ApisixRoute</code>",id:"5-failed-to-create-route-with-apisixroute",children:[]},{value:"6. What is the retry rule of <code>apisix-ingress-controller</code>",id:"6-what-is-the-retry-rule-of-apisix-ingress-controller",children:[]},{value:"7. What if the CRDs need to be updated when you upgrading apisix-ingress-controller",id:"7-what-if-the-crds-need-to-be-updated-when-you-upgrading-apisix-ingress-controller",children:[]},{value:"8. Why apisix-ingress-controller reports similar errors when running: no matches for kind &quot;ApisixRoute&quot; in version &quot;apisix.apache.org/v2beta3&quot;",id:"8-why-apisix-ingress-controller-reports-similar-errors-when-running-no-matches-for-kind-apisixroute-in-version-apisixapacheorgv2beta3",children:[]},{value:"9. Modify the Admin API key in APISIX-Ingress",id:"9-modify-the-admin-api-key-in-apisix-ingress",children:[]}],p={toc:l};function d(e){let{components:t,...i}=e;return(0,n.kt)("wrapper",(0,r.Z)({},p,i,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h3",{id:"1-how-to-bind-service-and-upstream"},"1. How to bind Service and Upstream"),(0,n.kt)("p",null,"All resource objects are uniquely determined by the namespace / name / port combination Id. If the combined Id is the same, the ",(0,n.kt)("inlineCode",{parentName:"p"},"service")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"upstream")," will be considered as a binding relationship."),(0,n.kt)("h3",{id:"2-when-modifying-a-crd-how-do-other-binding-objects-perceive-it"},"2. When modifying a CRD, how do other binding objects perceive it"),(0,n.kt)("p",null,"This is a cascading update problem, see for details ",(0,n.kt)("a",{parentName:"p",href:"/docs/ingress-controller/1.5.0/design"},"apisix-ingress-controller Design ideas")),(0,n.kt)("h3",{id:"3-can-i-mix-crds-and-admin-api-to-define-routing-rules"},"3. Can I mix CRDs and admin api to define routing rules"),(0,n.kt)("p",null,"No, currently we are implementing one-way synchronization, that is, CRDs file -> Apache AIPSIX. If the configuration is modified separately through admin api, it will not be synchronized to CRDs in Kubernetes."),(0,n.kt)("p",null,"This is because CRDs are generally declared in the file system, and Apply to enter Kubernetes etcd, we follow the definition of CRDs and synchronize to Apache Apisix Data Plane, but the reverse will make the situation more complicated."),(0,n.kt)("h3",{id:"4-why-there-are-some-error-logs-like-list-upstreams-failed-err-http-get-failed-url-blahblahblah-err-status-401"},'4. Why there are some error logs like "list upstreams failed, err: http get failed, url: blahblahblah, err: status: 401"'),(0,n.kt)("p",null,"So far apisix-ingress-controller doesn't support set admin_key for Apache APISIX, so when you deploy your APISIX cluster, admin_key should be removed from config."),(0,n.kt)("p",null,"Note since APISIX have two configuration files, the first is config.yaml, which contains the user specified configs, the other is config-default.yaml, which has all default items, config items in these two files will be merged. So admin_key in both files should be removed. You can customize these two configuration files and mount them to APISIX deployment."),(0,n.kt)("h3",{id:"5-failed-to-create-route-with-apisixroute"},"5. Failed to create route with ",(0,n.kt)("inlineCode",{parentName:"h3"},"ApisixRoute")),(0,n.kt)("p",null,"When ",(0,n.kt)("inlineCode",{parentName:"p"},"apisix-ingress-controller")," creates a route with CRD, it checks the ",(0,n.kt)("inlineCode",{parentName:"p"},"Endpoint")," resources in Kubernetes (matched by namespace_name_port). If the corresponding endpoint information is not found, the route will not be created and wait for the next retry."),(0,n.kt)("p",null,"Tips: The failure caused by empty upstream nodes is a limitation of Apache APISIX, related ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/apache/apisix/issues/3072"},"issue")),(0,n.kt)("h3",{id:"6-what-is-the-retry-rule-of-apisix-ingress-controller"},"6. What is the retry rule of ",(0,n.kt)("inlineCode",{parentName:"h3"},"apisix-ingress-controller")),(0,n.kt)("p",null,"If an error occurs during the process of ",(0,n.kt)("inlineCode",{parentName:"p"},"apisix-ingress-controller")," parsing CRD and distributing the configuration to APISIX, a retry will be triggered."),(0,n.kt)("p",null,"The delayed retry method is adopted. After the first failure, it is retried once per second. After 5 retries are triggered, the slow retry strategy will be enabled, and the retry will be performed every 1 minute until it succeeds."),(0,n.kt)("h3",{id:"7-what-if-the-crds-need-to-be-updated-when-you-upgrading-apisix-ingress-controller"},"7. What if the CRDs need to be updated when you upgrading apisix-ingress-controller"),(0,n.kt)("p",null,"CRDs upgrading is special as helm chart will skip to apply these resources when they already exist."),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"With the arrival of Helm 3, we removed the old crd-install hooks for a more simple methodology. There is now a special directory called crds that you can create in your chart to hold your CRDs. These CRDs are not templated, but will be installed by default when running a helm install for the chart. If the CRD already exists, it will be skipped with a warning. If you wish to skip the CRD installation step, you can pass the --skip-crds flag.")),(0,n.kt)("p",null,"In such a case, you may need to apply these CRDs by yourself."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -k samples/deploy/crd/\n")),(0,n.kt)("h3",{id:"8-why-apisix-ingress-controller-reports-similar-errors-when-running-no-matches-for-kind-apisixroute-in-version-apisixapacheorgv2beta3"},'8. Why apisix-ingress-controller reports similar errors when running: no matches for kind "ApisixRoute" in version "apisix.apache.org/v2beta3"'),(0,n.kt)("p",null,"The version ",(0,n.kt)("inlineCode",{parentName:"p"},"v2beta3")," is the newest version of resource ",(0,n.kt)("inlineCode",{parentName:"p"},"ApisixRoute"),". You need to check if the CRD definition file is up to date."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl get crd apisixroutes.apisix.apache.org -o jsonpath='{ .spec.versions[*].name }' -A\n")),(0,n.kt)("p",null,"If you can not find ",(0,n.kt)("inlineCode",{parentName:"p"},"v2beta3")," in ",(0,n.kt)("inlineCode",{parentName:"p"},"ApisixRoute")," definition file. Please apply the latest version of ",(0,n.kt)("inlineCode",{parentName:"p"},"ApisixRoute"),"."),(0,n.kt)("p",null,"Ref to FAQ #7."),(0,n.kt)("h3",{id:"9-modify-the-admin-api-key-in-apisix-ingress"},"9. Modify the Admin API key in APISIX-Ingress"),(0,n.kt)("p",null,"Usually, you need to modify the Admin API key to protect Apache APISIX. Please refer to this ",(0,n.kt)("a",{parentName:"p",href:"https://apisix.apache.org/docs/apisix/installation-guide/#updating-admin-api-key"},"link")," to simply change Apache APISIX."),(0,n.kt)("p",null,"However, in apisix-ingress-controller, if we need to change the Admin API key, we also need to change the Admin API key in apisix-ingress-controller. There are two different ways to implement the requirements here."),(0,n.kt)("p",null,"For the first method, we need to modify the Admin API credentials values in both the ",(0,n.kt)("inlineCode",{parentName:"p"},"apisix/values.yaml")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"apisix/apisix-ingress-controller/values.yaml")," files. You can refer to these two links(apisix's ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/apache/apisix-helm-chart/blob/57cdbe461765cd49af2195cc6a1976cc55262e9b/charts/apisix/values.yaml#L181"},"values.yaml")," && apisix-ingress-controller's ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/apache/apisix-helm-chart/blob/57cdbe461765cd49af2195cc6a1976cc55262e9b/charts/apisix-ingress-controller/values.yaml#L128"},"values.yaml"),")."),(0,n.kt)("p",null,"Another method, you can just pass ",(0,n.kt)("inlineCode",{parentName:"p"},"--set ingress-controller.config.apisix.adminKey=<Your new admin key> --set admin.credentials.admin=<Your new admin key>"),"  to ",(0,n.kt)("inlineCode",{parentName:"p"},"helm install")," command."))}d.isMDXComponent=!0}}]);