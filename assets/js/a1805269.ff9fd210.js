"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[94743],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>c});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),u=s(n),c=r,g=u["".concat(p,".").concat(c)]||u[c]||d[c]||l;return n?a.createElement(g,i(i({ref:t},m),{},{components:n})):a.createElement(g,i({ref:t},m))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=u;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var s=2;s<l;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},3840:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const l={title:"opentelemetry",keywords:["Apache APISIX","API Gateway","Plugin","OpenTelemetry"],description:"The opentelemetry Plugin instruments APISIX and sends traces to OpenTelemetry collector based on the OpenTelemetry specification, in binary-encoded OLTP over HTTP."},i=void 0,o={unversionedId:"plugins/opentelemetry",id:"version-3.12/plugins/opentelemetry",isDocsHomePage:!1,title:"opentelemetry",description:"The opentelemetry Plugin instruments APISIX and sends traces to OpenTelemetry collector based on the OpenTelemetry specification, in binary-encoded OLTP over HTTP.",source:"@site/docs-apisix_versioned_docs/version-3.12/plugins/opentelemetry.md",sourceDirName:"plugins",slug:"/plugins/opentelemetry",permalink:"/docs/apisix/3.12/plugins/opentelemetry",editUrl:"/edit#https://github.com/apache/apisix/edit/release/3.12/docs/en/latest/plugins/opentelemetry.md",tags:[],version:"3.12",frontMatter:{title:"opentelemetry",keywords:["Apache APISIX","API Gateway","Plugin","OpenTelemetry"],description:"The opentelemetry Plugin instruments APISIX and sends traces to OpenTelemetry collector based on the OpenTelemetry specification, in binary-encoded OLTP over HTTP."},sidebar:"version-3.12/docs",previous:{title:"skywalking",permalink:"/docs/apisix/3.12/plugins/skywalking"},next:{title:"prometheus",permalink:"/docs/apisix/3.12/plugins/prometheus"}},p=[{value:"Description",id:"description",children:[]},{value:"Configurations",id:"configurations",children:[]},{value:"Attributes",id:"attributes",children:[]},{value:"Examples",id:"examples",children:[{value:"Enable <code>opentelemetry</code> Plugin",id:"enable-opentelemetry-plugin",children:[]},{value:"Send Traces to OpenTelemetry",id:"send-traces-to-opentelemetry",children:[]},{value:"Using Trace Variables in Logging",id:"using-trace-variables-in-logging",children:[]}]}],s={toc:p};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("head",null,(0,r.kt)("link",{rel:"canonical",href:"https://docs.api7.ai/hub/opentelemetry"})),(0,r.kt)("h2",{id:"description"},"Description"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"opentelemetry")," Plugin can be used to report tracing data according to the ",(0,r.kt)("a",{parentName:"p",href:"https://opentelemetry.io/docs/reference/specification/"},"OpenTelemetry Specification"),"."),(0,r.kt)("p",null,"The Plugin only supports binary-encoded ",(0,r.kt)("a",{parentName:"p",href:"https://opentelemetry.io/docs/reference/specification/protocol/otlp/#otlphttp"},"OLTP over HTTP"),"."),(0,r.kt)("h2",{id:"configurations"},"Configurations"),(0,r.kt)("p",null,"By default, configurations of the Service name, tenant ID, collector, and batch span processor are pre-configured in ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/apache/apisix/blob/master/apisix/cli/config.lua"},"default configuration"),"."),(0,r.kt)("p",null,"You can change this configuration of the Plugin through the endpoint ",(0,r.kt)("inlineCode",{parentName:"p"},"apisix/admin/plugin_metadata/opentelemetry")," For example:"),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"You can fetch the ",(0,r.kt)("inlineCode",{parentName:"p"},"admin_key")," from ",(0,r.kt)("inlineCode",{parentName:"p"},"config.yaml")," and save to an environment variable with the following command:"),(0,r.kt)("pre",{parentName:"div"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"admin_key=$(yq '.deployment.admin.admin_key[0].key' conf/config.yaml | sed 's/\"//g')\n")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl http://127.0.0.1:9180/apisix/admin/plugin_metadata/opentelemetry -H "X-API-KEY: $admin_key" -X PUT -d \'\n{\n    "trace_id_source": "x-request-id",\n    "resource": {\n      "service.name": "APISIX"\n    },\n    "collector": {\n      "address": "127.0.0.1:4318",\n      "request_timeout": 3,\n      "request_headers": {\n        "Authorization": "token"\n      },\n      "batch_span_processor": {\n        "drop_on_queue_full": false,\n        "max_queue_size": 1024,\n        "batch_timeout": 2,\n        "inactive_timeout": 1,\n        "max_export_batch_size": 16\n      },\n      "set_ngx_var": false\n    }\n}\'\n')),(0,r.kt)("h2",{id:"attributes"},"Attributes"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Valid Values"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"sampler"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"Sampling configuration.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"sampler.name"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"always_off")),(0,r.kt)("td",{parentName:"tr",align:null},'["always_on", "always_off", "trace_id_ratio", "parent_base"]'),(0,r.kt)("td",{parentName:"tr",align:null},"Sampling strategy.",(0,r.kt)("br",null),"To always sample, use ",(0,r.kt)("inlineCode",{parentName:"td"},"always_on"),".",(0,r.kt)("br",null),"To never sample, use ",(0,r.kt)("inlineCode",{parentName:"td"},"always_off"),".",(0,r.kt)("br",null),"To randomly sample based on a given ratio, use ",(0,r.kt)("inlineCode",{parentName:"td"},"trace_id_ratio"),".",(0,r.kt)("br",null),"To use the sampling decision of the span's parent, use ",(0,r.kt)("inlineCode",{parentName:"td"},"parent_base"),". If there is no parent, use the root sampler.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"sampler.options"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"Parameters for sampling strategy.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"sampler.options.fraction"),(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null},"0"),(0,r.kt)("td",{parentName:"tr",align:null},"[0, 1]"),(0,r.kt)("td",{parentName:"tr",align:null},"Sampling ratio when the sampling strategy is ",(0,r.kt)("inlineCode",{parentName:"td"},"trace_id_ratio"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"sampler.options.root"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"Root sampler when the sampling strategy is ",(0,r.kt)("inlineCode",{parentName:"td"},"parent_base")," strategy.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"sampler.options.root.name"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},'["always_on", "always_off", "trace_id_ratio"]'),(0,r.kt)("td",{parentName:"tr",align:null},"Root sampling strategy.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"sampler.options.root.options"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"Root sampling strategy parameters.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"sampler.options.root.options.fraction"),(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null},"0"),(0,r.kt)("td",{parentName:"tr",align:null},"[0, 1]"),(0,r.kt)("td",{parentName:"tr",align:null},"Root sampling ratio when the sampling strategy is ",(0,r.kt)("inlineCode",{parentName:"td"},"trace_id_ratio"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"additional_attributes"),(0,r.kt)("td",{parentName:"tr",align:null},"array","[string]"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"Additional attributes appended to the trace span. Support ",(0,r.kt)("a",{parentName:"td",href:"https://apisix.apache.org/docs/apisix/apisix-variable/"},"built-in variables")," in values.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"additional_header_prefix_attributes"),(0,r.kt)("td",{parentName:"tr",align:null},"array","[string]"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"Headers or header prefixes appended to the trace span's attributes. For example, use ",(0,r.kt)("inlineCode",{parentName:"td"},'x-my-header"')," or ",(0,r.kt)("inlineCode",{parentName:"td"},"x-my-headers-*")," to include all headers with the prefix ",(0,r.kt)("inlineCode",{parentName:"td"},"x-my-headers-"),".")))),(0,r.kt)("h2",{id:"examples"},"Examples"),(0,r.kt)("p",null,"The examples below demonstrate how you can work with the ",(0,r.kt)("inlineCode",{parentName:"p"},"opentelemetry")," Plugin for different scenarios."),(0,r.kt)("h3",{id:"enable-opentelemetry-plugin"},"Enable ",(0,r.kt)("inlineCode",{parentName:"h3"},"opentelemetry")," Plugin"),(0,r.kt)("p",null,"By default, the ",(0,r.kt)("inlineCode",{parentName:"p"},"opentelemetry")," Plugin is disabled in APISIX. To enable, add the Plugin to your configuration file as such:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="config.yaml"',title:'"config.yaml"'},"plugins:\n  - ...\n  - opentelemetry\n")),(0,r.kt)("p",null,"Reload APISIX for changes to take effect."),(0,r.kt)("p",null,"See ",(0,r.kt)("a",{parentName:"p",href:"#static-configurations"},"static configurations")," for other available options you can configure in ",(0,r.kt)("inlineCode",{parentName:"p"},"config.yaml"),"."),(0,r.kt)("h3",{id:"send-traces-to-opentelemetry"},"Send Traces to OpenTelemetry"),(0,r.kt)("p",null,"The following example demonstrates how to trace requests to a Route and send traces to OpenTelemetry."),(0,r.kt)("p",null,"Start an OpenTelemetry collector instance in Docker:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"docker run -d --name otel-collector -p 4318:4318 otel/opentelemetry-collector-contrib\n")),(0,r.kt)("p",null,"Create a Route with ",(0,r.kt)("inlineCode",{parentName:"p"},"opentelemetry")," Plugin:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl "http://127.0.0.1:9180/apisix/admin/routes" -X PUT \\\n  -H "X-API-KEY: ${admin_key}" \\\n  -d \'{\n    "id": "otel-tracing-route",\n    "uri": "/anything",\n    "plugins": {\n      "opentelemetry": {\n        "sampler": {\n          "name": "always_on"\n        }\n      }\n    },\n    "upstream": {\n      "type": "roundrobin",\n      "nodes": {\n        "httpbin.org": 1\n      }\n    }\n  }\'\n')),(0,r.kt)("p",null,"Send a request to the Route:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl "http://127.0.0.1:9080/anything"\n')),(0,r.kt)("p",null,"You should receive an ",(0,r.kt)("inlineCode",{parentName:"p"},"HTTP/1.1 200 OK")," response."),(0,r.kt)("p",null,"In OpenTelemetry collector's log, you should see information similar to the following:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},'2024-02-18T17:14:03.825Z info ResourceSpans #0\nResource SchemaURL:\nResource attributes:\n     -> telemetry.sdk.language: Str(lua)\n     -> telemetry.sdk.name: Str(opentelemetry-lua)\n     -> telemetry.sdk.version: Str(0.1.1)\n     -> hostname: Str(e34673e24631)\n     -> service.name: Str(APISIX)\nScopeSpans #0\nScopeSpans SchemaURL:\nInstrumentationScope opentelemetry-lua\nSpan #0\n    Trace ID       : fbd0a38d4ea4a128ff1a688197bc58b0\n    Parent ID      :\n    ID             : af3dc7642104748a\n    Name           : GET /anything\n    Kind           : Server\n    Start time     : 2024-02-18 17:14:03.763244032 +0000 UTC\n    End time       : 2024-02-18 17:14:03.920229888 +0000 UTC\n    Status code    : Unset\n    Status message :\nAttributes:\n     -> net.host.name: Str(127.0.0.1)\n     -> http.method: Str(GET)\n     -> http.scheme: Str(http)\n     -> http.target: Str(/anything)\n     -> http.user_agent: Str(curl/7.64.1)\n     -> apisix.route_id: Str(otel-tracing-route)\n     -> apisix.route_name: Empty()\n     -> http.route: Str(/anything)\n     -> http.status_code: Int(200)\n{"kind": "exporter", "data_type": "traces", "name": "debug"}\n')),(0,r.kt)("p",null,"To visualize these traces, you can export your telemetry to backend Services, such as Zipkin and Prometheus. See ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/exporter"},"exporters")," for more details."),(0,r.kt)("h3",{id:"using-trace-variables-in-logging"},"Using Trace Variables in Logging"),(0,r.kt)("p",null,"The following example demonstrates how to configure the ",(0,r.kt)("inlineCode",{parentName:"p"},"opentelemetry")," Plugin to set the following built-in variables, which can be used in logger Plugins or access logs:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"opentelemetry_context_traceparent"),": ",(0,r.kt)("a",{parentName:"li",href:"https://www.w3.org/TR/trace-context/#trace-context-http-headers-format"},"trace parent")," ID"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"opentelemetry_trace_id"),": trace ID of the current span"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"opentelemetry_span_id"),": span ID of the current span")),(0,r.kt)("p",null,"Update the configuration file as below. You should customize the access log format to use the ",(0,r.kt)("inlineCode",{parentName:"p"},"opentelemetry")," Plugin variables, and set ",(0,r.kt)("inlineCode",{parentName:"p"},"opentelemetry")," variables in the ",(0,r.kt)("inlineCode",{parentName:"p"},"set_ngx_var")," field."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="conf/config.yaml"',title:'"conf/config.yaml"'},'nginx_config:\n  http:\n    enable_access_log: true\n    access_log_format: \'{"time": "$time_iso8601","opentelemetry_context_traceparent": "$opentelemetry_context_traceparent","opentelemetry_trace_id": "$opentelemetry_trace_id","opentelemetry_span_id": "$opentelemetry_span_id","remote_addr": "$remote_addr"}\'\n    access_log_format_escape: json\nplugin_attr:\n  opentelemetry:\n    set_ngx_var: true\n')),(0,r.kt)("p",null,"Reload APISIX for configuration changes to take effect."),(0,r.kt)("p",null,"You should see access log entries similar to the following when you generate requests:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},'{"time": "18/Feb/2024:15:09:00 +0000","opentelemetry_context_traceparent": "00-fbd0a38d4ea4a128ff1a688197bc58b0-8f4b9d9970a02629-01","opentelemetry_trace_id": "fbd0a38d4ea4a128ff1a688197bc58b0","opentelemetry_span_id": "af3dc7642104748a","remote_addr": "172.10.0.1"}\n')))}m.isMDXComponent=!0}}]);