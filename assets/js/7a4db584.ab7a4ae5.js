"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[97948],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>c});var a=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=a.createContext({}),d=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=d(e.components);return a.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=d(t),c=o,g=m["".concat(s,".").concat(c)]||m[c]||u[c]||r;return t?a.createElement(g,l(l({ref:n},p),{},{components:t})):a.createElement(g,l({ref:n},p))}));function c(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,l=new Array(r);l[0]=m;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var d=2;d<r;d++)l[d]=t[d];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},58215:(e,n,t)=>{t.d(n,{Z:()=>o});var a=t(67294);const o=function(e){let{children:n,hidden:t,className:o}=e;return a.createElement("div",{role:"tabpanel",hidden:t,className:o},n)}},55064:(e,n,t)=>{t.d(n,{Z:()=>d});var a=t(67294),o=t(79443);const r=function(){const e=(0,a.useContext)(o.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e};var l=t(86010);const i="tabItem_vU9c",s="tabItemActive_cw6a";const d=function(e){var n;const{lazy:t,block:o,defaultValue:d,values:p,groupId:u,className:m}=e,c=a.Children.toArray(e.children),g=null!=p?p:c.map((e=>({value:e.props.value,label:e.props.label}))),h=null!=d?d:null==(n=c.find((e=>e.props.default)))?void 0:n.props.value,{tabGroupChoices:k,setTabGroupChoices:f}=r(),[N,y]=(0,a.useState)(h),b=[];if(null!=u){const e=k[u];null!=e&&e!==N&&g.some((n=>n.value===e))&&y(e)}const v=e=>{const n=e.currentTarget,t=b.indexOf(n),a=g[t].value;y(a),null!=u&&(f(u,a),setTimeout((()=>{(function(e){const{top:n,left:t,bottom:a,right:o}=e.getBoundingClientRect(),{innerHeight:r,innerWidth:l}=window;return n>=0&&o<=l&&a<=r&&t>=0})(n)||(n.scrollIntoView({block:"center",behavior:"smooth"}),n.classList.add(s),setTimeout((()=>n.classList.remove(s)),2e3))}),150))},A=e=>{var n;let t=null;switch(e.key){case"ArrowRight":{const n=b.indexOf(e.target)+1;t=b[n]||b[0];break}case"ArrowLeft":{const n=b.indexOf(e.target)-1;t=b[n]||b[b.length-1];break}}null==(n=t)||n.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":o},m)},g.map((e=>{let{value:n,label:t}=e;return a.createElement("li",{role:"tab",tabIndex:N===n?0:-1,"aria-selected":N===n,className:(0,l.Z)("tabs__item",i,{"tabs__item--active":N===n}),key:n,ref:e=>b.push(e),onKeyDown:A,onFocus:v,onClick:v},null!=t?t:n)}))),t?(0,a.cloneElement)(c.filter((e=>e.props.value===N))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},c.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==N})))))}},79443:(e,n,t)=>{t.d(n,{Z:()=>a});const a=(0,t(67294).createContext)(void 0)},60569:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>s,default:()=>m,frontMatter:()=>i,metadata:()=>d,toc:()=>p});var a=t(87462),o=(t(67294),t(3905)),r=t(55064),l=t(58215);const i={title:"Deployment modes",keywords:["API Gateway","Apache APISIX","APISIX deployment modes"],description:"Documentation about the three deployment modes of Apache APISIX."},s=void 0,d={unversionedId:"deployment-modes",id:"deployment-modes",isDocsHomePage:!1,title:"Deployment modes",description:"Documentation about the three deployment modes of Apache APISIX.",source:"@site/docs/apisix/deployment-modes.md",sourceDirName:".",slug:"/deployment-modes",permalink:"/docs/apisix/next/deployment-modes",editUrl:"/edit#https://github.com/apache/apisix/edit/master/docs/en/latest/deployment-modes.md",tags:[],version:"current",frontMatter:{title:"Deployment modes",keywords:["API Gateway","Apache APISIX","APISIX deployment modes"],description:"Documentation about the three deployment modes of Apache APISIX."},sidebar:"docs",previous:{title:"Debug mode",permalink:"/docs/apisix/next/debug-mode"},next:{title:"FAQ",permalink:"/docs/apisix/next/FAQ"}},p=[{value:"Traditional",id:"traditional",children:[]},{value:"Decoupled",id:"decoupled",children:[]},{value:"Standalone",id:"standalone",children:[{value:"Modes",id:"modes",children:[]},{value:"How to configure rules",id:"how-to-configure-rules",children:[]},{value:"How to configure Route",id:"how-to-configure-route",children:[]},{value:"How to configure Route + Service",id:"how-to-configure-route--service",children:[]},{value:"How to configure Route + Upstream",id:"how-to-configure-route--upstream",children:[]},{value:"How to configure Route + Service + Upstream",id:"how-to-configure-route--service--upstream",children:[]},{value:"How to configure Plugins",id:"how-to-configure-plugins",children:[]},{value:"How to configure Plugin Configs",id:"how-to-configure-plugin-configs",children:[]},{value:"How to enable SSL",id:"how-to-enable-ssl",children:[]},{value:"How to configure global rule",id:"how-to-configure-global-rule",children:[]},{value:"How to configure consumer",id:"how-to-configure-consumer",children:[]},{value:"How to configure plugin metadata",id:"how-to-configure-plugin-metadata",children:[]},{value:"How to configure stream route",id:"how-to-configure-stream-route",children:[]},{value:"How to configure protos",id:"how-to-configure-protos",children:[]}]}],u={toc:p};function m(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"APISIX has three different deployment modes for different production use cases. The table below summarises the deployment modes:"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Deployment mode"),(0,o.kt)("th",{parentName:"tr",align:null},"Roles"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"traditional"),(0,o.kt)("td",{parentName:"tr",align:null},"traditional"),(0,o.kt)("td",{parentName:"tr",align:null},"Data plane and control plane are deployed together. ",(0,o.kt)("inlineCode",{parentName:"td"},"enable_admin")," attribute should be disabled manually.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"decoupled"),(0,o.kt)("td",{parentName:"tr",align:null},"data_plane / control_plane"),(0,o.kt)("td",{parentName:"tr",align:null},"Data plane and control plane are deployed independently.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"standalone"),(0,o.kt)("td",{parentName:"tr",align:null},"data_plane / traditional"),(0,o.kt)("td",{parentName:"tr",align:null},"The ",(0,o.kt)("inlineCode",{parentName:"td"},"data_plane")," mode loads configuration from a local YAML / JSON file, while the traditional mode expects configuration through Admin API.")))),(0,o.kt)("p",null,"Each of these deployment modes are explained in detail below."),(0,o.kt)("h2",{id:"traditional"},"Traditional"),(0,o.kt)("p",null,"In the traditional deployment mode, one instance of APISIX will be both the ",(0,o.kt)("inlineCode",{parentName:"p"},"data_plane")," and the ",(0,o.kt)("inlineCode",{parentName:"p"},"control_plane"),"."),(0,o.kt)("p",null,"An example configuration of the traditional deployment mode is shown below:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="conf/config.yaml"',title:'"conf/config.yaml"'},"apisix:\n    node_listen:\n        - port: 9080\ndeployment:\n    role: traditional\n    role_traditional:\n        config_provider: etcd\n    admin:\n        admin_listen:\n            port: 9180\n    etcd:\n       host:\n           - http://${etcd_IP}:${etcd_Port}\n       prefix: /apisix\n       timeout: 30\n#END\n")),(0,o.kt)("p",null,"The instance of APISIX deployed as the traditional role will:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Listen on port ",(0,o.kt)("inlineCode",{parentName:"li"},"9080")," to handle user requests, controlled by ",(0,o.kt)("inlineCode",{parentName:"li"},"node_listen"),"."),(0,o.kt)("li",{parentName:"ol"},"Listen on port ",(0,o.kt)("inlineCode",{parentName:"li"},"9180")," to handle Admin API requests, controlled by ",(0,o.kt)("inlineCode",{parentName:"li"},"admin_listen"),".")),(0,o.kt)("h2",{id:"decoupled"},"Decoupled"),(0,o.kt)("p",null,"In the decoupled deployment mode the ",(0,o.kt)("inlineCode",{parentName:"p"},"data_plane")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"control_plane")," instances of APISIX are deployed separately, i.e., one instance of APISIX is configured to be a ",(0,o.kt)("em",{parentName:"p"},"data plane")," and the other to be a ",(0,o.kt)("em",{parentName:"p"},"control plane"),"."),(0,o.kt)("p",null,"The instance of APISIX deployed as the data plane will:"),(0,o.kt)("p",null,"Once the service is started, it will handle the user requests."),(0,o.kt)("p",null,"The example below shows the configuration of an APISIX instance as ",(0,o.kt)("em",{parentName:"p"},"data plane")," in the decoupled mode:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="conf/config.yaml"',title:'"conf/config.yaml"'},"deployment:\n    role: data_plane\n    role_data_plane:\n       config_provider: etcd\n#END\n")),(0,o.kt)("p",null,"The instance of APISIX deployed as the control plane will:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Listen on port ",(0,o.kt)("inlineCode",{parentName:"li"},"9180")," and handle Admin API requests.")),(0,o.kt)("p",null,"The example below shows the configuration of an APISIX instance as ",(0,o.kt)("em",{parentName:"p"},"control plane")," in the decoupled mode:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="conf/config.yaml"',title:'"conf/config.yaml"'},"deployment:\n    role: control_plane\n    role_control_plane:\n        config_provider: etcd\n    etcd:\n       host:\n           - https://${etcd_IP}:${etcd_Port}\n       prefix: /apisix\n       timeout: 30\n#END\n")),(0,o.kt)("h2",{id:"standalone"},"Standalone"),(0,o.kt)("p",null,"Turning on the APISIX node in Standalone mode will no longer use the default etcd as the configuration center."),(0,o.kt)("p",null,"This method is more suitable for two types of users:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Kubernetes(k8s)\uff1aDeclarative API that dynamically updates the routing rules with a full yaml configuration."),(0,o.kt)("li",{parentName:"ol"},"Different configuration centers: There are many implementations of the configuration center, such as Consul, etc., using the full yaml file for intermediate conversion.")),(0,o.kt)("h3",{id:"modes"},"Modes"),(0,o.kt)("p",null,"Now, we have two standalone running modes, file-driven and API-driven."),(0,o.kt)("h4",{id:"file-driven"},"File-driven"),(0,o.kt)("p",null,"The file-driven mode is the kind APISIX has always supported."),(0,o.kt)("p",null,"The routing rules in the ",(0,o.kt)("inlineCode",{parentName:"p"},"conf/apisix.yaml")," file are loaded into memory immediately after the APISIX node service starts. At each interval (default: 1 second), APISIX checks for updates to the file. If changes are detected, it reloads the rules."),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Note"),": Reloading and updating routing rules are all hot memory updates. There is no replacement of working processes, since it's a hot update."),(0,o.kt)("p",null,"This requires us to set the APISIX role to data plane. That is, set ",(0,o.kt)("inlineCode",{parentName:"p"},"deployment.role")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"data_plane")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"deployment.role_data_plane.config_provider")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"yaml"),"."),(0,o.kt)("p",null,"Refer to the example below:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"deployment:\n  role: data_plane\n  role_data_plane:\n    config_provider: yaml\n")),(0,o.kt)("p",null,"You can also provide the configuration in JSON format by placing it in ",(0,o.kt)("inlineCode",{parentName:"p"},"conf/apisix.json"),". Before proceeding, you should change the ",(0,o.kt)("inlineCode",{parentName:"p"},"deployment.role_data_plane.config_provider")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"json"),"."),(0,o.kt)("p",null,"Refer to the example below:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"deployment:\n  role: data_plane\n  role_data_plane:\n    config_provider: json\n")),(0,o.kt)("p",null,"This makes it possible to disable the Admin API and discover configuration changes and reloads based on the local file system."),(0,o.kt)("h4",{id:"api-driven"},"API-driven"),(0,o.kt)("p",null,"The API-drive standalone mode is designed specifically for the APISIX Ingress Controller and is primarily intended for integration with ADC. APISIX provides an official, end-to-end, stateless Ingress Controller implementation. Do not use this feature directly unless you fully understand its internal workings and behavior."),(0,o.kt)("h5",{id:"overview"},"Overview"),(0,o.kt)("p",null,"API-driven mode is an emerging paradigm for standalone deployment, where routing rules are stored entirely in memory rather than in a configuration file. Updates must be made through the dedicated Standalone Admin API. Each update replaces the full configuration and takes effect immediately through hot updates, without requiring a restart."),(0,o.kt)("h5",{id:"configuration"},"Configuration"),(0,o.kt)("p",null,"To enable this mode, set the APISIX role to ",(0,o.kt)("inlineCode",{parentName:"p"},"traditional")," (to start both the API gateway and the Admin API endpoint) and use the YAML config provider. Example configuration:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"deployment:\n  role: traditional\n  role_traditional:\n    config_provider: yaml\n")),(0,o.kt)("p",null,"This disables the local file source of configuration in favor of the API. When APISIX starts, it uses an empty configuration until updated via the API."),(0,o.kt)("h5",{id:"api-endpoints"},"API Endpoints"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"conf_version")," by resource type"),(0,o.kt)("p",{parentName:"li"},"  Use ",(0,o.kt)("inlineCode",{parentName:"p"},"<resource>_conf_version")," to indicate the client\u2019s current version for each resource type (e.g. routes, upstreams, services, etc.)."),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "routes_conf_version": 12,\n  "upstreams_conf_version": 102,\n  "routes": [],\n  "upstreams": []\n}\n')),(0,o.kt)("p",{parentName:"li"},"  APISIX compares each provided ",(0,o.kt)("inlineCode",{parentName:"p"},"<resource>_conf_version")," against its in-memory ",(0,o.kt)("inlineCode",{parentName:"p"},"<resource>_conf_version")," for that resource type. If the provided ",(0,o.kt)("inlineCode",{parentName:"p"},"<resource>_conf_version")," is:"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Greater than")," the current ",(0,o.kt)("inlineCode",{parentName:"p"},"conf_version"),", APISIX will ",(0,o.kt)("strong",{parentName:"p"},"rebuild/reset")," that resource type\u2019s data to match your payload.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Equal to")," the current ",(0,o.kt)("inlineCode",{parentName:"p"},"conf_version"),", APISIX treats the resource as ",(0,o.kt)("strong",{parentName:"p"},"unchanged")," and ",(0,o.kt)("strong",{parentName:"p"},"ignores")," it (no data is rebuilt).")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Less than")," the current ",(0,o.kt)("inlineCode",{parentName:"p"},"conf_version"),", APISIX considers your update ",(0,o.kt)("strong",{parentName:"p"},"stale")," and ",(0,o.kt)("strong",{parentName:"p"},"rejects")," the request for that resource type with a ",(0,o.kt)("strong",{parentName:"p"},"400 Bad Request"),".")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"modifiedIndex")," by individual resource"),(0,o.kt)("p",{parentName:"li"},"  Allow setting an index for each resource. APISIX compares this index to its modifiedIndex to determine whether to accept the update."))),(0,o.kt)("h5",{id:"example"},"Example"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"get configuration")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'curl -X GET http://127.0.0.1:9180/apisix/admin/configs \\\n    -H "X-API-KEY: <apikey>" \\\n    -H "Accept: application/json" ## or application/yaml\n')),(0,o.kt)("p",null,"This returns the current configuration in JSON or YAML format."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "consumer_groups_conf_version": 0,\n    "consumers_conf_version": 0,\n    "global_rules_conf_version": 0,\n    "plugin_configs_conf_version": 0,\n    "plugin_metadata_conf_version": 0,\n    "protos_conf_version": 0,\n    "routes_conf_version": 0,\n    "secrets_conf_version": 0,\n    "services_conf_version": 0,\n    "ssls_conf_version": 0,\n    "upstreams_conf_version": 0\n}\n')),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},"full update")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'curl -X PUT http://127.0.0.1:9180/apisix/admin/configs \\\n    -H "X-API-KEY: <apikey>" \\\n    -H "Content-Type: application/json" ## or application/yaml \\\n    -H "X-Digest: example_string#1" \\\n    -d \'{}\'\n')),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"The X-Digest in the request header, which is an arbitrary string that indicates to APISIX the characteristics of the current configuration version. When the value in the new request is the same as the configuration version already loaded by APISIX, APISIX skips this update."),(0,o.kt)("p",{parentName:"div"},"This allows the client to determine and exclude certain unnecessary update requests. For example, the client can calculate a hash digest of the configuration and send it to APISIX; if two update requests contain the same hash digest, APISIX will not update the configuration."),(0,o.kt)("p",{parentName:"div"},"The client can determine its content. The value is transparent to APISIX and will not be parsed and used for any purpose."))),(0,o.kt)("ol",{start:3},(0,o.kt)("li",{parentName:"ol"},"update based on resource type")),(0,o.kt)("p",null,"In APISIX memory, the current configuration is:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "routes_conf_version": 1000,\n    "upstreams_conf_version": 1000,\n}\n')),(0,o.kt)("p",null,"Update the previous upstreams configuration by setting a higher version number, such as 1001, to replace the current version 1000:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'curl -X PUT http://127.0.0.1:9180/apisix/admin/configs \\\n  -H "X-API-KEY: ${API_KEY}" \\\n  -H "Content-Type: application/json" \\\n  -H "X-Digest: example_string#2" \\\n  -d \'\n{\n    "routes_conf_version": 1000,\n    "upstreams_conf_version": 1001,\n    "routes": [\n        {\n            "modifiedIndex": 1000,\n            "id": "r1",\n            "uri": "/hello",\n            "upstream_id": "u1"\n        }\n    ],\n    "upstreams": [\n        {\n            "modifiedIndex": 1001,\n            "id": "u1",\n            "nodes": {\n                "127.0.0.1:1980": 1,\n                "127.0.0.1:1980": 1\n            },\n            "type": "roundrobin"\n        }\n    ]\n}\'\n')),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"These APIs apply the same security requirements as the Admin API, including API key, TLS/mTLS, CORS, and IP allowlist."),(0,o.kt)("p",{parentName:"div"},"The API accepts input in the same format as the file-based mode, supporting both JSON and YAML. Unlike the file-based mode, the API does not rely on the ",(0,o.kt)("inlineCode",{parentName:"p"},"#END")," suffix, as HTTP guarantees input integrity."))),(0,o.kt)("h3",{id:"how-to-configure-rules"},"How to configure rules"),(0,o.kt)("h4",{id:"to-config_provider-yaml"},"To ",(0,o.kt)("inlineCode",{parentName:"h4"},"config_provider: yaml")),(0,o.kt)("p",null,"All of the rules are stored in one file which named ",(0,o.kt)("inlineCode",{parentName:"p"},"conf/apisix.yaml"),",\nAPISIX checks if this file has any change ",(0,o.kt)("strong",{parentName:"p"},"every second"),".\nIf the file is changed & it ends with ",(0,o.kt)("inlineCode",{parentName:"p"},"#END"),",\nAPISIX loads the rules from this file and updates its memory."),(0,o.kt)("p",null,"Here is a mini example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'routes:\n  -\n    uri: /hello\n    upstream:\n        nodes:\n            "127.0.0.1:1980": 1\n        type: roundrobin\n#END\n')),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"WARNING"),": APISIX will not load the rules into memory from file ",(0,o.kt)("inlineCode",{parentName:"p"},"conf/apisix.yaml")," if there is no ",(0,o.kt)("inlineCode",{parentName:"p"},"#END")," at the end."),(0,o.kt)("p",null,"Environment variables can also be used like so:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'routes:\n  -\n    uri: /hello\n    upstream:\n        nodes:\n            "${{UPSTREAM_ADDR}}": 1\n        type: roundrobin\n#END\n')),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"WARNING"),": When using docker to deploy APISIX in standalone mode. New environment variables added to ",(0,o.kt)("inlineCode",{parentName:"p"},"apisix.yaml")," while APISIX has been initialized will only take effect after a reload."),(0,o.kt)("p",null,"More information about using environment variables can be found ",(0,o.kt)("a",{parentName:"p",href:"/docs/apisix/next/admin-api#using-environment-variables"},"here"),"."),(0,o.kt)("h4",{id:"to-config_provider-json"},"To ",(0,o.kt)("inlineCode",{parentName:"h4"},"config_provider: json")),(0,o.kt)("p",null,"All of the rules are stored in one file which named ",(0,o.kt)("inlineCode",{parentName:"p"},"conf/apisix.json"),",\nAPISIX checks if this file has any change ",(0,o.kt)("strong",{parentName:"p"},"every second"),".\nIf the file is changed,\nAPISIX loads the rules from this file and updates its memory."),(0,o.kt)("p",null,"Here is a mini example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "routes": [\n    {\n      "uri": "/hello",\n      "upstream": {\n        "nodes": {\n          "127.0.0.1:1980": 1\n        },\n        "type": "roundrobin"\n      }\n    }\n  ]\n}\n')),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"WARNING"),": when using ",(0,o.kt)("inlineCode",{parentName:"p"},"conf/apisix.json"),", the ",(0,o.kt)("inlineCode",{parentName:"p"},"#END")," marker is not required, as APISIX can directly parse and validate the JSON structure."),(0,o.kt)("h3",{id:"how-to-configure-route"},"How to configure Route"),(0,o.kt)("p",null,"Single Route\uff1a"),(0,o.kt)(r.Z,{mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"yaml",label:"YAML",default:!0,mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'routes:\n  -\n    uri: /hello\n    upstream:\n        nodes:\n            "127.0.0.1:1980": 1\n        type: roundrobin\n#END\n'))),(0,o.kt)(l.Z,{value:"json",label:"JSON",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "routes": [\n    {\n      "uri": "/hello",\n      "upstream": {\n        "nodes": {\n          "127.0.0.1:1980": 1\n        },\n        "type": "roundrobin"\n      }\n    }\n  ]\n}\n')))),(0,o.kt)("p",null,"Multiple Routes\uff1a"),(0,o.kt)(r.Z,{mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"yaml",label:"YAML",default:!0,mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'routes:\n  -\n    uri: /hello\n    upstream:\n        nodes:\n            "127.0.0.1:1980": 1\n        type: roundrobin\n  -\n    uri: /hello2\n    upstream:\n        nodes:\n            "127.0.0.1:1981": 1\n        type: roundrobin\n#END\n'))),(0,o.kt)(l.Z,{value:"json",label:"JSON",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "routes": [\n    {\n      "uri": "/hello",\n      "upstream": {\n        "nodes": {\n          "127.0.0.1:1980": 1\n        },\n        "type": "roundrobin"\n      }\n    },\n    {\n      "uri": "/hello2",\n      "upstream": {\n        "nodes": {\n          "127.0.0.1:1981": 1\n        },\n        "type": "roundrobin"\n      }\n    }\n  ]\n}\n')))),(0,o.kt)("h3",{id:"how-to-configure-route--service"},"How to configure Route + Service"),(0,o.kt)(r.Z,{mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"yaml",label:"YAML",default:!0,mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'routes:\n    -\n        uri: /hello\n        service_id: 1\nservices:\n    -\n        id: 1\n        upstream:\n            nodes:\n                "127.0.0.1:1980": 1\n            type: roundrobin\n#END\n'))),(0,o.kt)(l.Z,{value:"json",label:"JSON",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "routes": [\n    {\n      "uri": "/hello",\n      "service_id": 1\n    }\n  ],\n  "services": [\n    {\n      "id": 1,\n      "upstream": {\n        "nodes": {\n          "127.0.0.1:1980": 1\n        },\n        "type": "roundrobin"\n      }\n    }\n  ]\n}\n')))),(0,o.kt)("h3",{id:"how-to-configure-route--upstream"},"How to configure Route + Upstream"),(0,o.kt)(r.Z,{mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"yaml",label:"YAML",default:!0,mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'routes:\n    -\n        uri: /hello\n        upstream_id: 1\nupstreams:\n    -\n        id: 1\n        nodes:\n            "127.0.0.1:1980": 1\n        type: roundrobin\n#END\n'))),(0,o.kt)(l.Z,{value:"json",label:"JSON",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "routes": [\n    {\n      "uri": "/hello",\n      "upstream_id": 1\n    }\n  ],\n  "upstreams": [\n    {\n      "id": 1,\n      "nodes": {\n        "127.0.0.1:1980": 1\n      },\n      "type": "roundrobin"\n    }\n  ]\n}\n')))),(0,o.kt)("h3",{id:"how-to-configure-route--service--upstream"},"How to configure Route + Service + Upstream"),(0,o.kt)(r.Z,{mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"yaml",label:"YAML",default:!0,mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'routes:\n    -\n        uri: /hello\n        service_id: 1\nservices:\n    -\n        id: 1\n        upstream_id: 2\nupstreams:\n    -\n        id: 2\n        nodes:\n            "127.0.0.1:1980": 1\n        type: roundrobin\n#END\n'))),(0,o.kt)(l.Z,{value:"json",label:"JSON",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "routes": [\n    {\n      "uri": "/hello",\n      "service_id": 1\n    }\n  ],\n  "services": [\n    {\n      "id": 1,\n      "upstream_id": 2\n    }\n  ],\n  "upstreams": [\n    {\n      "id": 2,\n      "nodes": {\n        "127.0.0.1:1980": 1\n      },\n      "type": "roundrobin"\n    }\n  ]\n}\n')))),(0,o.kt)("h3",{id:"how-to-configure-plugins"},"How to configure Plugins"),(0,o.kt)(r.Z,{mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"yaml",label:"YAML",default:!0,mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"# plugins listed here will be hot reloaded and override the boot configuration\nplugins:\n  - name: ip-restriction\n  - name: jwt-auth\n  - name: mqtt-proxy\n    stream: true # set 'stream' to true for stream plugins\n#END\n"))),(0,o.kt)(l.Z,{value:"json",label:"JSON",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "plugins": [\n    {\n      "name": "ip-restriction"\n    },\n    {\n      "name": "jwt-auth"\n    },\n    {\n      "name": "mqtt-proxy",\n      "stream": true\n    }\n  ]\n}\n')))),(0,o.kt)("h3",{id:"how-to-configure-plugin-configs"},"How to configure Plugin Configs"),(0,o.kt)(r.Z,{mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"yaml",label:"YAML",default:!0,mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'plugin_configs:\n    -\n        id: 1\n        plugins:\n            response-rewrite:\n                body: "hello\\n"\nroutes:\n    - id: 1\n      uri: /hello\n      plugin_config_id: 1\n      upstream:\n        nodes:\n          "127.0.0.1:1980": 1\n        type: roundrobin\n#END\n'))),(0,o.kt)(l.Z,{value:"json",label:"JSON",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "plugin_configs": [\n    {\n      "id": 1,\n      "plugins": {\n        "response-rewrite": {\n          "body": "hello\\n"\n        }\n      }\n    }\n  ],\n  "routes": [\n    {\n      "id": 1,\n      "uri": "/hello",\n      "plugin_config_id": 1,\n      "upstream": {\n        "nodes": {\n          "127.0.0.1:1980": 1\n        },\n        "type": "roundrobin"\n      }\n    }\n  ]\n}\n')))),(0,o.kt)("h3",{id:"how-to-enable-ssl"},"How to enable SSL"),(0,o.kt)(r.Z,{mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"yaml",label:"YAML",default:!0,mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'ssls:\n    -\n        cert: |\n            -----BEGIN CERTIFICATE-----\n            MIIDrzCCApegAwIBAgIJAI3Meu/gJVTLMA0GCSqGSIb3DQEBCwUAMG4xCzAJBgNV\n            BAYTAkNOMREwDwYDVQQIDAhaaGVqaWFuZzERMA8GA1UEBwwISGFuZ3pob3UxDTAL\n            BgNVBAoMBHRlc3QxDTALBgNVBAsMBHRlc3QxGzAZBgNVBAMMEmV0Y2QuY2x1c3Rl\n            ci5sb2NhbDAeFw0yMDEwMjgwMzMzMDJaFw0yMTEwMjgwMzMzMDJaMG4xCzAJBgNV\n            BAYTAkNOMREwDwYDVQQIDAhaaGVqaWFuZzERMA0GA1UEBwwISGFuZ3pob3UxDTAL\n            BgNVBAoMBHRlc3QxDTALBgNVBAsMBHRlc3QxGzAZBgNVBAMMEmV0Y2QuY2x1c3Rl\n            ci5sb2NhbDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJ/qwxCR7g5S\n            s9+VleopkLi5pAszEkHYOBpwF/hDeRdxU0I0e1zZTdTlwwPy2vf8m3kwoq6fmNCt\n            tdUUXh5Wvgi/2OA8HBBzaQFQL1Av9qWwyES5cx6p0ZBwIrcXQIsl1XfNSUpQNTSS\n            D44TGduXUIdeshukPvMvLWLezynf2/WlgVh/haWtDG99r/Gj3uBdjl0m/xGvKvIv\n            NFy6EdgG9fkwcIalutjrUnGl9moGjwKYu4eXW2Zt5el0d1AHXUsqK4voe0p+U2Nz\n            quDmvxteXWdlsz8o5kQT6a4DUtWhpPIfNj9oZfPRs3LhBFQ74N70kVxMOCdec1lU\n            bnFzLIMGlz0CAwEAAaNQME4wHQYDVR0OBBYEFFHeljijrr+SPxlH5fjHRPcC7bv2\n            MB8GA1UdIwQYMBaAFFHeljijrr+SPxlH5fjHRPcC7bv2MAwGA1UdEwQFMAMBAf8w\n            DQYJKoZIhvcNAQELBQADggEBAG6NNTK7sl9nJxeewVuogCdMtkcdnx9onGtCOeiQ\n            qvh5Xwn9akZtoLMVEdceU0ihO4wILlcom3OqHs9WOd6VbgW5a19Thh2toxKidHz5\n            rAaBMyZsQbFb6+vFshZwoCtOLZI/eIZfUUMFqMXlEPrKru1nSddNdai2+zi5rEnM\n            HCot43+3XYuqkvWlOjoi9cP+C4epFYrxpykVbcrtbd7TK+wZNiK3xtDPnVzjdNWL\n            geAEl9xrrk0ss4nO/EreTQgS46gVU+tLC+b23m2dU7dcKZ7RDoiA9bdVc4a2IsaS\n            2MvLL4NZ2nUh8hAEHiLtGMAV3C6xNbEyM07hEpDW6vk6tqk=\n            -----END CERTIFICATE-----\n        key: |\n            -----BEGIN PRIVATE KEY-----\n            MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQCf6sMQke4OUrPf\n            lZXqKZC4uaQLMxJB2DgacBf4Q3kXcVNCNHtc2U3U5cMD8tr3/Jt5MKKun5jQrbXV\n            FF4eVr4Iv9jgPBwQc2kBUC9QL/alsMhEuXMeqdGQcCK3F0CLJdV3zUlKUDU0kg+O\n            Exnbl1CHXrIbpD7zLy1i3s8p39v1pYFYf4WlrQxvfa/xo97gXY5dJv8RryryLzRc\n            uhHYBvX5MHCGpbrY61JxpfZqBo8CmLuHl1tmbeXpdHdQB11LKiuL6HtKflNjc6rg\n            5r8bXl1nZbM/KOZEE+muA1LVoaTyHzY/aGXz0bNy4QRUO+De9JFcTDgnXnNZVG5x\n            cyyDBpc9AgMBAAECggEAatcEtehZPJaCeClPPF/Cwbe9YoIfe4BCk186lHI3z7K1\n            5nB7zt+bwVY0AUpagv3wvXoB5lrYVOsJpa9y5iAb3GqYMc/XDCKfD/KLea5hwfcn\n            BctEn0LjsPVKLDrLs2t2gBDWG2EU+udunwQh7XTdp2Nb6V3FdOGbGAg2LgrSwP1g\n            0r4z14F70oWGYyTQ5N8UGuyryVrzQH525OYl38Yt7R6zJ/44FVi/2TvdfHM5ss39\n            SXWi00Q30fzaBEf4AdHVwVCRKctwSbrIOyM53kiScFDmBGRblCWOxXbiFV+d3bjX\n            gf2zxs7QYZrFOzOO7kLtHGua4itEB02497v+1oKDwQKBgQDOBvCVGRe2WpItOLnj\n            SF8iz7Sm+jJGQz0D9FhWyGPvrN7IXGrsXavA1kKRz22dsU8xdKk0yciOB13Wb5y6\n            yLsr/fPBjAhPb4h543VHFjpAQcxpsH51DE0b2oYOWMmz+rXGB5Jy8EkP7Q4njIsc\n            2wLod1dps8OT8zFx1jX3Us6iUQKBgQDGtKkfsvWi3HkwjFTR+/Y0oMz7bSruE5Z8\n            g0VOHPkSr4XiYgLpQxjbNjq8fwsa/jTt1B57+By4xLpZYD0BTFuf5po+igSZhH8s\n            QS5XnUnbM7d6Xr/da7ZkhSmUbEaMeHONSIVpYNgtRo4bB9Mh0l1HWdoevw/w5Ryt\n            L/OQiPhfLQKBgQCh1iG1fPh7bbnVe/HI71iL58xoPbCwMLEFIjMiOFcINirqCG6V\n            LR91Ytj34JCihl1G4/TmWnsH1hGIGDRtJLCiZeHL70u32kzCMkI1jOhFAWqoutMa\n            7obDkmwraONIVW/kFp6bWtSJhhTQTD4adI9cPCKWDXdcCHSWj0Xk+U8HgQKBgBng\n            t1HYhaLzIZlP/U/nh3XtJyTrX7bnuCZ5FhKJNWrYjxAfgY+NXHRYCKg5x2F5j70V\n            be7pLhxmCnrPTMKZhik56AaTBOxVVBaYWoewhUjV4GRAaK5Wc8d9jB+3RizPFwVk\n            V3OU2DJ1SNZ+W2HBOsKrEfwFF/dgby6i2w6MuAP1AoGBAIxvxUygeT/6P0fHN22P\n            zAHFI4v2925wYdb7H//D8DIADyBwv18N6YH8uH7L+USZN7e4p2k8MGGyvTXeC6aX\n            IeVtU6fH57Ddn59VPbF20m8RCSkmBvSdcbyBmqlZSBE+fKwCliKl6u/GH0BNAWKz\n            r8yiEiskqRmy7P7MY9hDmEbG\n            -----END PRIVATE KEY-----\n        snis:\n            - "yourdomain.com"\n#END\n'))),(0,o.kt)(l.Z,{value:"json",label:"JSON",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "ssls": [\n    {\n      "cert": "-----BEGIN CERTIFICATE-----\\nMIIDrzCCApegAwIBAgIJAI3Meu/gJVTLMA0GCSqGSIb3DQEBCwUAMG4xCzAJBgNV\\nBAYTAkNOMREwDwYDVQQIDAhaaGVqaWFuZzERMA8GA1UEBwwISGFuZ3pob3UxDTAL\\nBgNVBAoMBHRlc3QxDTALBgNVBAsMBHRlc3QxGzAZBgNVBAMMEmV0Y2QuY2x1c3Rl\\nci5sb2NhbDAeFw0yMDEwMjgwMzMzMDJaFw0yMTEwMjgwMzMzMDJaMG4xCzAJBgNV\\nBAYTAkNOMREwDwYDVQQIDAhaaGVqaWFuZzERMA8GA1UEBwwISGFuZ3pob3UxDTAL\\nBgNVBAoMBHRlc3QxDTALBgNVBAsMBHRlc3QxGzAZBgNVBAMMEmV0Y2QuY2x1c3Rl\\nci5sb2NhbDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJ/qwxCR7g5S\\ns9+VleopkLi5pAszEkHYOBpwF/hDeRdxU0I0e1zZTdTlwwPy2vf8m3kwoq6fmNCt\\ntdUUXh5Wvgi/2OA8HBBzaQFQL1Av9qWwyES5cx6p0ZBwIrcXQIsl1XfNSUpQNTSS\\nD44TGduXUIdeshukPvMvLWLezynf2/WlgVh/haWtDG99r/Gj3uBdjl0m/xGvKvIv\\nNFy6EdgG9fkwcIalutjrUnGl9moGjwKYu4eXW2Zt5el0d1AHXUsqK4voe0p+U2Nz\\nquDmvxteXWdlsz8o5kQT6a4DUtWhpPIfNj9oZfPRs3LhBFQ74N70kVxMOCdec1lU\\nbnFzLIMGlz0CAwEAAaNQME4wHQYDVR0OBBYEFFHeljijrr+SPxlH5fjHRPcC7bv2\\nMB8GA1UdIwQYMBaAFFHeljijrr+SPxlH5fjHRPcC7bv2MAwGA1UdEwQFMAMBAf8w\\nDQYJKoZIhvcNAQELBQADggEBAG6NNTK7sl9nJxeewVuogCdMtkcdnx9onGtCOeiQ\\nqvh5Xwn9akZtoLMVEdceU0ihO4wILlcom3OqHs9WOd6VbgW5a19Thh2toxKidHz5\\nrAaBMyZsQbFb6+vFshZwoCtOLZI/eIZfUUMFqMXlEPrKru1nSddNdai2+zi5rEnM\\nHCot43+3XYuqkvWlOjoi9cP+C4epFYrxpykVbcrtbd7TK+wZNiK3xtDPnVzjdNWL\\ngeAEl9xrrk0ss4nO/EreTQgS46gVU+tLC+b23m2dU7dcKZ7RDoiA9bdVc4a2IsaS\\n2MvLL4NZ2nUh8hAEHiLtGMAV3C6xNbEyM07hEpDW6vk6tqk=\\n-----END CERTIFICATE-----",\n      "key": "-----BEGIN PRIVATE KEY-----\\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQCf6sMQke4OUrPf\\nlZXqKZC4uaQLMxJB2DgacBf4Q3kXcVNCNHtc2U3U5cMD8tr3/Jt5MKKun5jQrbXV\\nFF4eVr4Iv9jgPBwQc2kBUC9QL/alsMhEuXMeqdGQcCK3F0CLJdV3zUlKUDU0kg+O\\nExnbl1CHXrIbpD7zLy1i3s8p39v1pYFYf4WlrQxvfa/xo97gXY5dJv8RryryLzRc\\nuhHYBvX5MHCGpbrY61JxpfZqBo8CmLuHl1tmbeXpdHdQB11LKiuL6HtKflNjc6rg\\n5r8bXl1nZbM/KOZEE+muA1LVoaTyHzY/aGXz0bNy4QRUO+De9JFcTDgnXnNZVG5x\\ncyyDBpc9AgMBAAECggEAatcEtehZPJaCeClPPF/Cwbe9YoIfe4BCk186lHI3z7K1\\n5nB7zt+bwVY0AUpagv3wvXoB5lrYVOsJpa9y5iAb3GqYMc/XDCKfD/KLea5hwfcn\\nBctEn0LjsPVKLDrLs2t2gBDWG2EU+udunwQh7XTdp2Nb6V3FdOGbGAg2LgrSwP1g\\n0r4z14F70oWGYyTQ5N8UGuyryVrzQH525OYl38Yt7R6zJ/44FVi/2TvdfHM5ss39\\nSXWi00Q30fzaBEf4AdHVwVCRKctwSbrIOyM53kiScFDmBGRblCWOxXbiFV+d3bjX\\ngf2zxs7QYZrFOzOO7kLtHGua4itEB02497v+1oKDwQKBgQDOBvCVGRe2WpItOLnj\\nSF8iz7Sm+jJGQz0D9FhWyGPvrN7IXGrsXavA1kKRz22dsU8xdKk0yciOB13Wb5y6\\nyLsr/fPBjAhPb4h543VHFjpAQcxpsH51DE0b2oYOWMmz+rXGB5Jy8EkP7Q4njIsc\\n2wLod1dps8OT8zFx1jX3Us6iUQKBgQDGtKkfsvWi3HkwjFTR+/Y0oMz7bSruE5Z8\\ng0VOHPkSr4XiYgLpQxjbNjq8fwsa/jTt1B57+By4xLpZYD0BTFuf5po+igSZhH8s\\nQS5XnUnbM7d6Xr/da7ZkhSmUbEaMeHONSIVpYNgtRo4bB9Mh0l1HWdoevw/w5Ryt\\nL/OQiPhfLQKBgQCh1iG1fPh7bbnVe/HI71iL58xoPbCwMLEFIjMiOFcINirqCG6V\\nLR91Ytj34JCihl1G4/TmWnsH1hGIGDRtJLCiZeHL70u32kzCMkI1jOhFAWqoutMa\\n7obDkmwraONIVW/kFp6bWtSJhhTQTD4adI9cPCKWDXdcCHSWj0Xk+U8HgQKBgBng\\nt1HYhaLzIZlP/U/nh3XtJyTrX7bnuCZ5FhKJNWrYjxAfgY+NXHRYCKg5x2F5j70V\\nbe7pLhxmCnrPTMKZhik56AaTBOxVVBaYWoewhUjV4GRAaK5Wc8d9jB+3RizPFwVk\\nV3OU2DJ1SNZ+W2HBOsKrEfwFF/dgby6i2w6MuAP1AoGBAIxvxUygeT/6P0fHN22P\\nzAHFI4v2925wYdb7H//D8DIADyBwv18N6YH8uH7L+USZN7e4p2k8MGGyvTXeC6aX\\nIeVtU6fH57Ddn59VPbF20m8RCSkmBvSdcbyBmqlZSBE+fKwCliKl6u/GH0BNAWKz\\nr8yiEiskqRmy7P7MY9hDmEbG\\n-----END PRIVATE KEY-----",\n      "snis": [\n        "yourdomain.com"\n      ]\n    }\n  ]\n}\n')))),(0,o.kt)("h3",{id:"how-to-configure-global-rule"},"How to configure global rule"),(0,o.kt)(r.Z,{mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"yaml",label:"YAML",default:!0,mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'global_rules:\n    -\n        id: 1\n        plugins:\n            response-rewrite:\n                body: "hello\\n"\n#END\n'))),(0,o.kt)(l.Z,{value:"json",label:"JSON",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "global_rules": [\n    {\n      "id": 1,\n      "plugins": {\n        "response-rewrite": {\n          "body": "hello\\n"\n        }\n      }\n    }\n  ]\n}\n')))),(0,o.kt)("h3",{id:"how-to-configure-consumer"},"How to configure consumer"),(0,o.kt)(r.Z,{mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"yaml",label:"YAML",default:!0,mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"consumers:\n  - username: jwt\n    plugins:\n        jwt-auth:\n            key: user-key\n            secret: my-secret-key\n#END\n"))),(0,o.kt)(l.Z,{value:"json",label:"JSON",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "consumers": [\n    {\n      "username": "jwt",\n      "plugins": {\n        "jwt-auth": {\n          "key": "user-key",\n          "secret": "my-secret-key"\n        }\n      }\n    }\n  ]\n}\n')))),(0,o.kt)("h3",{id:"how-to-configure-plugin-metadata"},"How to configure plugin metadata"),(0,o.kt)(r.Z,{mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"yaml",label:"YAML",default:!0,mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'upstreams:\n  - id: 1\n    nodes:\n      "127.0.0.1:1980": 1\n    type: roundrobin\nroutes:\n  -\n    uri: /hello\n    upstream_id: 1\n    plugins:\n        http-logger:\n            batch_max_size: 1\n            uri: http://127.0.0.1:1980/log\nplugin_metadata:\n  - id: http-logger # note the id is the plugin name\n    log_format:\n        host: "$host"\n        remote_addr: "$remote_addr"\n#END\n'))),(0,o.kt)(l.Z,{value:"json",label:"JSON",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "upstreams": [\n    {\n      "id": 1,\n      "nodes": {\n        "127.0.0.1:1980": 1\n      },\n      "type": "roundrobin"\n    }\n  ],\n  "routes": [\n    {\n      "uri": "/hello",\n      "upstream_id": 1,\n      "plugins": {\n        "http-logger": {\n          "batch_max_size": 1,\n          "uri": "http://127.0.0.1:1980/log"\n        }\n      }\n    }\n  ],\n  "plugin_metadata": [\n    {\n      "id": "http-logger",\n      "log_format": {\n        "host": "$host",\n        "remote_addr": "$remote_addr"\n      }\n    }\n  ]\n}\n')))),(0,o.kt)("h3",{id:"how-to-configure-stream-route"},"How to configure stream route"),(0,o.kt)(r.Z,{mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"yaml",label:"YAML",default:!0,mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'stream_routes:\n  - server_addr: 127.0.0.1\n    server_port: 1985\n    id: 1\n    upstream_id: 1\n    plugins:\n      mqtt-proxy:\n        protocol_name: "MQTT"\n        protocol_level: 4\nupstreams:\n  - nodes:\n      "127.0.0.1:1995": 1\n    type: roundrobin\n    id: 1\n#END\n'))),(0,o.kt)(l.Z,{value:"json",label:"JSON",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "stream_routes": [\n    {\n      "server_addr": "127.0.0.1",\n      "server_port": 1985,\n      "id": 1,\n      "upstream_id": 1,\n      "plugins": {\n        "mqtt-proxy": {\n          "protocol_name": "MQTT",\n          "protocol_level": 4\n        }\n      }\n    }\n  ],\n  "upstreams": [\n    {\n      "nodes": {\n        "127.0.0.1:1995": 1\n      },\n      "type": "roundrobin",\n      "id": 1\n    }\n  ]\n}\n')))),(0,o.kt)("h3",{id:"how-to-configure-protos"},"How to configure protos"),(0,o.kt)(r.Z,{mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"yaml",label:"YAML",default:!0,mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'protos:\n  - id: helloworld\n    desc: hello world\n    content: >\n      syntax = "proto3";\n      package helloworld;\n\n      service Greeter {\n        rpc SayHello (HelloRequest) returns (HelloReply) {}\n      }\n      message HelloRequest {\n        string name = 1;\n      }\n      message HelloReply {\n        string message = 1;\n      }\n#END\n'))),(0,o.kt)(l.Z,{value:"json",label:"JSON",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "protos": [\n    {\n      "id": "helloworld",\n      "desc": "hello world",\n      "content": "syntax = \\"proto3\\";\\npackage helloworld;\\n\\nservice Greeter {\\n  rpc SayHello (HelloRequest) returns (HelloReply) {}\\n}\\nmessage HelloRequest {\\n  string name = 1;\\n}\\nmessage HelloReply {\\n  string message = 1;\\n}\\n"\n    }\n  ]\n}\n')))))}m.isMDXComponent=!0},86010:(e,n,t)=>{function a(e){var n,t,o="";if("string"==typeof e||"number"==typeof e)o+=e;else if("object"==typeof e)if(Array.isArray(e))for(n=0;n<e.length;n++)e[n]&&(t=a(e[n]))&&(o&&(o+=" "),o+=t);else for(n in e)e[n]&&(o&&(o+=" "),o+=n);return o}t.d(n,{Z:()=>o});const o=function(){for(var e,n,t=0,o="";t<arguments.length;)(e=arguments[t++])&&(n=a(e))&&(o&&(o+=" "),o+=n);return o}}}]);