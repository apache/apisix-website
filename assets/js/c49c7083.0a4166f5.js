"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[36515],{35318:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var a=n(27378);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,p=r(e,["components","mdxType","originalType","parentName"]),d=c(n),h=o,m=d["".concat(l,".").concat(h)]||d[h]||u[h]||i;return n?a.createElement(m,s(s({ref:t},p),{},{components:n})):a.createElement(m,s({ref:t},p))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,s=new Array(i);s[0]=d;var r={};for(var l in t)hasOwnProperty.call(t,l)&&(r[l]=t[l]);r.originalType=e,r.mdxType="string"==typeof e?e:o,s[1]=r;for(var c=2;c<i;c++)s[c]=n[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},61495:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>c});var a=n(25773),o=(n(27378),n(35318));const i={title:"Secure Exposure of Istio Services with APISIX Ingress",authors:[{name:"Jintao Zhang",title:"Author",url:"https://github.com/tao12345666333",image_url:"https://avatars.githubusercontent.com/u/3264292?v=4"},{name:"Sylvia",title:"Technical Writer",url:"https://github.com/SylviaBABY",image_url:"https://avatars.githubusercontent.com/u/39793568?v=4"}],keywords:["Apache APISIX","Istio","Kubernetes","APISIX Ingress Controller","Service Mesh"],description:"This article shows how to use Istio Service Mesh and API Gateway Apache APISIX to expose services from a Service Mesh-enabled Kubernetes cluster outside the cluster.",tags:["Ecosystem"]},s=void 0,r={permalink:"/blog/2021/12/17/exposure-istio-with-apisix-ingress",source:"@site/blog/2021/12/17/exposure-istio-with-apisix-ingress.md",title:"Secure Exposure of Istio Services with APISIX Ingress",description:"This article shows how to use Istio Service Mesh and API Gateway Apache APISIX to expose services from a Service Mesh-enabled Kubernetes cluster outside the cluster.",date:"2021-12-17T00:00:00.000Z",formattedDate:"December 17, 2021",tags:[{label:"Ecosystem",permalink:"/blog/tags/ecosystem"}],readingTime:8.895,truncated:!0,authors:[{name:"Jintao Zhang",title:"Author",url:"https://github.com/tao12345666333",image_url:"https://avatars.githubusercontent.com/u/3264292?v=4",imageURL:"https://avatars.githubusercontent.com/u/3264292?v=4"},{name:"Sylvia",title:"Technical Writer",url:"https://github.com/SylviaBABY",image_url:"https://avatars.githubusercontent.com/u/39793568?v=4",imageURL:"https://avatars.githubusercontent.com/u/39793568?v=4"}],prevItem:{title:"Biweekly Report (Dec 1 - Dec 15)",permalink:"/blog/2021/12/20/weekly-report-1215"},nextItem:{title:"Webinar | Apache APISIX \xd7 Apache RocketMQ Online Meetup",permalink:"/blog/2021/12/16/apisix-with-rocketmq-meetup"}},l={authorsImageUrls:[void 0,void 0]},c=[{value:"Service Mesh",id:"service-mesh",children:[],level:2},{value:"Step 1: Prepare the Kubernetes cluster",id:"step-1-prepare-the-kubernetes-cluster",children:[],level:2},{value:"Step 2: Deploy Istio",id:"step-2-deploy-istio",children:[],level:2},{value:"Step 3: Deploy Apache APISIX",id:"step-3-deploy-apache-apisix",children:[],level:2},{value:"Test Session",id:"test-session",children:[{value:"Simple test",id:"simple-test",children:[],level:3},{value:"BookInfo Deployment Testing",id:"bookinfo-deployment-testing",children:[],level:3}],level:2},{value:"Visualization tool: Kiali",id:"visualization-tool-kiali",children:[],level:2},{value:"Summary",id:"summary",children:[],level:2}],p={toc:c};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"This article shows you step by step how to use Istio Service Mesh and Apache APISIX, to expose services in a Service Mesh-enabled Kubernetes cluster to the outside of the cluster through very detailed steps.")),(0,o.kt)("h2",{id:"service-mesh"},"Service Mesh"),(0,o.kt)("p",null,"With the hot development of Cloud-Native technology, Service Mesh is gradually becoming popular in the microservices field. The popular implementations of Service Mesh are ",(0,o.kt)("a",{parentName:"p",href:"https://istio.io/"},"Istio")," and ",(0,o.kt)("a",{parentName:"p",href:"https://linkerd.io/"},"Linkerd"),"."),(0,o.kt)("p",null,"The following diagram shows the schematic diagram of Service Mesh, which introduces Sidecar Proxy to complete the interconnection and communication between microservices."),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://static.apiseven.com/202108/1639730484170-fbf2e5ed-3041-4975-8730-a16c92be68f2.png",alt:"Service Mesh"})),(0,o.kt)("p",null,"The diagram above shows that Service Mesh focuses more on east-west traffic in the traditional sense, i.e., traffic between services. When we use Service Mesh with Kubernetes, the east-west traffic corresponds to the traffic within the Kubernetes cluster."),(0,o.kt)("p",null,"Back in real-world usage scenarios, we won't only be exposed to traffic within the Kubernetes cluster, we will mostly need to expose some services outside of the cluster for users or other services to use. But when exposing services in a Kubernetes cluster outside the cluster, we have to consider factors such as security and observability."),(0,o.kt)("p",null,"We'll show you how to securely expose services in a Service Mesh-enabled Kubernetes cluster outside the cluster using Istio Service Mesh and Apache APISIX."),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://static.apiseven.com/202108/1639730236819-0911b90b-811f-4451-b0e5-f89ac3e04b77.png",alt:"How to deal"})),(0,o.kt)("h2",{id:"step-1-prepare-the-kubernetes-cluster"},"Step 1: Prepare the Kubernetes cluster"),(0,o.kt)("p",null,"Here we use ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/kubernetes-sigs/kind/"},"Kind")," to create a temporary cluster locally for demonstration purposes. You can refer to the ",(0,o.kt)("a",{parentName:"p",href:"https://kind.sigs.k8s.io/docs/user/quick-start/#installation"},"official documentation")," for how to install it with the Kind command."),(0,o.kt)("p",null,"Here is the yaml configuration file used to create the demo cluster, save it as ",(0,o.kt)("inlineCode",{parentName:"p"},"kind-config.yaml"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"kind: Cluster\napiVersion: kind.x-k8s.io/v1alpha4\nnodes:\n- role: control-plane\n- role: worker\n- role: worker\n- role: worker\n")),(0,o.kt)("p",null,"Then use this configuration file to create a cluster."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'(MoeLove) \u279c kind create cluster --config kind-config.yaml\nCreating cluster "kind" ...\n \u2713 Ensuring node image (kindest/node:v1.22.2) \ud83d\uddbc\n \u2713 Preparing nodes \ud83d\udce6 \ud83d\udce6 \ud83d\udce6 \ud83d\udce6  \n \u2713 Writing configuration \ud83d\udcdc\n \u2713 Starting control-plane \ud83d\udd79\ufe0f\n \u2713 Installing CNI \ud83d\udd0c\n \u2713 Installing StorageClass \ud83d\udcbe\n \u2713 Joining worker nodes \ud83d\ude9c\nSet kubectl context to "kind-kind"\nYou can now use your cluster with:\n\nkubectl cluster-info --context kind-kind\n\nNot sure what to do next? \ud83d\ude05  Check out https://kind.sigs.k8s.io/docs/user/quick-start/\n')),(0,o.kt)("h2",{id:"step-2-deploy-istio"},"Step 2: Deploy Istio"),(0,o.kt)("p",null,"After the Kubernetes cluster is created, let's deploy Istio."),(0,o.kt)("p",null,"First, create a directory named ",(0,o.kt)("inlineCode",{parentName:"p"},"apisix-istio")," and do the following after entering the directory."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'(MoeLove) \u279c mkdir apisix-istio\n(MoeLove) \u279c cd apisix-istio\n(MoeLove) \u279c curl -sL https://istio.io/downloadIstio | sh -\n\nDownloading istio-1.12.1 from https://github.com/istio/istio/releases/download/1.12.1/istio-1.12.1-linux-amd64.tar.gz ...\n\nIstio 1.12.1 Download Complete!\n\nIstio has been successfully downloaded into the istio-1.12.1 folder on your system.\n\nNext Steps:\nSee https://istio.io/latest/docs/setup/install/ to add Istio to your Kubernetes cluster.\n\nTo configure the istioctl client tool for your workstation,\nadd the /root/apisix-istio/istio-1.12.1/bin directory to your environment path variable with:\n         export PATH="$PATH:/root/apisix-istio/istio-1.12.1/bin"\n\nBegin the Istio pre-installation check by running:\n         istioctl x precheck\n\nNeed more information? Visit https://istio.io/latest/docs/setup/install/\n')),(0,o.kt)("p",null,"When the above operation is completed, a new directory will be created under the current directory. We can follow the output of the above command to continue the operation."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'(MoeLove) \u279c ls\nistio-1.12.1\n(MoeLove) \u279c export PATH="$PATH:/root/apisix-istio/istio-1.12.1/bin"\n(MoeLove) \u279c istioctl x precheck\n\u2714 No issues found when checking the cluster. Istio is safe to install or upgrade!\n  To get started, check out https://istio.io/latest/docs/setup/getting-started/\n')),(0,o.kt)("p",null,"Next, the real deployment process begins. Just set it to ",(0,o.kt)("inlineCode",{parentName:"p"},"--set profile=minimal")," for a minimal installation."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"(MoeLove) \u279c istioctl install --set profile=minimal  -y\n\u2714 Istio core\ninstalled\n\n\u2714 Istiod\ninstalled\n\n\u2714 Installation\ncomplete\n\nMaking this installation the default for injection and validation.\n\nThank you for installing Istio 1.12.  Please take a few minutes to tell us about your install/upgrade experience!  https://forms.gle/FegQbc9UvePd4Z9z7\n")),(0,o.kt)("p",null,"Finally, check the current deployment status and you can see that the Pod is already running."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"(MoeLove) \u279c kubectl -n istio-system get pods\nNAME                      READY   STATUS    RESTARTS   AGE\nistiod-58d79b7bff-g66cv   1/1     Running   0          1m\n")),(0,o.kt)("h2",{id:"step-3-deploy-apache-apisix"},"Step 3: Deploy Apache APISIX"),(0,o.kt)("p",null,"Next, we will deploy Apache APISIX."),(0,o.kt)("p",null,"First create a Namespace named ",(0,o.kt)("inlineCode",{parentName:"p"},"apisix-istio")," and enable auto-injection."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"(MoeLove) \u279c kubectl create ns apisix-istio\nnamespace/apisix-istio created\n(MoeLove) \u279c kubectl label namespace apisix-istio istio-injection=enabled\nnamespace/apisix-istio labeled\n")),(0,o.kt)("p",null,"Next, add Helm Repo and use Helm for Apache APISIX and Apache APISIX Ingress Controller deployments."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'(MoeLove) \u279c helm repo add apisix https://charts.apiseven.com\n"apisix" has been added to your repositories\n(MoeLove) \u279c helm install apisix-istio apisix/apisix --set gateway.type=NodePort --set ingress-controller.enabled=true --set ingress-controller.config.apisix.serviceNamespace=apisix-istio  --set ingress-controller.config.apisix.serviceName=apisix-istio-admin  --namespace apisix-istio\nNAME: apisix-istio\nLAST DEPLOYED: Wed Dec 15 14:16:33 2021\nNAMESPACE: apisix-istio\nSTATUS: deployed\nREVISION: 1\nTEST SUITE: None\nNOTES:\n1. Get the application URL by running these commands:\n  export NODE_PORT=$(kubectl get --namespace apisix-istio -o jsonpath="{.spec.ports[0].nodePort}" services apisix-istio-gateway)\n  export NODE_IP=$(kubectl get nodes --namespace apisix-istio -o jsonpath="{.items[0].status.addresses[0].address}")\n  echo http://$NODE_IP:$NODE_PORT\n')),(0,o.kt)("p",null,"After executing the above command, you can wait for all Pods to run normally by executing the following command."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"(MoeLove) \u279c kubectl -n apisix-istio wait --for=condition=Ready pods --all\npod/apisix-istio-7bdfcb4bd9-89jcn condition met\npod/apisix-istio-etcd-0 condition met\npod/apisix-istio-etcd-1 condition met\npod/apisix-istio-etcd-2 condition met\npod/apisix-istio-ingress-controller-5fcbb75b8c-b4nnc condition met\n")),(0,o.kt)("p",null,"You can see that all the Pods are currently running properly. Next, let's test and verify."),(0,o.kt)("h2",{id:"test-session"},"Test Session"),(0,o.kt)("h3",{id:"simple-test"},"Simple test"),(0,o.kt)("p",null,"When we deployed Apache APISIX using Helm earlier, we selected the service exposure method as ",(0,o.kt)("inlineCode",{parentName:"p"},"NodePort"),", so we can then access Apache APISIX directly using the following command."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'(MoeLove) \u279c export NODE_PORT=$(kubectl get --namespace apisix-istio -o jsonpath="{.spec.ports[0].nodePort}" services apisix-istio-gateway)\n(MoeLove) \u279c export NODE_IP=$(kubectl get nodes --namespace apisix-istio -o jsonpath="{.items[0].status.addresses[0].address}")\n(MoeLove) \u279c curl http://$NODE_IP:$NODE_PORT\n{"error_msg":"404 Route Not Found"}\n')),(0,o.kt)("p",null,"Note that when requesting with the ",(0,o.kt)("inlineCode",{parentName:"p"},"curl")," command we add a ",(0,o.kt)("inlineCode",{parentName:"p"},"-v")," option to look at the response headers of the request."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'(MoeLove) \u279c curl -v http://$NODE_IP:$NODE_PORT\n* Rebuilt URL to: http://172.20.0.2:31225/\n*   Trying 172.20.0.2...\n* TCP_NODELAY set\n* Connected to 172.20.0.2 (172.20.0.2) port 31225 (#0)\n> GET / HTTP/1.1\n> Host: 172.20.0.2:31225\n> User-Agent: curl/7.58.0\n> Accept: */*\n>\n< HTTP/1.1 404 Not Found\n< date: Wed, 15 Dec 2021 14:31:40 GMT\n< content-type: text/plain; charset=utf-8\n< server: istio-envoy\n< x-envoy-upstream-service-time: 1\n< x-envoy-decorator-operation: apisix-istio-gateway.apisix-istio.svc.cluster.local:80/*\n< transfer-encoding: chunked\n<\n{"error_msg":"404 Route Not Found"}\n* Connection #0 to host 172.20.0.2 left intact\n')),(0,o.kt)("p",null,"As you can see from the above output, the response header contains the following."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"< server: istio-envoy\n< x-envoy-upstream-service-time: 1\n< x-envoy-decorator-operation: apisix-istio-gateway.apisix-istio.svc.cluster.local:80/*\n")),(0,o.kt)("p",null,"This means that Istio's auto-injection has succeeded, and that it is not Apache APISIX but Istio's Sidecar that is currently interacting directly."),(0,o.kt)("h3",{id:"bookinfo-deployment-testing"},"BookInfo Deployment Testing"),(0,o.kt)("p",null,"Next, we use Istio's own BookInfo sample application to perform the relevant tests."),(0,o.kt)("p",null,"First, create a Namespace and enable Istio's auto-injection."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"(MoeLove) \u279c kubectl create ns bookinfo\nnamespace/bookinfo created\n(MoeLove) \u279c kubectl label namespace bookinfo istio-injection=enabled\nnamespace/bookinfo labeled\n")),(0,o.kt)("p",null,"BookInfo deployment is then performed and the relevant deployment files are automatically created in the directory during the above-mentioned Istio installation."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"(MoeLove) \u279c kubectl -n bookinfo apply -f istio-1.12.1/samples/bookinfo/platform/kube/bookinfo.yaml\nservice/details created\nserviceaccount/bookinfo-details created\ndeployment.apps/details-v1 created\nservice/ratings created\nserviceaccount/bookinfo-ratings created\ndeployment.apps/ratings-v1 created\nservice/reviews created\nserviceaccount/bookinfo-reviews created`\ndeployment.apps/reviews-v1 created\ndeployment.apps/reviews-v2 created\ndeployment.apps/reviews-v3 created\nservice/productpage created\nserviceaccount/bookinfo-productpage created\ndeployment.apps/productpage-v1 created\n")),(0,o.kt)("p",null,"Wait for all Pods to run normally."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"(MoeLove) \u279c kubectl -n bookinfo get pods\nNAME                             READY   STATUS    RESTARTS   AGE\ndetails-v1-96cf758d8-qr6p9       2/2     Running   0          64s\nproductpage-v1-5f75dfbfb-22hcw   2/2     Running   0          64s\nratings-v1-779dbc4fdd-jt5zp      2/2     Running   0          64s\nreviews-v1-ffbbf7fc8-kxvrr       2/2     Running   0          64s\nreviews-v2-54546c6f84-pnjkn      2/2     Running   0          64s\nreviews-v3-74d6bf84cd-h4r9z      2/2     Running   0          63s\n")),(0,o.kt)("p",null,"Now we can use Apache APISIX to expose the service outside the Kubernetes cluster. Create a routing configuration using the following and save it as ",(0,o.kt)("inlineCode",{parentName:"p"},"productpage-ar.yaml"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: apisix.apache.org/v2beta2\nkind: ApisixRoute\nmetadata:\n name: productpage\nspec:\n http:\n - name: rule1\n   match:\n     hosts:\n     - apisix-istio.dev\n     paths:\n       - /*\n   backends:\n   - serviceName: productpage\n     servicePort: 9080\n")),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"The above configuration can be interpreted as creating a route with the domain name ",(0,o.kt)("inlineCode",{parentName:"p"},"apisix-istio.dev")," and forwarding all request traffic to port ",(0,o.kt)("inlineCode",{parentName:"p"},"9080")," of the ",(0,o.kt)("inlineCode",{parentName:"p"},"productpage")," service."))),(0,o.kt)("p",null,"Then create this resource."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"(MoeLove) \u279c kubectl -n bookinfo apply -f productpage-ar.yaml\napisixroute.apisix.apache.org/productpage created\n")),(0,o.kt)("p",null,"Request Apache APISIX again with the domain name we just configured, and you will see that a ",(0,o.kt)("inlineCode",{parentName:"p"},"200")," related prompt is returned."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'(MoeLove) \u279c curl -I -H "HOST: apisix-istio.dev" http://$NODE_IP:$NODE_PORT/\nHTTP/1.1 200 OK\ncontent-type: text/html; charset=utf-8\ncontent-length: 1683\ndate: Wed, 15 Dec 2021 15:47:30 GMT\nx-envoy-upstream-service-time: 7\nserver: istio-envoy\nx-envoy-decorator-operation: apisix-istio-gateway.apisix-istio.svc.cluster.local:80/*\n')),(0,o.kt)("p",null,"The Apache APISIX port can then be exposed via ",(0,o.kt)("inlineCode",{parentName:"p"},"port-forward"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"(MoeLove) \u279c kubectl -n apisix-istio port-forward --address 0.0.0.0 svc/apisix-istio-gateway 8080:80\nForwarding from 0.0.0.0:8080 -> 9080\n")),(0,o.kt)("p",null,"Finally, set the Header of ",(0,o.kt)("inlineCode",{parentName:"p"},"HOST: apisix-istio.dev")," in your browser and try to make a request, you will get the correct page as shown below."),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://static.apiseven.com/202108/1639713895938-dec7460b-fa51-443e-a32e-fe2000788127.png",alt:"Correct page"})),(0,o.kt)("h2",{id:"visualization-tool-kiali"},"Visualization tool: Kiali"),(0,o.kt)("p",null,"Kiali is a tool that allows visualization of Istio and can be installed as an Istio add-on."),(0,o.kt)("p",null,"It is deployed here directly using the configuration files in the ",(0,o.kt)("inlineCode",{parentName:"p"},"addons")," directory carried by Istio."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"(MoeLove) \u279c kubectl -n istio-system apply -f  istio-1.12.1/samples/addons/\nserviceaccount/grafana created\nconfigmap/grafana created\nservice/grafana created\ndeployment.apps/grafana created\nconfigmap/istio-grafana-dashboards created\nconfigmap/istio-services-grafana-dashboards created\ndeployment.apps/jaeger created\nservice/tracing created\nservice/zipkin created\nservice/jaeger-collector created\nserviceaccount/kiali created\nconfigmap/kiali created\nclusterrole.rbac.authorization.k8s.io/kiali-viewer created\nclusterrole.rbac.authorization.k8s.io/kiali created\nclusterrolebinding.rbac.authorization.k8s.io/kiali created\nrole.rbac.authorization.k8s.io/kiali-controlplane created\nrolebinding.rbac.authorization.k8s.io/kiali-controlplane created\nservice/kiali created\ndeployment.apps/kiali created\nserviceaccount/prometheus created\nconfigmap/prometheus created\nclusterrole.rbac.authorization.k8s.io/prometheus created\nclusterrolebinding.rbac.authorization.k8s.io/prometheus created\nservice/prometheus created\ndeployment.apps/prometheus created\n")),(0,o.kt)("p",null,"Wait for the normal operation of Pod to view:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"(MoeLove) \u279c kubectl -n istio-system get pods\nNAME                          READY   STATUS    RESTARTS   AGE\ngrafana-6ccd56f4b6-wq6k5      1/1     Running   0          2m12s\nistiod-58d79b7bff-g66cv       1/1     Running   0          42m\njaeger-5d44bc5c5d-84ksf       1/1     Running   0          2m11s\nkiali-79b86ff5bc-w457g        1/1     Running   0          2m3s\nprometheus-64fd8ccd65-2mjcc   2/2     Running   0          2m9s\n")),(0,o.kt)("p",null,"Next, execute the following command to port-forward Kiali and access it in the browser. Of course, you can do the same thing with the above port-forward."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"(MoeLove) \u279c istioctl dashboard kiali  --address 0.0.0.0 --port 9999 --browser=false\nhttp://0.0.0.0:9999/kiali\nskipping opening a browser\n")),(0,o.kt)("p",null,"Open ",(0,o.kt)("inlineCode",{parentName:"p"},"http://0.0.0.0:9999/kiali")," in your browser and try to access the BookInfo service via Apache APISIX several times to see the following results."),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://static.apiseven.com/202108/1639714083338-d5a0601e-5dcb-446d-9b25-89ec95044ebd.png",alt:"Access BookInfo"})),(0,o.kt)("p",null,"Click Graph and select Namespace as BookInfo. During the test to access the BookInfo application, you can see the effect shown below. You can see the traffic coming in from the Apache APISIX and then flowing to the various components of the application."),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://static.apiseven.com/202108/1639714198376-27882a16-751b-436d-9212-69cad379bb72.png",alt:"Flow chart"})),(0,o.kt)("p",null,"This concludes the entire process. We have successfully exposed the services in the Kubernetes cluster with Service Mesh enabled using Apache APISIX and Apache APISIX Ingress Controller securely."),(0,o.kt)("h2",{id:"summary"},"Summary"),(0,o.kt)("p",null,"This article shows you step-by-step how to use Istio Service Mesh and Apache APISIX to expose the services in a Service Mesh-enabled Kubernetes cluster to the outside of the cluster in a very detailed step-by-step manner. You can also provide more security or traffic control through the rich plug-in capabilities of Apache APISIX in the future."),(0,o.kt)("p",null,"We hope that the above detailed tutorials will help you to more easily integrate with solutions such as Istio when using Apache APISIX."))}u.isMDXComponent=!0}}]);