"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[39629],{35318:(e,t,i)=>{i.d(t,{Zo:()=>p,kt:()=>d});var a=i(27378);function n(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function r(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,a)}return i}function s(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?r(Object(i),!0).forEach((function(t){n(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):r(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function o(e,t){if(null==e)return{};var i,a,n=function(e,t){if(null==e)return{};var i,a,n={},r=Object.keys(e);for(a=0;a<r.length;a++)i=r[a],t.indexOf(i)>=0||(n[i]=e[i]);return n}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)i=r[a],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(n[i]=e[i])}return n}var l=a.createContext({}),c=function(e){var t=a.useContext(l),i=t;return e&&(i="function"==typeof e?e(t):s(s({},t),e)),i},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var i=e.components,n=e.mdxType,r=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),h=c(i),d=n,m=h["".concat(l,".").concat(d)]||h[d]||u[d]||r;return i?a.createElement(m,s(s({ref:t},p),{},{components:i})):a.createElement(m,s({ref:t},p))}));function d(e,t){var i=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=i.length,s=new Array(r);s[0]=h;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:n,s[1]=o;for(var c=2;c<r;c++)s[c]=i[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,i)}h.displayName="MDXCreateElement"},74920:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var a=i(25773),n=(i(27378),i(35318));const r={title:"APISIX AI Gateway: From Cloud-Native to AI-Native",authors:[{name:"Yuansheng Wang",title:"author",url:"https://github.com/membphis",image_url:"https://github.com/membphis.png"},{name:"Yilia Lin",title:"Technical Writer",url:"https://github.com/Yilialinn",image_url:"https://github.com/Yilialinn.png"}],keywords:["open source","API gateway","Apache APISIX","AI gateway","APISIX AI gateway"],description:"This article is based on Yuansheng's presentation at the APISIX Shenzhen Meetup on April 12, 2025.",tags:["Case Studies"],image:"https://static.apiseven.com/uploads/2024/12/25/dxrwyegf_api7-cover.png"},s=void 0,o={permalink:"/blog/2025/05/29/apisix-ai-gateway-from-cloud-native-to-ai-native",source:"@site/blog/2025/05/29/apisix-ai-gateway-from-cloud-native-to-ai-native.md",title:"APISIX AI Gateway: From Cloud-Native to AI-Native",description:"This article is based on Yuansheng's presentation at the APISIX Shenzhen Meetup on April 12, 2025.",date:"2025-05-29T00:00:00.000Z",formattedDate:"May 29, 2025",tags:[{label:"Case Studies",permalink:"/blog/tags/case-studies"}],readingTime:14.645,truncated:!0,authors:[{name:"Yuansheng Wang",title:"author",url:"https://github.com/membphis",image_url:"https://github.com/membphis.png",imageURL:"https://github.com/membphis.png"},{name:"Yilia Lin",title:"Technical Writer",url:"https://github.com/Yilialinn",image_url:"https://github.com/Yilialinn.png",imageURL:"https://github.com/Yilialinn.png"}],prevItem:{title:"2025 Monthly Report (May 01 - May 30)",permalink:"/blog/2025/05/30/2025-may-monthly-report"},nextItem:{title:"APISIX Gateway Practices in Tencent Games",permalink:"/blog/2025/05/07/apisix-gateway-practice-in-tencent-timi"}},l={authorsImageUrls:[void 0,void 0]},c=[{value:"The Focus of the AI Era \u2014 Why",id:"the-focus-of-the-ai-era--why",children:[],level:2},{value:"Technical Evolution: From Cloud-Native to AI-Native",id:"technical-evolution-from-cloud-native-to-ai-native",children:[],level:2},{value:"The Rise of AI and APISIX&#39;s Response",id:"the-rise-of-ai-and-apisixs-response",children:[],level:2},{value:"APISIX AI Gateway",id:"apisix-ai-gateway",children:[{value:"Technical Innovations of APISIX AI Gateway",id:"technical-innovations-of-apisix-ai-gateway",children:[],level:3},{value:"APISIX AI Gateway Plugin Overview",id:"apisix-ai-gateway-plugin-overview",children:[],level:3},{value:"Example in Intelligent Manufacturing Enterprise",id:"example-in-intelligent-manufacturing-enterprise",children:[],level:3}],level:2},{value:"Future Plans for AI Gateway and MCP Server",id:"future-plans-for-ai-gateway-and-mcp-server",children:[{value:"The Application Scenarios and Value of MCP in APISIX",id:"the-application-scenarios-and-value-of-mcp-in-apisix",children:[],level:3},{value:"The Current Stage and Future Development of APISIX-MCP",id:"the-current-stage-and-future-development-of-apisix-mcp",children:[],level:3}],level:2}],p={toc:c};function u(e){let{components:t,...i}=e;return(0,n.kt)("wrapper",(0,a.Z)({},p,i,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Authors: Yuansheng Wang, Apache APISIX PMC member, Apache member, Co-founder & CTO of API7.ai, and author of ",(0,n.kt)("em",{parentName:"p"},"Apache APISIX in Action"),". This article is based on Yuansheng's presentation at the APISIX Shenzhen Meetup on April 12, 2025.")),(0,n.kt)("h2",{id:"the-focus-of-the-ai-era--why"},"The Focus of the AI Era \u2014 Why"),(0,n.kt)("p",null,"In 2015, I co-founded the open-source project APISIX with Ming Wen, and in 2019, we donated APISIX to the Apache Software Foundation. Over the past six years, from my personal perspective, its achievements have been remarkable. Initially, our goal was simple: to create an API gateway that could be used by others. However, as time went on, users from various fields began to adopt APISIX, such as Geely Automobile and Honor Mobile. When these products use APISIX to serve me, it feels like a child I created is giving back to its parents. This positive cycle is truly inspiring."),(0,n.kt)("p",null,"In the past two to three years, the rapid pace of technological development has been continuously changing our world. Initially, I thought I had little to do with AI development. However, after personally using AI, I found it to be extremely helpful. Now, in our daily work, we almost can't do without AI. However, the most challenging part of using AI is asking the right questions."),(0,n.kt)("p",null,"AI is essentially an empowering tool that can assist everyone, but the effectiveness of this assistance depends on the users. For example, if you have a high level of expertise, say 100 points, AI might help you improve to 120 points. But if you only have 50 points, it might only help you reach 60 points. Why is that? Because AI itself is static and can only serve as an auxiliary tool to humans. Different users will get different results when using it."),(0,n.kt)("p",null,"In the AI era, the most challenging part is asking the right questions. Meanwhile, to enhance one's position in society, the Golden Circle principle (Why, How, What) becomes crucial. Upon deeper reflection, we find that asking questions and the Golden Circle principle have significant overlap. The core of both lies in addressing the essential Why, rather than just focusing on the superficial What. Only by asking complete questions can we obtain the correct answers."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Introduction to Apache APISIX")),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://api7.ai/"},"API7.ai")," is the original creator and donator of Apache APISIX. Currently, it takes the loin's share in the Chinese API management market. We serve over 300,000 services and process more than ten trillion requests daily. APISIX has the following features:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Fully dynamic, real-time, and high-performance"),(0,n.kt)("li",{parentName:"ul"},"high security and stability"),(0,n.kt)("li",{parentName:"ul"},"Its cloud-native architecture provides strong elasticity and scalability, making it well-adapted to modern cloud environments"),(0,n.kt)("li",{parentName:"ul"},"Offer flexibility in hot reloading"),(0,n.kt)("li",{parentName:"ul"},"Rich ecosystem, integrating with various technologies and tools"),(0,n.kt)("li",{parentName:"ul"},"Active community ensures continuous contributions from numerous developers and users to the project's development")),(0,n.kt)("p",null,"For these reasons, APISIX is suitable for various scenarios, including enterprise north-south traffic gateways, east-west traffic application API gateways, Kubernetes Ingress Controllers, and service meshes. APISIX's applications have permeated almost every aspect of our daily lives. Whether you're hailing a taxi, calling an electric vehicle, conducting voice office work, making video calls, or trading stocks, APISIX is quietly providing support behind the scenes. Even fast-food chains like McDonald's and KFC, as well as virtually all domestic mobile phone and electric vehicle manufacturers, and even power bank providers, have APISIX's presence."),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://static.api7.ai/uploads/2025/05/30/lJWrLYEX_1-about-apache-apisix.webp",alt:"APISIX API Gateway Introduction"})),(0,n.kt)("h2",{id:"technical-evolution-from-cloud-native-to-ai-native"},"Technical Evolution: From Cloud-Native to AI-Native"),(0,n.kt)("p",null,"Cloud-native refers to systems can be elastically scaled to efficiently and swiftly respond to dynamically changing business demands. ",(0,n.kt)("strong",{parentName:"p"},"AI-native builds upon this architecture, emphasizing the support for proxying AI model requests, particularly in conversational application scenarios.")," Although these requests still use the HTTP protocol, consistent with traditional service requests, they exhibit significant differences in performance."),(0,n.kt)("p",null,"Specifically, AI request responses are typically slower. For instance, when a user poses a question to AI, the response time is often slower than traditional HTTP requests. In general, traditional HTTP requests usually have response times ranging from 10 to 100 milliseconds, with slightly longer ones completing within a few hundred milliseconds, essentially finishing interactions within one second. However, due to the generative computing nature of AI requests, response times are significantly prolonged."),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://static.api7.ai/uploads/2025/05/30/7Uzq5grl_2-challenges-of-cloud-native-era.webp",alt:"Challenges in Cloud-Native Era"})),(0,n.kt)("p",null,"Furthermore, AI applications introduce new security challenges. Taking internal corporate data as an example, in the past, people were most concerned about issues like Samsung's sensitive document leaks. In traditional business scenarios, enterprises rarely submit complete documents to external services, a process usually subject to strict and cautious evaluation. However, such operations are common in AI applications. For example, during rental or home purchasing processes, users may submit contract documents to AI models to analyze potential legal risks. Consequently, AI applications have triggered new internal information security requirements."),(0,n.kt)("p",null,"Finally, when selecting AI services, enterprises must also consider cost comprehensively. Taking ChatGPT and DeepSeek as examples, although they have similar functional capabilities, DeepSeek is significantly more cost-effective. Enterprises need to balance investments and returns in terms of response speed, output quality, cost control, system stability, and reliability."),(0,n.kt)("h2",{id:"the-rise-of-ai-and-apisixs-response"},"The Rise of AI and APISIX's Response"),(0,n.kt)("p",null,"Against the backdrop of the rise of AI applications, AI traffic characteristics differ significantly from traditional traffic. As a high-performance and highly scalable API gateway, APISIX can theoretically proxy all types of HTTP requests without technical obstacles. However, to proxy AI requests, additional performance and feature requirements must be met to accommodate the unique needs of AI services."),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://static.api7.ai/uploads/2025/05/30/RKgVorrr_3-rise-of-ai.webp",alt:"The Rise of AI"})),(0,n.kt)("p",null,"Whether for commercial or open-source users, in the context of enterprise-level AI service usage, selecting an AI gateway has become a necessary prerequisite. The reason enterprises need to deploy an AI gateway is that when using AI services\u2014whether from public clouds or private large model instances\u2014they must achieve unified access control, security auditing, and cost management."),(0,n.kt)("p",null,"Some may question: If one is simply making simple calls through public services like ChatGPT, is it still necessary to deploy an AI gateway? The answer is yes. Take the confidential information leak incident at Samsung as an example. One of the root causes was the lack of a unified mechanism for recording content submission and response processes. ",(0,n.kt)("strong",{parentName:"p"},"An AI gateway can provide a unified entry point for content transmission within enterprises, ensuring all requests and responses are traceable and auditable, thereby safeguarding data security.")),(0,n.kt)("p",null,"During the use of AI services, enterprises should centralize the recording of content submission and responses at the company level. Additionally, if there are uncontrollable factors in costs, corresponding recording mechanisms should be established. These measures fall under the scope of unified company-level security auditing and cost control."),(0,n.kt)("p",null,"Traditional enterprises might think that purchasing a user account allows direct use of AI services without the need to build any internal infrastructure. However, this is not the case. The emergence of AI gateways is precisely to address this change. Whether enterprises use AI products provided by public clouds or multiple private large model instances deployed internally, they must access and manage them through an AI gateway."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"AI gateways primarily address security concerns, followed by auditing issues, and finally typical application scenarios.")," Currently, commercial customers are mainly focused on realizing these key scenarios."),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://static.api7.ai/uploads/2025/05/30/t8hVlxmy_4-typical-use-cases-of-ai-gateway.webp",alt:"Using Scenarios of AI Gateway"})),(0,n.kt)("h2",{id:"apisix-ai-gateway"},"APISIX AI Gateway"),(0,n.kt)("p",null,"Next, we will introduce the basic implementation methods of the APISIX AI gateway. The technical changes involved in this implementation are relatively minor compared to previous builds, such as the Ingress Controller. This is because in APISIX, the API gateway and AI gateway have already been integrated, and everything operates within a unified framework."),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://static.api7.ai/uploads/2025/05/30/ulR1vr00_5-ai-gateway-architecture-1.webp",alt:"APISIX AI Gateway"})),(0,n.kt)("p",null,"From an architectural perspective, the AI gateway shares essentially the same structure as the API gateway, with only slight adjustments in language extensibility or integration methods. Previously, the plugin system already supported multi-language and replica plugins. Now, the AI gateway is supported in the same plugin framework and still takes the form of plugins. The core design principles remain fundamentally unchanged\u2014only a few critical modifications and upgrades have been made at the underlying level, which have already achieved the desired results."),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://static.api7.ai/uploads/2025/05/30/r2pEsY9s_6-ai-gateway-architecture-2.webp",alt:"APISIX AI Gateway Architecture"})),(0,n.kt)("h3",{id:"technical-innovations-of-apisix-ai-gateway"},"Technical Innovations of APISIX AI Gateway"),(0,n.kt)("p",null,"The main technical challenges or distinctions in implementing the AI gateway within APISIX lie in its differences from traditional HTTP inbound traffic. One primary distinction is the load balancing mechanism for large model instances, which differs from traditional upstream node load balancing. For example, health check methods are different: traditional methods use HTTP GET, while AI gateways require the POST method, changing the invocation approach. Additionally, retry and circuit-breaking strategies also vary."),(0,n.kt)("p",null,"In terms of observability, the AI gateway focuses on two core metrics: token recording during request and response processes, and latency-related indicators, particularly first-response latency and the number of concurrent connections waiting for the first response. Another factor is cost control. In fact, costs can be quantified in most scenarios by the number of tokens in requests and responses. Security is also a key challenge, which is consistent in the open-source or commercial versions of APISIX."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Currently, we have supported DeepSeek, OpenAI, Qwen, and OpenAI-Compatible in both open-source and commercial versions."),' The reason for supporting the compatible mode is that there are far more enterprises providing large model services than the aforementioned DeepSeek. Some companies provide private large model services exclusively for commercial enterprises. Although these service providers are not among the three mentioned above, their external interfaces adhere to OpenAI\'s specifications, thus falling under the "OpenAI Compatible" category.'),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://static.api7.ai/uploads/2025/05/30/VjLe1eyF_7-ai-gateway-technical-updates.webp",alt:"Supported LLMs in APISIX AI Gateway"})),(0,n.kt)("h3",{id:"apisix-ai-gateway-plugin-overview"},"APISIX AI Gateway Plugin Overview"),(0,n.kt)("p",null,"The APISIX AI gateway has the following commonly used plugins. In terms of proxy, we have not adopted the standard upstream mechanism but instead implemented dynamic proxy through the ",(0,n.kt)("inlineCode",{parentName:"p"},"ai-proxy")," plugin."),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://static.api7.ai/uploads/2025/05/30/wWMVaORL_8-apisix-ai-gateway-plugins.webp",alt:"APISIX AI Gateway Plugins"})),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"ai-proxy-multi")," refers to load balancing across multiple large models. ",(0,n.kt)("inlineCode",{parentName:"p"},"ai-proxy")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"ai-proxy-multi")," are plugins specifically designed for proxy functions. In addition to proxy capabilities, it is also necessary to implement token-level traffic throttling and health checks for certain upstream services, such as determining whether their tokens are exhausted, which is a common practice."),(0,n.kt)("p",null,"For a company looking to centrally manage and record AI requests within the organization, it typically only needs to focus on the following four types of services:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"AI request proxy;")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Token-level traffic throttling and speed limiting;")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Content compliance review, especially regarding data leakage issues;")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Security review and recording of requests."))),(0,n.kt)("p",null,'Regarding content compliance review, as long as traffic travels over the public network, the requirement extends beyond the enterprise level to national-level regulation. APISIX is initially adapted to AWS-related services to support overseas demands, and other aspects can be researched independently as needed. For instance, in the context of prompt protection: some malicious information may consist of individual "clean" words, but when combined, they can form offensive content. Such issues are difficult to identify through simple means in natural language, thus requiring more efficient mechanisms to explicitly allow or block textual content.'),(0,n.kt)("p",null,"Currently, 90% of the core features have been completed, with the remaining part being personalized add-ons. Like APISIX, the APISIX AI Gateway remains 100% open-source and ready-to-use out of the box. The following figure illustrates the application scenario of the AI gateway proxy for large model invocation."),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://static.api7.ai/uploads/2025/05/30/QhrQ5lMR_9-apisix-ai-gateway-features.webp",alt:"AI Gateway Use Cases"})),(0,n.kt)("h3",{id:"example-in-intelligent-manufacturing-enterprise"},"Example in Intelligent Manufacturing Enterprise"),(0,n.kt)("p",null,"Take a leading enterprise in the intelligent manufacturing industry as an example. Its usage scenarios mainly include two aspects: one is for internal use or its B-end customers, and the other is for some C-end users. The large models accessed by the enterprise involve Qwen, DeepSeek, and various large language model services, including open-source GPT-like models and products from cloud service providers such as Alibaba. The deployment methods also encompass a hybrid of private deployment and online cloud services. Furthermore, the use of models is not limited to text-to-text generation but also includes multimodal scenarios such as text-to-speech and text-to-video, involving a more diverse range of suppliers."),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://static.api7.ai/uploads/2025/05/30/yPkcGq2v_10-smart-manufacturing-use-case.webp",alt:"Use Case of AI Gateway"})),(0,n.kt)("p",null,"For the enterprise, establishing a unified entry point for requests is particularly crucial. From the client's perspective, the goal is to abstract away the underlying implementation details, so they are not explicitly aware of which service provider's model is being invoked. For example, users only need to ask a question, and the system will automatically route it to the most suitable model. Once users receive a satisfactory response, they typically prefer to continue using the same model rather than switching to a different one."),(0,n.kt)("p",null,"Therefore, it is necessary to mask the number of internal deployments while reasonably balancing system pressure and achieving internal and external isolation. This is one of the most basic and common capabilities. When internal failures occur, such as large models being unable to continue providing services due to exhausted machine resources, unhealthy nodes should be promptly taken offline."),(0,n.kt)("p",null,"In terms of compliance, the To B scenario usually poses no significant issues. However, for company-internal To C traffic, there are stringent regulatory requirements at the national level, making security audits particularly important. In the context of large model invocation, i.e., AI request scenarios, the primary requirement in actual use is to record the content of every request and response, which has become a rigid demand. Secondary requirements include token-level quota and speed limiting, automatic forwarding, transparent proxying, and ROI cost-related metrics."),(0,n.kt)("p",null,"Finally, regarding observability metrics, such as determining which large model responds faster and more stably, the gateway can more effectively direct traffic to the better-performing model services. However, there are many factors to consider, and the model with the fastest response is not necessarily prioritized for more traffic allocation."),(0,n.kt)("p",null,"In large model services, pricing is a key factor. Different model services have significant pricing differences. Therefore, the various optimization metrics mentioned earlier require more robust observability capabilities to support them. Traditional proxy services may only focus on whether a request is successful, such as judging the result based on HTTP status codes like ",(0,n.kt)("inlineCode",{parentName:"p"},"200"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"300"),", or ",(0,n.kt)("inlineCode",{parentName:"p"},"500"),". However, in the context of large models, it is necessary to introduce more granular token-related metrics to truly achieve effective optimization and cost control."),(0,n.kt)("h2",{id:"future-plans-for-ai-gateway-and-mcp-server"},"Future Plans for AI Gateway and MCP Server"),(0,n.kt)("p",null,"Regarding MCP Server, all the aforementioned features have already been covered in ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/api7/apisix-mcp"},"APISIX-MCP"),". Although MCP has not yet officially become an industry standard, it has been widely recognized and actively followed by numerous enterprises. From the trend, MCP is very likely to become a standardized bridge connecting AI models and traditional APIs in the future."),(0,n.kt)("h3",{id:"the-application-scenarios-and-value-of-mcp-in-apisix"},"The Application Scenarios and Value of MCP in APISIX"),(0,n.kt)("p",null,'APISIX-MCP can only operate in local environments and lacks unified interfaces for enterprise-level scenarios. However, enterprise users\' demands for AI are not "individual-level invocations" but "service-level integration." They hope to achieve cross-system linkage through wearable devices, smart terminals, or other system interfaces, such as "placing a coffee order by voice." This is clearly impossible to achieve through individual local deployments. Therefore, the unified exposure of enterprise-level API interfaces becomes particularly critical.'),(0,n.kt)("p",null,"APISIX can help users more conveniently access AI chatbot services built on standard input/output. It standardizes and encapsulates MCP's communication capabilities, exposing them through the gateway as unified interfaces. This enables AI services that were originally only usable locally to be shared and uniformly invoked at the company level. This not only addresses service exposure issues but also lays the foundation for further governance capabilities such as security policies, access control, and content review."),(0,n.kt)("h3",{id:"the-current-stage-and-future-development-of-apisix-mcp"},"The Current Stage and Future Development of APISIX-MCP"),(0,n.kt)("p",null,"Currently, MCP has completed the initial stage within the APISIX community, achieving standard input/output service integration. To truly build a service proxy gateway system based on the MCP protocol, ongoing investment from the community and enterprises is still required."),(0,n.kt)("p",null,"Moreover, MCP differs significantly from traditional HTTP APIs. Although it still falls within the realm of request-response communication, its interaction model is closer to AI model invocation, featuring prompt injection and context passing capabilities. Therefore, it is distinct from generic HTTP interfaces and existing conversational AI APIs, representing a new generation of communication protocols better suited to AI applications."),(0,n.kt)("p",null,"At present, we are conducting in-depth research on MCP and plan to promote its implementation within enterprises in the near future. From a technical perspective, MCP holds significant potential as a standardized bridge between traditional applications and AI models. Our goal is to encapsulate existing HTTP APIs through APISIX into MCP interfaces, enabling flexible invocation within AI-driven systems. By configuring APISIX with necessary settings, such as importing OpenAPI description files, existing HTTP interfaces can be incorporated into gateway management."),(0,n.kt)("p",null,"How to transform existing HTTP interfaces into interfaces compliant with the MCP model currently relies on developer intervention, such as writing TypeScript or Python scripts. However, the method I mentioned earlier requires no additional development work. Instead, it can be achieved through appropriate configuration. Once configured, traditional APIs can be exposed in the MCP format and connected with our existing large model services to achieve synergy. This approach allows for the more efficient integration of existing HTTP APIs into our AI ecosystem."),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://static.api7.ai/uploads/2025/05/30/kTOfDEob_11-building-the-community.webp",alt:"Outlook for APISIX AI Gateway"})),(0,n.kt)("p",null,"At the same time, issues related to governance, observability, and security must also be taken into account to achieve a unified management and control mechanism. For enterprises, the challenge is not merely about exposing interfaces externally, but more importantly about ensuring unified management, secure control, and compliance requirements."),(0,n.kt)("p",null,"The core capabilities of MCP have already been made available. We welcome everyone to try them out and share feedback on any potential shortcomings. This feature is still undergoing continuous iteration and will be open to the community once it reaches a certain level of stability and quality."))}u.isMDXComponent=!0}}]);