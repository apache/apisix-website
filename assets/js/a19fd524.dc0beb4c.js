"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[94581],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=u(n),f=a,m=d["".concat(l,".").concat(f)]||d[f]||c[f]||o;return n?r.createElement(m,i(i({ref:t},p),{},{components:n})):r.createElement(m,i({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2303:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var r=n(87462),a=(n(67294),n(3905));const o={title:"Status API"},i=void 0,s={unversionedId:"status-api",id:"version-3.13/status-api",isDocsHomePage:!1,title:"Status API",description:"In Apache APISIX, the status API is used to:",source:"@site/docs-apisix_versioned_docs/version-3.13/status-api.md",sourceDirName:".",slug:"/status-api",permalink:"/docs/apisix/3.13/status-api",editUrl:"/edit#https://github.com/apache/apisix/edit/release/3.13/docs/en/latest/status-api.md",tags:[],version:"3.13",frontMatter:{title:"Status API"},sidebar:"version-3.13/docs",previous:{title:"Control API",permalink:"/docs/apisix/3.13/control-api"},next:{title:"Build development environment with Dev Containers",permalink:"/docs/apisix/3.13/build-apisix-dev-environment-devcontainers"}},l=[{value:"GET /status",id:"get-status",children:[]},{value:"GET /status/ready",id:"get-statusready",children:[]}],u={toc:l};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"In Apache APISIX, the status API is used to:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Check if APISIX has successfully started and running correctly."),(0,a.kt)("li",{parentName:"ul"},"Check if all of the workers have received and loaded the configuration.")),(0,a.kt)("p",null,"To change the default endpoint (",(0,a.kt)("inlineCode",{parentName:"p"},"127.0.0.1:7085"),") of the Status API server, change the ",(0,a.kt)("inlineCode",{parentName:"p"},"ip")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"port")," in the ",(0,a.kt)("inlineCode",{parentName:"p"},"status")," section in your configuration file (",(0,a.kt)("inlineCode",{parentName:"p"},"conf/config.yaml"),"):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'apisix:\n  status:\n    ip: "127.0.0.1"\n    port: 7085\n')),(0,a.kt)("p",null,"This API can be used to perform readiness probes on APISIX before APISIX starts receiving user requests."),(0,a.kt)("h3",{id:"get-status"},"GET /status"),(0,a.kt)("p",null,"Returns a JSON reporting the status of APISIX workers. If APISIX is not running, the request will error out while establishing TCP connection. Otherwise this endpoint will always return ok if request reaches a running worker."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "status": "ok"\n}\n')),(0,a.kt)("h3",{id:"get-statusready"},"GET /status/ready"),(0,a.kt)("p",null,"Returns ",(0,a.kt)("inlineCode",{parentName:"p"},"ok")," when all workers have loaded the configuration, otherwise returns the specific error with ",(0,a.kt)("inlineCode",{parentName:"p"},"503")," error code. Below are specific examples."),(0,a.kt)("p",null,"When all workers have loaded the configuration:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "status": "ok"\n}\n')),(0,a.kt)("p",null,"When 1 workers has't been initialised:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "status": "error",\n  "error": "worker count: 16 but status report count: 15"\n}\n')),(0,a.kt)("p",null,"When a particular worker hasn't loaded the configuration:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "error": "worker id: 9 has not received configuration",\n  "status": "error"\n}\n')))}p.isMDXComponent=!0}}]);