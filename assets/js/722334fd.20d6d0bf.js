"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[87553],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>c});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=s(n),c=r,g=d["".concat(p,".").concat(c)]||d[c]||m[c]||l;return n?a.createElement(g,i(i({ref:t},u),{},{components:n})):a.createElement(g,i({ref:t},u))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=d;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var s=2;s<l;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3877:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const l={title:"ai-proxy",keywords:["Apache APISIX","API Gateway","Plugin","ai-proxy"],description:"This document contains information about the Apache APISIX ai-proxy Plugin."},i=void 0,o={unversionedId:"plugins/ai-proxy",id:"version-3.12/plugins/ai-proxy",isDocsHomePage:!1,title:"ai-proxy",description:"This document contains information about the Apache APISIX ai-proxy Plugin.",source:"@site/docs-apisix_versioned_docs/version-3.12/plugins/ai-proxy.md",sourceDirName:"plugins",slug:"/plugins/ai-proxy",permalink:"/docs/apisix/3.12/plugins/ai-proxy",editUrl:"/edit#https://github.com/apache/apisix/edit/release/3.12/docs/en/latest/plugins/ai-proxy.md",tags:[],version:"3.12",frontMatter:{title:"ai-proxy",keywords:["Apache APISIX","API Gateway","Plugin","ai-proxy"],description:"This document contains information about the Apache APISIX ai-proxy Plugin."},sidebar:"version-3.12/docs",previous:{title:"Secret",permalink:"/docs/apisix/3.12/terminology/secret"},next:{title:"ai-proxy-multi",permalink:"/docs/apisix/3.12/plugins/ai-proxy-multi"}},p=[{value:"Description",id:"description",children:[]},{value:"Request Format",id:"request-format",children:[{value:"OpenAI",id:"openai",children:[]}]},{value:"Plugin Attributes",id:"plugin-attributes",children:[]},{value:"Example usage",id:"example-usage",children:[{value:"Send request to an OpenAI compatible LLM",id:"send-request-to-an-openai-compatible-llm",children:[]}]}],s={toc:p};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"description"},"Description"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"ai-proxy")," plugin simplifies access to LLM providers and models by defining a standard request format\nthat allows key fields in plugin configuration to be embedded into the request."),(0,r.kt)("p",null,"Proxying requests to OpenAI is supported now. Other LLM services will be supported soon."),(0,r.kt)("h2",{id:"request-format"},"Request Format"),(0,r.kt)("h3",{id:"openai"},"OpenAI"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Chat API")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"messages")),(0,r.kt)("td",{parentName:"tr",align:null},"Array"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"An array of message objects")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"messages.role")),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"Role of the message (",(0,r.kt)("inlineCode",{parentName:"td"},"system"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"user"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"assistant"),")")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"messages.content")),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"Content of the message")))),(0,r.kt)("h2",{id:"plugin-attributes"},"Plugin Attributes"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"Field")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"Required")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"Type")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"Description")))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"auth"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"Object"),(0,r.kt)("td",{parentName:"tr",align:null},"Authentication configuration")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"auth.header"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"Object"),(0,r.kt)("td",{parentName:"tr",align:null},"Authentication headers. Key must match pattern ",(0,r.kt)("inlineCode",{parentName:"td"},"^[a-zA-Z0-9._-]+$"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"auth.query"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"Object"),(0,r.kt)("td",{parentName:"tr",align:null},"Authentication query parameters. Key must match pattern ",(0,r.kt)("inlineCode",{parentName:"td"},"^[a-zA-Z0-9._-]+$"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"model.provider"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the AI service provider (",(0,r.kt)("inlineCode",{parentName:"td"},"openai"),").")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"model.name"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},"Model name to execute.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"model.options"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"Object"),(0,r.kt)("td",{parentName:"tr",align:null},"Key/value settings for the model")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"override.endpoint"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},"Override the endpoint of the AI provider")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"timeout"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"Integer"),(0,r.kt)("td",{parentName:"tr",align:null},"Timeout in milliseconds for requests to LLM. Range: 1 - 60000. Default: 30000")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"keepalive"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"Boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"Enable keepalive for requests to LLM. Default: true")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"keepalive_timeout"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"Integer"),(0,r.kt)("td",{parentName:"tr",align:null},"Keepalive timeout in milliseconds for requests to LLM. Minimum: 1000. Default: 60000")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"keepalive_pool"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"Integer"),(0,r.kt)("td",{parentName:"tr",align:null},"Keepalive pool size for requests to LLM. Minimum: 1. Default: 30")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ssl_verify"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"Boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"SSL verification for requests to LLM. Default: true")))),(0,r.kt)("h2",{id:"example-usage"},"Example usage"),(0,r.kt)("p",null,"Create a route with the ",(0,r.kt)("inlineCode",{parentName:"p"},"ai-proxy")," plugin like so:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl "http://127.0.0.1:9180/apisix/admin/routes/1" -X PUT \\\n  -H "X-API-KEY: ${ADMIN_API_KEY}" \\\n  -d \'{\n    "uri": "/anything",\n    "plugins": {\n      "ai-proxy": {\n        "auth": {\n          "header": {\n            "Authorization": "Bearer <some-token>"\n          }\n        },\n        "model": {\n          "provider": "openai",\n          "name": "gpt-4",\n          "options": {\n            "max_tokens": 512,\n            "temperature": 1.0\n          }\n        }\n      }\n    },\n    "upstream": {\n      "type": "roundrobin",\n      "nodes": {\n        "somerandom.com:443": 1\n      },\n      "scheme": "https",\n      "pass_host": "node"\n    }\n  }\'\n')),(0,r.kt)("p",null,"Upstream node can be any arbitrary value because it won't be contacted."),(0,r.kt)("p",null,"Now send a request:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl http://127.0.0.1:9080/anything -i -XPOST  -H \'Content-Type: application/json\' -d \'{\n        "messages": [\n            { "role": "system", "content": "You are a mathematician" },\n            { "role": "user", "a": 1, "content": "What is 1+1?" }\n        ]\n    }\'\n')),(0,r.kt)("p",null,"You will receive a response like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "choices": [\n    {\n      "finish_reason": "stop",\n      "index": 0,\n      "message": {\n        "content": "The sum of \\\\(1 + 1\\\\) is \\\\(2\\\\).",\n        "role": "assistant"\n      }\n    }\n  ],\n  "created": 1723777034,\n  "id": "chatcmpl-9whRKFodKl5sGhOgHIjWltdeB8sr7",\n  "model": "gpt-4o-2024-05-13",\n  "object": "chat.completion",\n  "system_fingerprint": "fp_abc28019ad",\n  "usage": { "completion_tokens": 15, "prompt_tokens": 23, "total_tokens": 38 }\n}\n')),(0,r.kt)("h3",{id:"send-request-to-an-openai-compatible-llm"},"Send request to an OpenAI compatible LLM"),(0,r.kt)("p",null,"Create a route with the ",(0,r.kt)("inlineCode",{parentName:"p"},"ai-proxy")," plugin with ",(0,r.kt)("inlineCode",{parentName:"p"},"provider")," set to ",(0,r.kt)("inlineCode",{parentName:"p"},"openai-compatible")," and the endpoint of the model set to ",(0,r.kt)("inlineCode",{parentName:"p"},"override.endpoint")," like so:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl "http://127.0.0.1:9180/apisix/admin/routes/1" -X PUT \\\n  -H "X-API-KEY: ${ADMIN_API_KEY}" \\\n  -d \'{\n    "uri": "/anything",\n    "plugins": {\n      "ai-proxy": {\n        "auth": {\n          "header": {\n            "Authorization": "Bearer <some-token>"\n          }\n        },\n        "model": {\n          "provider": "openai-compatible",\n          "name": "qwen-plus"\n        },\n        "override": {\n          "endpoint": "https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions"\n        }\n      }\n    },\n    "upstream": {\n      "type": "roundrobin",\n      "nodes": {\n        "somerandom.com:443": 1\n      },\n      "scheme": "https",\n      "pass_host": "node"\n    }\n  }\'\n')))}u.isMDXComponent=!0}}]);