"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[21150],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>k});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),p=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=p(e.components);return a.createElement(o.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,s=d(e,["components","mdxType","originalType","parentName"]),u=p(n),k=r,N=u["".concat(o,".").concat(k)]||u[k]||m[k]||l;return n?a.createElement(N,i(i({ref:t},s),{},{components:n})):a.createElement(N,i({ref:t},s))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=u;var d={};for(var o in t)hasOwnProperty.call(t,o)&&(d[o]=t[o]);d.originalType=e,d.mdxType="string"==typeof e?e:r,i[1]=d;for(var p=2;p<l;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},46118:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>i,default:()=>s,frontMatter:()=>l,metadata:()=>d,toc:()=>o});var a=n(87462),r=(n(67294),n(3905));const l={title:"limit-req",keywords:["Apache APISIX","API Gateway","Limit Request","limit-req"],description:"The limit-req Plugin uses the leaky bucket algorithm to rate limit the number of the requests and allow for throttling."},i=void 0,d={unversionedId:"plugins/limit-req",id:"plugins/limit-req",isDocsHomePage:!1,title:"limit-req",description:"The limit-req Plugin uses the leaky bucket algorithm to rate limit the number of the requests and allow for throttling.",source:"@site/docs/apisix/plugins/limit-req.md",sourceDirName:"plugins",slug:"/plugins/limit-req",permalink:"/docs/apisix/next/plugins/limit-req",editUrl:"/edit#https://github.com/apache/apisix/edit/master/docs/en/latest/plugins/limit-req.md",tags:[],version:"current",frontMatter:{title:"limit-req",keywords:["Apache APISIX","API Gateway","Limit Request","limit-req"],description:"The limit-req Plugin uses the leaky bucket algorithm to rate limit the number of the requests and allow for throttling."},sidebar:"docs",previous:{title:"chaitin-waf",permalink:"/docs/apisix/next/plugins/chaitin-waf"},next:{title:"limit-conn",permalink:"/docs/apisix/next/plugins/limit-conn"}},o=[{value:"Description",id:"description",children:[]},{value:"Attributes",id:"attributes",children:[]},{value:"Examples",id:"examples",children:[]}],p={toc:o};function s(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("head",null,(0,r.kt)("link",{rel:"canonical",href:"https://docs.api7.ai/hub/limit-req"})),(0,r.kt)("h2",{id:"description"},"Description"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"limit-req")," Plugin uses the ",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Leaky_bucket"},"leaky bucket")," algorithm to rate limit the number of the requests and allow for throttling."),(0,r.kt)("h2",{id:"attributes"},"Attributes"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Valid values"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"rate"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"True"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"> 0"),(0,r.kt)("td",{parentName:"tr",align:null},"The maximum number of requests allowed per second. Requests exceeding the rate and below burst will be delayed.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"burst"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"True"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},">= 0"),(0,r.kt)("td",{parentName:"tr",align:null},"The number of requests allowed to be delayed per second for throttling. Requests exceeding the rate and burst will get rejected.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"key_type"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null},"var"),(0,r.kt)("td",{parentName:"tr",align:null},'["var", "var_combination"]'),(0,r.kt)("td",{parentName:"tr",align:null},"The type of key. If the ",(0,r.kt)("inlineCode",{parentName:"td"},"key_type")," is ",(0,r.kt)("inlineCode",{parentName:"td"},"var"),", the ",(0,r.kt)("inlineCode",{parentName:"td"},"key")," is interpreted a variable. If the ",(0,r.kt)("inlineCode",{parentName:"td"},"key_type")," is ",(0,r.kt)("inlineCode",{parentName:"td"},"var_combination"),", the ",(0,r.kt)("inlineCode",{parentName:"td"},"key")," is interpreted as a combination of variables.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"key"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"True"),(0,r.kt)("td",{parentName:"tr",align:null},"remote_addr"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"The key to count requests by. If the ",(0,r.kt)("inlineCode",{parentName:"td"},"key_type")," is ",(0,r.kt)("inlineCode",{parentName:"td"},"var"),", the ",(0,r.kt)("inlineCode",{parentName:"td"},"key")," is interpreted a variable. The variable does not need to be prefixed by a dollar sign (",(0,r.kt)("inlineCode",{parentName:"td"},"$"),"). If the ",(0,r.kt)("inlineCode",{parentName:"td"},"key_type")," is ",(0,r.kt)("inlineCode",{parentName:"td"},"var_combination"),", the ",(0,r.kt)("inlineCode",{parentName:"td"},"key")," is interpreted as a combination of variables. All variables should be prefixed by dollar signs (",(0,r.kt)("inlineCode",{parentName:"td"},"$"),"). For example, to configure the ",(0,r.kt)("inlineCode",{parentName:"td"},"key")," to use a combination of two request headers ",(0,r.kt)("inlineCode",{parentName:"td"},"custom-a")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"custom-b"),", the ",(0,r.kt)("inlineCode",{parentName:"td"},"key")," should be configured as ",(0,r.kt)("inlineCode",{parentName:"td"},"$http_custom_a $http_custom_b"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"rejected_code"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null},"503"),(0,r.kt)("td",{parentName:"tr",align:null},"[200,...,599]"),(0,r.kt)("td",{parentName:"tr",align:null},"The HTTP status code returned when a request is rejected for exceeding the threshold.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"rejected_msg"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"non-empty"),(0,r.kt)("td",{parentName:"tr",align:null},"The response body returned when a request is rejected for exceeding the threshold.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"nodelay"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"If true, do not delay requests within the burst threshold.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"allow_degradation"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"If true, allow APISIX to continue handling requests without the Plugin when the Plugin or its dependencies become unavailable.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"policy"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null},"local"),(0,r.kt)("td",{parentName:"tr",align:null},'["local", "redis", "redis-cluster"]'),(0,r.kt)("td",{parentName:"tr",align:null},"The policy for rate limiting counter. If it is ",(0,r.kt)("inlineCode",{parentName:"td"},"local"),", the counter is stored in memory locally. If it is ",(0,r.kt)("inlineCode",{parentName:"td"},"redis"),", the counter is stored on a Redis instance. If it is ",(0,r.kt)("inlineCode",{parentName:"td"},"redis-cluster"),", the counter is stored in a Redis cluster.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"redis_host"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"The address of the Redis node. Required when ",(0,r.kt)("inlineCode",{parentName:"td"},"policy")," is ",(0,r.kt)("inlineCode",{parentName:"td"},"redis"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"redis_port"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null},"6379"),(0,r.kt)("td",{parentName:"tr",align:null},"[1,...]"),(0,r.kt)("td",{parentName:"tr",align:null},"The port of the Redis node when ",(0,r.kt)("inlineCode",{parentName:"td"},"policy")," is ",(0,r.kt)("inlineCode",{parentName:"td"},"redis"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"redis_username"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"The username for Redis if Redis ACL is used. If you use the legacy authentication method ",(0,r.kt)("inlineCode",{parentName:"td"},"requirepass"),", configure only the ",(0,r.kt)("inlineCode",{parentName:"td"},"redis_password"),". Used when ",(0,r.kt)("inlineCode",{parentName:"td"},"policy")," is ",(0,r.kt)("inlineCode",{parentName:"td"},"redis"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"redis_password"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"The password of the Redis node when ",(0,r.kt)("inlineCode",{parentName:"td"},"policy")," is ",(0,r.kt)("inlineCode",{parentName:"td"},"redis")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"redis-cluster"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"redis_ssl"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"If true, use SSL to connect to Redis cluster when ",(0,r.kt)("inlineCode",{parentName:"td"},"policy")," is ",(0,r.kt)("inlineCode",{parentName:"td"},"redis"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"redis_ssl_verify"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"If true, verify the server SSL certificate when ",(0,r.kt)("inlineCode",{parentName:"td"},"policy")," is ",(0,r.kt)("inlineCode",{parentName:"td"},"redis"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"redis_database"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null},"0"),(0,r.kt)("td",{parentName:"tr",align:null},">= 0"),(0,r.kt)("td",{parentName:"tr",align:null},"The database number in Redis when ",(0,r.kt)("inlineCode",{parentName:"td"},"policy")," is ",(0,r.kt)("inlineCode",{parentName:"td"},"redis"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"redis_timeout"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null},"1000"),(0,r.kt)("td",{parentName:"tr",align:null},"[1,...]"),(0,r.kt)("td",{parentName:"tr",align:null},"The Redis timeout value in milliseconds when ",(0,r.kt)("inlineCode",{parentName:"td"},"policy")," is ",(0,r.kt)("inlineCode",{parentName:"td"},"redis")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"redis-cluster"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"redis_cluster_nodes"),(0,r.kt)("td",{parentName:"tr",align:null},"array","[string]"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"The list of the Redis cluster nodes with at least two addresses. Required when policy is redis-cluster.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"redis_cluster_name"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"The name of the Redis cluster. Required when ",(0,r.kt)("inlineCode",{parentName:"td"},"policy")," is ",(0,r.kt)("inlineCode",{parentName:"td"},"redis-cluster"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"redis_cluster_ssl"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"If true, use SSL to connect to Redis cluster when ",(0,r.kt)("inlineCode",{parentName:"td"},"policy")," is")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"redis_cluster_ssl_verify"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"If true, verify the server SSL certificate when ",(0,r.kt)("inlineCode",{parentName:"td"},"policy")," is ",(0,r.kt)("inlineCode",{parentName:"td"},"redis-cluster"),".")))),(0,r.kt)("h2",{id:"examples"},"Examples"),(0,r.kt)("p",null,"The examples below demonstrate how you can configure ",(0,r.kt)("inlineCode",{parentName:"p"},"limit-req")," in different scenarios."),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"You can fetch the ",(0,r.kt)("inlineCode",{parentName:"p"},"admin_key")," from ",(0,r.kt)("inlineCode",{parentName:"p"},"config.yaml")," and save to an environment variable with the following command:"),(0,r.kt)("pre",{parentName:"div"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"admin_key=$(yq '.deployment.admin.admin_key[0].key' conf/config.yaml | sed 's/\"//g')\n")),(0,r.kt)("h3",{parentName:"div",id:"apply-rate-limiting-by-remote-address"},"Apply Rate Limiting by Remote Address"),(0,r.kt)("p",{parentName:"div"},"The following example demonstrates the rate limiting of HTTP requests by a single variable, ",(0,r.kt)("inlineCode",{parentName:"p"},"remote_addr"),"."),(0,r.kt)("p",{parentName:"div"},"Create a Route with ",(0,r.kt)("inlineCode",{parentName:"p"},"limit-req")," Plugin that allows for 1 QPS per remote address:"),(0,r.kt)("pre",{parentName:"div"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl "http://127.0.0.1:9180/apisix/admin/routes" -X PUT \\\n  -H "X-API-KEY: ${admin_key}" \\\n  -d \'\n  {\n    "id": "limit-req-route",\n    "uri": "/get",\n    "plugins": {\n      "limit-req": {\n        "rate": 1,\n        "burst": 0,\n        "key": "remote_addr",\n        "key_type": "var",\n        "rejected_code": 429,\n        "nodelay": true\n      }\n    },\n    "upstream": {\n      "type": "roundrobin",\n      "nodes": {\n        "httpbin.org:80": 1\n      }\n    }\n  }\'\n')),(0,r.kt)("p",{parentName:"div"},"Send a request to verify:"),(0,r.kt)("pre",{parentName:"div"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl -i "http://127.0.0.1:9080/get"\n')),(0,r.kt)("p",{parentName:"div"},"You should see an ",(0,r.kt)("inlineCode",{parentName:"p"},"HTTP/1.1 200 OK")," response."),(0,r.kt)("p",{parentName:"div"},"The request has consumed all the quota allowed for the time window. If you send the request again within the same second, you should receive an ",(0,r.kt)("inlineCode",{parentName:"p"},"HTTP/1.1 429 Too Many Requests")," response, indicating the request surpasses the quota threshold."),(0,r.kt)("h3",{parentName:"div",id:"implement-api-throttling"},"Implement API Throttling"),(0,r.kt)("p",{parentName:"div"},"The following example demonstrates how to configure ",(0,r.kt)("inlineCode",{parentName:"p"},"burst")," to allow overrun of the rate limiting threshold by the configured value and achieve request throttling. You will also see a comparison against when throttling is not implemented."),(0,r.kt)("p",{parentName:"div"},"Create a Route with ",(0,r.kt)("inlineCode",{parentName:"p"},"limit-req")," Plugin that allows for 1 QPS per remote address, with a ",(0,r.kt)("inlineCode",{parentName:"p"},"burst")," of 1 to allow for 1 request exceeding the ",(0,r.kt)("inlineCode",{parentName:"p"},"rate")," to be delayed for processing:"),(0,r.kt)("pre",{parentName:"div"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl "http://127.0.0.1:9180/apisix/admin/routes" -X PUT \\\n  -H "X-API-KEY: ${admin_key}" \\\n  -d \'{\n    "id": "limit-req-route",\n    "uri": "/get",\n    "plugins": {\n      "limit-req": {\n        "rate": 1,\n        "burst": 1,\n        "key": "remote_addr",\n        "rejected_code": 429\n      }\n    },\n    "upstream": {\n      "type": "roundrobin",\n      "nodes": {\n        "httpbin.org:80": 1\n      }\n    }\n  }\'\n')),(0,r.kt)("p",{parentName:"div"},"Generate three requests to the Route:"),(0,r.kt)("pre",{parentName:"div"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'resp=$(seq 3 | xargs -I{} curl -i "http://127.0.0.1:9080/get" -o /dev/null -s -w "%{http_code}\\n") && \\\n  count_200=$(echo "$resp" | grep "200" | wc -l) && \\\n  count_429=$(echo "$resp" | grep "429" | wc -l) && \\\n  echo "200 responses: $count_200 ; 429 responses: $count_429"\n')),(0,r.kt)("p",{parentName:"div"},"You are likely to see that all three requests are successful:"),(0,r.kt)("pre",{parentName:"div"},(0,r.kt)("code",{parentName:"pre",className:"language-text"},"200 responses: 3 ; 429 responses: 0\n")),(0,r.kt)("p",{parentName:"div"},"To see the effect without ",(0,r.kt)("inlineCode",{parentName:"p"},"burst"),", update ",(0,r.kt)("inlineCode",{parentName:"p"},"burst")," to 0 or set ",(0,r.kt)("inlineCode",{parentName:"p"},"nodelay")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," as follows:"),(0,r.kt)("pre",{parentName:"div"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl "http://127.0.0.1:9180/apisix/admin/routes/limit-req-route" -X PATCH \\\n  -H "X-API-KEY: ${admin_key}" \\\n  -d \'{\n    "plugins": {\n      "limit-req": {\n        "nodelay": true\n      }\n    }\n  }\'\n')),(0,r.kt)("p",{parentName:"div"},"Generate three requests to the Route again:"),(0,r.kt)("pre",{parentName:"div"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'resp=$(seq 3 | xargs -I{} curl -i "http://127.0.0.1:9080/get" -o /dev/null -s -w "%{http_code}\\n") && \\\n  count_200=$(echo "$resp" | grep "200" | wc -l) && \\\n  count_429=$(echo "$resp" | grep "429" | wc -l) && \\\n  echo "200 responses: $count_200 ; 429 responses: $count_429"\n')),(0,r.kt)("p",{parentName:"div"},"You should see a response similar to the following, showing requests surpassing the rate have been rejected:"),(0,r.kt)("pre",{parentName:"div"},(0,r.kt)("code",{parentName:"pre",className:"language-text"},"200 responses: 1 ; 429 responses: 2\n")),(0,r.kt)("h3",{parentName:"div",id:"apply-rate-limiting-by-remote-address-and-consumer-name"},"Apply Rate Limiting by Remote Address and Consumer Name"),(0,r.kt)("p",{parentName:"div"},"The following example demonstrates the rate limiting of requests by a combination of variables, ",(0,r.kt)("inlineCode",{parentName:"p"},"remote_addr")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"consumer_name"),"."),(0,r.kt)("p",{parentName:"div"},"Create a Route with ",(0,r.kt)("inlineCode",{parentName:"p"},"limit-req")," Plugin that allows for 1 QPS per remote address and for each Consumer."),(0,r.kt)("p",{parentName:"div"},"Create a Consumer ",(0,r.kt)("inlineCode",{parentName:"p"},"john"),":"),(0,r.kt)("pre",{parentName:"div"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl "http://127.0.0.1:9180/apisix/admin/consumers" -X PUT \\\n  -H "X-API-KEY: ${admin_key}" \\\n  -d \'{\n    "username": "john"\n  }\'\n')),(0,r.kt)("p",{parentName:"div"},"Create ",(0,r.kt)("inlineCode",{parentName:"p"},"key-auth")," Credential for the Consumer:"),(0,r.kt)("pre",{parentName:"div"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl "http://127.0.0.1:9180/apisix/admin/consumers/john/credentials" -X PUT \\\n  -H "X-API-KEY: ${admin_key}" \\\n  -d \'{\n    "id": "cred-john-key-auth",\n    "plugins": {\n      "key-auth": {\n        "key": "john-key"\n      }\n    }\n  }\'\n')),(0,r.kt)("p",{parentName:"div"},"Create a second Consumer ",(0,r.kt)("inlineCode",{parentName:"p"},"jane"),":"),(0,r.kt)("pre",{parentName:"div"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl "http://127.0.0.1:9180/apisix/admin/consumers" -X PUT \\\n  -H "X-API-KEY: ${admin_key}" \\\n  -d \'{\n    "username": "jane"\n  }\'\n')),(0,r.kt)("p",{parentName:"div"},"Create ",(0,r.kt)("inlineCode",{parentName:"p"},"key-auth")," Credential for the Consumer:"),(0,r.kt)("pre",{parentName:"div"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl "http://127.0.0.1:9180/apisix/admin/consumers/jane/credentials" -X PUT \\\n  -H "X-API-KEY: ${admin_key}" \\\n  -d \'{\n    "id": "cred-jane-key-auth",\n    "plugins": {\n      "key-auth": {\n        "key": "jane-key"\n      }\n    }\n  }\'\n')),(0,r.kt)("p",{parentName:"div"},"Create a Route with ",(0,r.kt)("inlineCode",{parentName:"p"},"key-auth")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"limit-req")," Plugins, and specify in the ",(0,r.kt)("inlineCode",{parentName:"p"},"limit-req")," Plugin to use a combination of variables as the rate-limiting key:"),(0,r.kt)("pre",{parentName:"div"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl "http://127.0.0.1:9180/apisix/admin/routes" -X PUT \\\n  -H "X-API-KEY: ${admin_key}" \\\n  -d \'{\n    "id": "limit-req-route",\n    "uri": "/get",\n    "plugins": {\n      "key-auth": {},\n      "limit-req": {\n        "rate": 1,\n        "burst": 0,\n        "key": "$remote_addr $consumer_name",\n        "key_type": "var_combination",\n        "rejected_code": 429\n      }\n    },\n    "upstream": {\n      "type": "roundrobin",\n      "nodes": {\n        "httpbin.org:80": 1\n      }\n    }\n  }\'\n')),(0,r.kt)("p",{parentName:"div"},"Send two requests simultaneously, each for one Consumer:"),(0,r.kt)("pre",{parentName:"div"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"curl -i \"http://127.0.0.1:9080/get\" -H 'apikey: jane-key' & \\\ncurl -i \"http://127.0.0.1:9080/get\" -H 'apikey: john-key' &\n")),(0,r.kt)("p",{parentName:"div"},"You should receive ",(0,r.kt)("inlineCode",{parentName:"p"},"HTTP/1.1 200 OK")," for both requests, indicating the request has not exceeded the threshold for each Consumer."),(0,r.kt)("p",{parentName:"div"},"If you send more requests as either Consumer within the same second, you should receive an ",(0,r.kt)("inlineCode",{parentName:"p"},"HTTP/1.1 429 Too Many Requests")," response."),(0,r.kt)("p",{parentName:"div"},"This verifies the Plugin rate limits by the combination of variables, ",(0,r.kt)("inlineCode",{parentName:"p"},"remote_addr")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"consumer_name"),"."))))}s.isMDXComponent=!0}}]);