"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[91708],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>c});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),m=s(n),c=r,g=m["".concat(p,".").concat(c)]||m[c]||u[c]||i;return n?a.createElement(g,l(l({ref:t},d),{},{components:n})):a.createElement(g,l({ref:t},d))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var s=2;s<i;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},40155:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const i={title:"ai-rag",keywords:["Apache APISIX","API Gateway","Plugin","ai-rag"],description:"This document contains information about the Apache APISIX ai-rag Plugin."},l=void 0,o={unversionedId:"plugins/ai-rag",id:"version-3.12/plugins/ai-rag",isDocsHomePage:!1,title:"ai-rag",description:"This document contains information about the Apache APISIX ai-rag Plugin.",source:"@site/docs-apisix_versioned_docs/version-3.12/plugins/ai-rag.md",sourceDirName:"plugins",slug:"/plugins/ai-rag",permalink:"/docs/apisix/3.12/plugins/ai-rag",editUrl:"/edit#https://github.com/apache/apisix/edit/release/3.12/docs/en/latest/plugins/ai-rag.md",tags:[],version:"3.12",frontMatter:{title:"ai-rag",keywords:["Apache APISIX","API Gateway","Plugin","ai-rag"],description:"This document contains information about the Apache APISIX ai-rag Plugin."},sidebar:"version-3.12/docs",previous:{title:"ai-prompt-template",permalink:"/docs/apisix/3.12/plugins/ai-prompt-template"},next:{title:"batch-requests",permalink:"/docs/apisix/3.12/plugins/batch-requests"}},p=[{value:"Description",id:"description",children:[]},{value:"Plugin Attributes",id:"plugin-attributes",children:[]},{value:"Request Body Format",id:"request-body-format",children:[]},{value:"Example usage",id:"example-usage",children:[]}],s={toc:p};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"description"},"Description"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"ai-rag")," plugin integrates Retrieval-Augmented Generation (RAG) capabilities with AI models.\nIt allows efficient retrieval of relevant documents or information from external data sources and\naugments the LLM responses with that data, improving the accuracy and context of generated outputs."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"As of now only ",(0,r.kt)("a",{parentName:"em",href:"https://azure.microsoft.com/en-us/products/ai-services/openai-service"},"Azure OpenAI")," and ",(0,r.kt)("a",{parentName:"em",href:"https://azure.microsoft.com/en-us/products/ai-services/ai-search"},"Azure AI Search")," services are supported for generating embeddings and performing vector search respectively. PRs for introducing support for other service providers are welcomed."))),(0,r.kt)("h2",{id:"plugin-attributes"},"Plugin Attributes"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"Field")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"Required")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"Type")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"Description")))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"embeddings_provider"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null},"Configurations of the embedding models provider")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"embeddings_provider.azure_openai"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null},"Configurations of ",(0,r.kt)("a",{parentName:"td",href:"https://azure.microsoft.com/en-us/products/ai-services/openai-service"},"Azure OpenAI")," as the embedding models provider.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"embeddings_provider.azure_openai.endpoint"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Azure OpenAI endpoint")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"embeddings_provider.azure_openai.api_key"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Azure OpenAI API key")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"vector_search_provider"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null},"Configuration for the vector search provider")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"vector_search_provider.azure_ai_search"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null},"Configuration for Azure AI Search")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"vector_search_provider.azure_ai_search.endpoint"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Azure AI Search endpoint")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"vector_search_provider.azure_ai_search.api_key"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Azure AI Search API key")))),(0,r.kt)("h2",{id:"request-body-format"},"Request Body Format"),(0,r.kt)("p",null,"The following fields must be present in the request body."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"Field")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"Type")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"Description")))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ai_rag"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null},"Configuration for AI-RAG (Retrieval Augmented Generation)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ai_rag.embeddings"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null},"Request parameters required to generate embeddings. Contents will depend on the API specification of the configured provider.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ai_rag.vector_search"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null},"Request parameters required to perform vector search. Contents will depend on the API specification of the configured provider.")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Parameters of ",(0,r.kt)("inlineCode",{parentName:"p"},"ai_rag.embeddings")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Azure OpenAI")),(0,r.kt)("table",{parentName:"li"},(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"Name")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"Required")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"Type")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"Description")))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"input"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Input text used to compute embeddings, encoded as a string.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"user"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"A unique identifier representing your end-user, which can help in monitoring and detecting abuse.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"encoding_format"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"The format to return the embeddings in. Can be either ",(0,r.kt)("inlineCode",{parentName:"td"},"float")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"base64"),". Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"float"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"dimensions"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"The number of dimensions the resulting output embeddings should have. Only supported in text-embedding-3 and later models.")))))),(0,r.kt)("p",null,"For other parameters please refer to the ",(0,r.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/azure/ai-services/openai/reference#embeddings"},"Azure OpenAI embeddings documentation"),"."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Parameters of ",(0,r.kt)("inlineCode",{parentName:"p"},"ai_rag.vector_search")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Azure AI Search")),(0,r.kt)("table",{parentName:"li"},(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"Field")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"Required")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"Type")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"Description")))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"fields"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},"Fields for the vector search")))),(0,r.kt)("p",{parentName:"li"},"For other parameters please refer the ",(0,r.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/rest/api/searchservice/documents/search-post"},"Azure AI Search documentation"),"."))),(0,r.kt)("p",null,"Example request body:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "ai_rag": {\n    "vector_search": { "fields": "contentVector" },\n    "embeddings": {\n      "input": "which service is good for devops",\n      "dimensions": 1024\n    }\n  }\n}\n')),(0,r.kt)("h2",{id:"example-usage"},"Example usage"),(0,r.kt)("p",null,"First initialise these shell variables:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"ADMIN_API_KEY=edd1c9f034335f136f87ad84b625c8f1\nAZURE_OPENAI_ENDPOINT=https://name.openai.azure.com/openai/deployments/gpt-4o/chat/completions\nVECTOR_SEARCH_ENDPOINT=https://name.search.windows.net/indexes/indexname/docs/search?api-version=2024-07-01\nEMBEDDINGS_ENDPOINT=https://name.openai.azure.com/openai/deployments/text-embedding-3-small/embeddings?api-version=2023-05-15\nEMBEDDINGS_KEY=secret-azure-openai-embeddings-key\nSEARCH_KEY=secret-azureai-search-key\nAZURE_OPENAI_KEY=secret-azure-openai-key\n")),(0,r.kt)("p",null,"Create a route with the ",(0,r.kt)("inlineCode",{parentName:"p"},"ai-rag")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"ai-proxy")," plugin like so:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl "http://127.0.0.1:9180/apisix/admin/routes/1" -X PUT \\\n  -H "X-API-KEY: ${ADMIN_API_KEY}" \\\n  -d \'{\n  "uri": "/rag",\n  "plugins": {\n    "ai-rag": {\n      "embeddings_provider": {\n        "azure_openai": {\n          "endpoint": "\'"$EMBEDDINGS_ENDPOINT"\'",\n          "api_key": "\'"$EMBEDDINGS_KEY"\'"\n        }\n      },\n      "vector_search_provider": {\n        "azure_ai_search": {\n          "endpoint": "\'"$VECTOR_SEARCH_ENDPOINT"\'",\n          "api_key": "\'"$SEARCH_KEY"\'"\n        }\n      }\n    },\n    "ai-proxy": {\n      "auth": {\n        "header": {\n          "api-key": "\'"$AZURE_OPENAI_KEY"\'"\n        },\n        "query": {\n          "api-version": "2023-03-15-preview"\n         }\n      },\n      "model": {\n        "provider": "openai",\n        "name": "gpt-4",\n        "options": {\n          "max_tokens": 512,\n          "temperature": 1.0\n        }\n      },\n      "override": {\n        "endpoint": "\'"$AZURE_OPENAI_ENDPOINT"\'"\n      }\n    }\n  },\n  "upstream": {\n    "type": "roundrobin",\n    "nodes": {\n      "someupstream.com:443": 1\n    },\n    "scheme": "https",\n    "pass_host": "node"\n  }\n}\'\n')),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"ai-proxy")," plugin is used here as it simplifies access to LLMs. Alternatively, you may configure the LLM service address in the upstream configuration and update the route URI as well."),(0,r.kt)("p",null,"Now send a request:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl http://127.0.0.1:9080/rag -XPOST  -H \'Content-Type: application/json\' -d \'{"ai_rag":{"vector_search":{"fields":"contentVector"},"embeddings":{"input":"which service is good for devops","dimensions":1024}}}\'\n')),(0,r.kt)("p",null,"You will receive a response like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "choices": [\n    {\n      "finish_reason": "length",\n      "index": 0,\n      "message": {\n        "content": "Here are the details for some of the services you inquired about from your Azure search context:\\n\\n ... <rest of the response>",\n        "role": "assistant"\n      }\n    }\n  ],\n  "created": 1727079764,\n  "id": "chatcmpl-AAYdA40YjOaeIHfgFBkaHkUFCWxfc",\n  "model": "gpt-4o-2024-05-13",\n  "object": "chat.completion",\n  "system_fingerprint": "fp_67802d9a6d",\n  "usage": {\n    "completion_tokens": 512,\n    "prompt_tokens": 6560,\n    "total_tokens": 7072\n  }\n}\n')))}d.isMDXComponent=!0}}]);