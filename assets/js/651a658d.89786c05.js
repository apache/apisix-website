"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[72003],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return m}});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),u=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=u(e.components);return r.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=u(t),m=a,f=d["".concat(l,".").concat(m)]||d[m]||p[m]||i;return t?r.createElement(f,o(o({ref:n},c),{},{components:t})):r.createElement(f,o({ref:n},c))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=d;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var u=2;u<i;u++)o[u]=t[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},63493:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return l},toc:function(){return u},default:function(){return p}});var r=t(87462),a=t(63366),i=(t(67294),t(3905)),o={title:"consul_kv"},s=void 0,l={unversionedId:"discovery/consul_kv",id:"version-2.4/discovery/consul_kv",isDocsHomePage:!1,title:"consul_kv",description:"\x3c!--",source:"@site/docs-apisix_versioned_docs/version-2.4/discovery/consul_kv.md",sourceDirName:"discovery",slug:"/discovery/consul_kv",permalink:"/docs/apisix/2.4/discovery/consul_kv",editUrl:"https://github.com/apache/apisix/edit/release/2.4/docs/en/latest/discovery/consul_kv.md",tags:[],version:"2.4",frontMatter:{title:"consul_kv"}},u=[{value:"Summary",id:"summary",children:[]},{value:"Configuration for discovery client",id:"configuration-for-discovery-client",children:[{value:"Configuration for Consul KV",id:"configuration-for-consul-kv",children:[]},{value:"Register Http API Services",id:"register-http-api-services",children:[]},{value:"Upstream setting",id:"upstream-setting",children:[]}]},{value:"Debugging API",id:"debugging-api",children:[]}],c={toc:u};function p(e){var n=e.components,t=(0,a.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"summary"},"Summary"),(0,i.kt)("p",null,"For users who used ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/weibocom/nginx-upsync-module"},"nginx-upsync-module")," and consul key value for service discovery way, as we Weibo Mobile Team, maybe need it."),(0,i.kt)("p",null,"Thanks to @fatman-x guy, who developed this module, called ",(0,i.kt)("inlineCode",{parentName:"p"},"consul_kv"),", and its worker process data flow is below:\n",(0,i.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/548385/107141841-6ced3e00-6966-11eb-8aa4-bc790a4ad113.png",alt:null})),(0,i.kt)("h2",{id:"configuration-for-discovery-client"},"Configuration for discovery client"),(0,i.kt)("h3",{id:"configuration-for-consul-kv"},"Configuration for Consul KV"),(0,i.kt)("p",null,"Add following configuration in ",(0,i.kt)("inlineCode",{parentName:"p"},"conf/config.yaml")," :"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'discovery:\n  consul_kv:\n    servers:\n      - "http://127.0.0.1:8500"\n      - "http://127.0.0.1:8600"\n    prefix: "upstreams"\n    skip_keys:                    # if you need to skip special keys\n      - "upstreams/unused_api/"\n    timeout:\n      connect: 1000               # default 2000 ms\n      read: 1000                  # default 2000 ms\n      wait: 60                    # default 60 sec\n    weight: 1                     # default 1\n    fetch_interval: 5             # default 3 sec, only take effect for keepalive: false way\n    keepalive: true               # default true, use the long pull way to query consul servers\n    default_server:               # you can define default server when missing hit\n      host: "127.0.0.1"\n      port: 20999\n      metadata:\n        fail_timeout: 1           # default 1 ms\n        weight: 1                 # default 1\n        max_fails: 1              # default 1\n')),(0,i.kt)("p",null,"And you can config it in short by default value:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'discovery:\n  consul_kv:\n    servers:\n      - "http://127.0.0.1:8500"\n')),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"keepalive")," has two optional values:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"true"),", default and recommend value, use the long pull way to query consul servers"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"false"),", not recommend, it would use the short pull way to query consul servers, then you can set the ",(0,i.kt)("inlineCode",{parentName:"li"},"fetch_interval")," for fetch interval")),(0,i.kt)("h3",{id:"register-http-api-services"},"Register Http API Services"),(0,i.kt)("p",null,"Service register Key&Value template:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'Key:    {Prefix}/{Service_Name}/{IP}:{Port}\nValue: {"weight": <Num>, "max_fails": <Num>, "fail_timeout": <Num>}\n')),(0,i.kt)("p",null,"The register consul key use ",(0,i.kt)("inlineCode",{parentName:"p"},"upstreams")," as prefix by default. The http api service name called ",(0,i.kt)("inlineCode",{parentName:"p"},"webpages")," for example, and you can also use ",(0,i.kt)("inlineCode",{parentName:"p"},"webpages/oneteam/hello")," as service name. The api instance of node's ip and port make up new key: ",(0,i.kt)("inlineCode",{parentName:"p"},"<IP>:<Port>"),"."),(0,i.kt)("p",null,"Now, register nodes into consul:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},'curl \\\n    -X PUT \\\n    -d \' {"weight": 1, "max_fails": 2, "fail_timeout": 1}\' \\\n    http://127.0.0.1:8500/v1/kv/upstreams/webpages/172.19.5.12:8000\n\ncurl \\\n    -X PUT \\\n    -d \' {"weight": 1, "max_fails": 2, "fail_timeout": 1}\' \\\n    http://127.0.0.1:8500/v1/kv/upstreams/webpages/172.19.5.13:8000\n')),(0,i.kt)("p",null,"In some case, same keys exist in different consul servers.\nTo avoid confusion, use the full consul key url path as service name in practice."),(0,i.kt)("h3",{id:"upstream-setting"},"Upstream setting"),(0,i.kt)("p",null,'Here is an example of routing a request with a URL of "/*" to a service which named "',(0,i.kt)("a",{parentName:"p",href:"http://127.0.0.1:8500/v1/kv/upstreams/webpages/%22"},'http://127.0.0.1:8500/v1/kv/upstreams/webpages/"')," and use consul_kv discovery client in the registry :"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},'$ curl http://127.0.0.1:9080/apisix/admin/routes/1 -H \'X-API-KEY: edd1c9f034335f136f87ad84b625c8f1\' -X PUT -i -d \'\n{\n    "uri": "/*",\n    "upstream": {\n        "service_name": "http://127.0.0.1:8500/v1/kv/upstreams/webpages/",\n        "type": "roundrobin",\n        "discovery_type": "consul_kv"\n    }\n}\'\n')),(0,i.kt)("p",null,"The format response as below:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "node": {\n    "value": {\n      "priority": 0,\n      "update_time": 1612755230,\n      "upstream": {\n        "discovery_type": "consul_kv",\n        "service_name": "http://127.0.0.1:8500/v1/kv/upstreams/webpages/",\n        "hash_on": "vars",\n        "type": "roundrobin",\n        "pass_host": "pass"\n      },\n      "id": "1",\n      "uri": "/*",\n      "create_time": 1612755230,\n      "status": 1\n    },\n    "key": "/apisix/routes/1"\n  },\n  "action": "set"\n}\n')),(0,i.kt)("p",null,"You could find more usage in the ",(0,i.kt)("inlineCode",{parentName:"p"},"apisix/t/discovery/consul_kv.t")," file."),(0,i.kt)("h2",{id:"debugging-api"},"Debugging API"),(0,i.kt)("p",null,"TODO"))}p.isMDXComponent=!0}}]);