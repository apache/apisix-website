"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[82439],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(n),m=a,g=d["".concat(s,".").concat(m)]||d[m]||u[m]||o;return n?r.createElement(g,i(i({ref:t},p),{},{components:n})):r.createElement(g,i({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},72708:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var r=n(87462),a=(n(67294),n(3905));const o={title:"Developer Guide",keywords:["APISIX ingress","Apache APISIX","Kubernetes ingress","Development","Contribute"],description:"Setting up development environment for APISIX Ingress controller."},i=void 0,l={unversionedId:"developer-guide",id:"version-2.0.0/developer-guide",isDocsHomePage:!1,title:"Developer Guide",description:"Setting up development environment for APISIX Ingress controller.",source:"@site/docs-apisix-ingress-controller_versioned_docs/version-2.0.0/developer-guide.md",sourceDirName:".",slug:"/developer-guide",permalink:"/docs/ingress-controller/developer-guide",editUrl:"/edit#https://github.com/apache/apisix-ingress-controller/edit/v2.0.0/docs/en/latest/developer-guide.md",tags:[],version:"2.0.0",frontMatter:{title:"Developer Guide",keywords:["APISIX ingress","Apache APISIX","Kubernetes ingress","Development","Contribute"],description:"Setting up development environment for APISIX Ingress controller."},sidebar:"version-2.0.0/docs",previous:{title:"Install with Helm",permalink:"/docs/ingress-controller/install"},next:{title:"Custom Resource Definitions API Reference",permalink:"/docs/ingress-controller/reference/apisix-ingress-controller/api-reference"}},s=[{value:"Prerequisites",id:"prerequisites",children:[]},{value:"Fork and clone",id:"fork-and-clone",children:[]},{value:"Install CRD and Gateway API",id:"install-crd-and-gateway-api",children:[]},{value:"Build from source",id:"build-from-source",children:[]},{value:"Building Image",id:"building-image",children:[]},{value:"Running tests",id:"running-tests",children:[{value:"Unit Tests",id:"unit-tests",children:[]},{value:"e2e Tests",id:"e2e-tests",children:[]}]}],c={toc:s};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"This document walks through how you can set up your development environment to contribute to APISIX Ingress controller."),(0,a.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,a.kt)("p",null,"Before you get started make sure you have:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Installed ",(0,a.kt)("a",{parentName:"li",href:"https://golang.org/dl/"},"Go 1.23")," or later"),(0,a.kt)("li",{parentName:"ol"},"A Kubernetes cluster available. We recommend using ",(0,a.kt)("a",{parentName:"li",href:"https://kind.sigs.k8s.io/"},"kind"),"."),(0,a.kt)("li",{parentName:"ol"},"Installed APISIX in Kubernetes using ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/apache/apisix-helm-chart"},"Helm"),"."),(0,a.kt)("li",{parentName:"ol"},"Installed ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/api7/adc/releases"},"ADC v0.20.0+"))),(0,a.kt)("h2",{id:"fork-and-clone"},"Fork and clone"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Fork the repository ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/apache/apisix-ingress-controller"},"apache/apisix-ingress-controller")," to your GitHub account"),(0,a.kt)("li",{parentName:"ol"},"Clone the fork to your workstation."),(0,a.kt)("li",{parentName:"ol"},"Run ",(0,a.kt)("inlineCode",{parentName:"li"},"go mod download")," to download the required modules.")),(0,a.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"If you are in China, you can speed up the downloads by setting ",(0,a.kt)("inlineCode",{parentName:"p"},"GOPROXY")," to ",(0,a.kt)("inlineCode",{parentName:"p"},"https://goproxy.cn"),"."))),(0,a.kt)("h2",{id:"install-crd-and-gateway-api"},"Install CRD and Gateway API"),(0,a.kt)("p",null,"To install the ",(0,a.kt)("a",{parentName:"p",href:"/docs/ingress-controller/concepts/resources#apisix-ingress-controller-crds-api"},"CRD")," and ",(0,a.kt)("a",{parentName:"p",href:"https://gateway-api.sigs.k8s.io/"},"Gateway API"),", run the following commands:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"make install\n")),(0,a.kt)("h2",{id:"build-from-source"},"Build from source"),(0,a.kt)("p",null,"To build APISIX Ingress controller, run the command below on the root of the project:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"make build\n")),(0,a.kt)("p",null,"Now you can run it by:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"# for ARM64 architecture, use the following command:\n# ./bin/apisix-ingress-controller_arm64 version\n./bin/apisix-ingress-controller_amd64 version\n")),(0,a.kt)("h2",{id:"building-image"},"Building Image"),(0,a.kt)("p",null,"To build a Docker image for APISIX Ingress controller, you can use the following command:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"make build-image IMG=apache/apisix-ingress-controller:dev\n")),(0,a.kt)("h2",{id:"running-tests"},"Running tests"),(0,a.kt)("h3",{id:"unit-tests"},"Unit Tests"),(0,a.kt)("p",null,"To run unit tests:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"make unit-test\n")),(0,a.kt)("h3",{id:"e2e-tests"},"e2e Tests"),(0,a.kt)("p",null,"To run end-to-end tests, you need to install ",(0,a.kt)("a",{parentName:"p",href:"https://kind.sigs.k8s.io/"},"kind"),"."),(0,a.kt)("p",null,"Launch a kind cluster with the following command:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"make kind-up\n")),(0,a.kt)("p",null,"To run end-to-end e2e-tests against any changes, you need to load the built Docker images into the Kubernetes cluster:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"# build docker image for APISIX Ingress controller\nmake build-image\n# load the image into kind cluster\nmake kind-load-images\n")),(0,a.kt)("p",null,"Currently, we use Kind version ",(0,a.kt)("inlineCode",{parentName:"p"},"0.26.0")," and Kubernetes version ",(0,a.kt)("inlineCode",{parentName:"p"},"1.26+")," for running the tests."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"make e2e-test\n")))}p.isMDXComponent=!0}}]);