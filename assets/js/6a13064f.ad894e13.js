"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[17560],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>c});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=a.createContext({}),o=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=o(e.components);return a.createElement(d.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,d=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),h=o(n),c=r,m=h["".concat(d,".").concat(c)]||h[c]||p[c]||i;return n?a.createElement(m,l(l({ref:t},u),{},{components:n})):a.createElement(m,l({ref:t},u))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=h;var s={};for(var d in t)hasOwnProperty.call(t,d)&&(s[d]=t[d]);s.originalType=e,s.mdxType="string"==typeof e?e:r,l[1]=s;for(var o=2;o<i;o++)l[o]=n[o];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},92061:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>d});var a=n(87462),r=(n(67294),n(3905));const i={title:"request-id",keywords:["Apache APISIX","API Gateway","Request ID"],description:"The request-id Plugin adds a unique ID to each request proxied through APISIX, which can be used to track API requests."},l=void 0,s={unversionedId:"plugins/request-id",id:"version-3.13/plugins/request-id",isDocsHomePage:!1,title:"request-id",description:"The request-id Plugin adds a unique ID to each request proxied through APISIX, which can be used to track API requests.",source:"@site/docs-apisix_versioned_docs/version-3.13/plugins/request-id.md",sourceDirName:"plugins",slug:"/plugins/request-id",permalink:"/docs/apisix/3.13/plugins/request-id",editUrl:"/edit#https://github.com/apache/apisix/edit/release/3.13/docs/en/latest/plugins/request-id.md",tags:[],version:"3.13",frontMatter:{title:"request-id",keywords:["Apache APISIX","API Gateway","Request ID"],description:"The request-id Plugin adds a unique ID to each request proxied through APISIX, which can be used to track API requests."},sidebar:"version-3.13/docs",previous:{title:"traffic-split",permalink:"/docs/apisix/3.13/plugins/traffic-split"},next:{title:"proxy-control",permalink:"/docs/apisix/3.13/plugins/proxy-control"}},d=[{value:"Description",id:"description",children:[]},{value:"Attributes",id:"attributes",children:[]},{value:"Examples",id:"examples",children:[{value:"Attach Request ID to Default Response Header",id:"attach-request-id-to-default-response-header",children:[]},{value:"Attach Request ID to Custom Response Header",id:"attach-request-id-to-custom-response-header",children:[]},{value:"Hide Request ID in Response Header",id:"hide-request-id-in-response-header",children:[]},{value:"Use <code>nanoid</code> Algorithm",id:"use-nanoid-algorithm",children:[]},{value:"Attach Request ID Globally and on a Route",id:"attach-request-id-globally-and-on-a-route",children:[]}]}],o={toc:d};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},o,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("head",null,(0,r.kt)("link",{rel:"canonical",href:"https://docs.api7.ai/hub/request-id"})),(0,r.kt)("h2",{id:"description"},"Description"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"request-id")," Plugin adds a unique ID to each request proxied through APISIX, which can be used to track API requests. If a request carries an ID in the header corresponding to ",(0,r.kt)("inlineCode",{parentName:"p"},"header_name"),", the Plugin will use the header value as the unique ID and will not overwrite with the automatically generated ID."),(0,r.kt)("h2",{id:"attributes"},"Attributes"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Valid values"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"header_name"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null},'"X-Request-Id"'),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the header that carries the request unique ID. Note that if a request carries an ID in the ",(0,r.kt)("inlineCode",{parentName:"td"},"header_name")," header, the Plugin will use the header value as the unique ID and will not overwrite it with the generated ID.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"include_in_response"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"If true, include the generated request ID in the response header, where the name of the header is the ",(0,r.kt)("inlineCode",{parentName:"td"},"header_name")," value.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"algorithm"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null},'"uuid"'),(0,r.kt)("td",{parentName:"tr",align:null},'["uuid","nanoid","range_id"]'),(0,r.kt)("td",{parentName:"tr",align:null},"Algorithm used for generating the unique ID. When set to ",(0,r.kt)("inlineCode",{parentName:"td"},"uuid")," , the Plugin generates a universally unique identifier. When set to ",(0,r.kt)("inlineCode",{parentName:"td"},"nanoid"),", the Plugin generates a compact, URL-safe ID. When set to ",(0,r.kt)("inlineCode",{parentName:"td"},"range_id"),", the Plugin generates a sequential ID with specific parameters.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"range_id"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Configuration for generating a request ID using the ",(0,r.kt)("inlineCode",{parentName:"td"},"range_id")," algorithm.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"range_id.char_set"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null},'"abcdefghijklmnopqrstuvwxyzABCDEFGHIGKLMNOPQRSTUVWXYZ0123456789"'),(0,r.kt)("td",{parentName:"tr",align:null},"minimum length 6"),(0,r.kt)("td",{parentName:"tr",align:null},"Character set used for the ",(0,r.kt)("inlineCode",{parentName:"td"},"range_id")," algorithm.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"range_id.length"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null},"16"),(0,r.kt)("td",{parentName:"tr",align:null},">=6"),(0,r.kt)("td",{parentName:"tr",align:null},"Length of the generated ID for the ",(0,r.kt)("inlineCode",{parentName:"td"},"range_id")," algorithm.")))),(0,r.kt)("h2",{id:"examples"},"Examples"),(0,r.kt)("p",null,"The examples below demonstrate how you can configure ",(0,r.kt)("inlineCode",{parentName:"p"},"request-id")," in different scenarios."),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"You can fetch the ",(0,r.kt)("inlineCode",{parentName:"p"},"admin_key")," from ",(0,r.kt)("inlineCode",{parentName:"p"},"config.yaml")," and save to an environment variable with the following command:"),(0,r.kt)("pre",{parentName:"div"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"admin_key=$(yq '.deployment.admin.admin_key[0].key' conf/config.yaml | sed 's/\"//g')\n")))),(0,r.kt)("h3",{id:"attach-request-id-to-default-response-header"},"Attach Request ID to Default Response Header"),(0,r.kt)("p",null,"The following example demonstrates how to configure ",(0,r.kt)("inlineCode",{parentName:"p"},"request-id")," on a Route which attaches a generated request ID to the default ",(0,r.kt)("inlineCode",{parentName:"p"},"X-Request-Id")," response header, if the header value is not passed in the request. When the ",(0,r.kt)("inlineCode",{parentName:"p"},"X-Request-Id")," header is set in the request, the Plugin will take the value in the request header as the request ID."),(0,r.kt)("p",null,"Create a Route with the ",(0,r.kt)("inlineCode",{parentName:"p"},"request-id")," Plugin using its default configurations (explicitly defined):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl "http://127.0.0.1:9180/apisix/admin/routes" -X PUT \\\n  -H "X-API-KEY: ${ADMIN_API_KEY}" \\\n  -d \'{\n    "id": "request-id-route",\n    "uri": "/anything",\n    "plugins": {\n      "request-id": {\n        "header_name": "X-Request-Id",\n        "include_in_response": true,\n        "algorithm": "uuid"\n      }\n    },\n    "upstream": {\n      "type": "roundrobin",\n      "nodes": {\n        "httpbin.org:80": 1\n      }\n    }\n  }\'\n')),(0,r.kt)("p",null,"Send a request to the Route:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl -i "http://127.0.0.1:9080/anything"\n')),(0,r.kt)("p",null,"You should receive an ",(0,r.kt)("inlineCode",{parentName:"p"},"HTTP/1.1 200 OK")," response and see the response includes the ",(0,r.kt)("inlineCode",{parentName:"p"},"X-Request-Id")," header with a generated ID:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"X-Request-Id: b9b2c0d4-d058-46fa-bafc-dd91a0ccf441\n")),(0,r.kt)("p",null,"Send a request to the Route with a custom request ID in the header:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"curl -i \"http://127.0.0.1:9080/anything\" -H 'X-Request-Id: some-custom-request-id'\n")),(0,r.kt)("p",null,"You should receive an ",(0,r.kt)("inlineCode",{parentName:"p"},"HTTP/1.1 200 OK")," response and see the response includes the ",(0,r.kt)("inlineCode",{parentName:"p"},"X-Request-Id")," header with the custom request ID:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"X-Request-Id: some-custom-request-id\n")),(0,r.kt)("h3",{id:"attach-request-id-to-custom-response-header"},"Attach Request ID to Custom Response Header"),(0,r.kt)("p",null,"The following example demonstrates how to configure ",(0,r.kt)("inlineCode",{parentName:"p"},"request-id")," on a Route which attaches a generated request ID to a specified header."),(0,r.kt)("p",null,"Create a Route with the ",(0,r.kt)("inlineCode",{parentName:"p"},"request-id")," Plugin to define a custom header that carries the request ID and include the request ID in the response header:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl "http://127.0.0.1:9180/apisix/admin/routes" -X PUT \\\n  -H "X-API-KEY: ${ADMIN_API_KEY}" \\\n  -d \'{\n    "id": "request-id-route",\n    "uri": "/anything",\n    "plugins": {\n      "request-id": {\n        "header_name": "X-Req-Identifier",\n        "include_in_response": true\n      }\n    },\n    "upstream": {\n      "type": "roundrobin",\n      "nodes": {\n        "httpbin.org:80": 1\n      }\n    }\n  }\'\n')),(0,r.kt)("p",null,"Send a request to the route:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl -i "http://127.0.0.1:9080/anything"\n')),(0,r.kt)("p",null,"You should receive an ",(0,r.kt)("inlineCode",{parentName:"p"},"HTTP/1.1 200 OK")," response and see the response includes the ",(0,r.kt)("inlineCode",{parentName:"p"},"X-Req-Identifier")," header with a generated ID:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"X-Req-Identifier: 1c42ff59-ee4c-4103-a980-8359f4135b21\n")),(0,r.kt)("h3",{id:"hide-request-id-in-response-header"},"Hide Request ID in Response Header"),(0,r.kt)("p",null,"The following example demonstrates how to configure ",(0,r.kt)("inlineCode",{parentName:"p"},"request-id")," on a Route which attaches a generated request ID to a specified header. The header containing the request ID should be forwarded to the Upstream service but not returned in the response header."),(0,r.kt)("p",null,"Create a Route with the ",(0,r.kt)("inlineCode",{parentName:"p"},"request-id")," Plugin to define a custom header that carries the request ID and not include the request ID in the response header:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl "http://127.0.0.1:9180/apisix/admin/routes" -X PUT \\\n  -H "X-API-KEY: ${ADMIN_API_KEY}" \\\n  -d \'{\n    "id": "request-id-route",\n    "uri": "/anything",\n    "plugins": {\n      "request-id": {\n        "header_name": "X-Req-Identifier",\n        "include_in_response": false\n      }\n    },\n    "upstream": {\n      "type": "roundrobin",\n      "nodes": {\n        "httpbin.org:80": 1\n      }\n    }\n  }\'\n')),(0,r.kt)("p",null,"Send a request to the Route:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl -i "http://127.0.0.1:9080/anything"\n')),(0,r.kt)("p",null,"You should receive an ",(0,r.kt)("inlineCode",{parentName:"p"},"HTTP/1.1 200 OK")," response not and see ",(0,r.kt)("inlineCode",{parentName:"p"},"X-Req-Identifier")," header among the response headers. In the response body, you should see:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "args": {},\n  "data": "",\n  "files": {},\n  "form": {},\n  "headers": {\n    "Accept": "*/*",\n    "Host": "127.0.0.1",\n    "User-Agent": "curl/8.6.0",\n    "X-Amzn-Trace-Id": "Root=1-6752748c-7d364f48564508db1e8c9ea8",\n    "X-Forwarded-Host": "127.0.0.1",\n    "X-Req-Identifier": "268092bc-15e1-4461-b277-bf7775f2856f"\n  },\n  ...\n}\n')),(0,r.kt)("p",null,"This shows the request ID is forwarded to the Upstream service but not returned in the response header."),(0,r.kt)("h3",{id:"use-nanoid-algorithm"},"Use ",(0,r.kt)("inlineCode",{parentName:"h3"},"nanoid")," Algorithm"),(0,r.kt)("p",null,"The following example demonstrates how to configure ",(0,r.kt)("inlineCode",{parentName:"p"},"request-id")," on a Route and use the ",(0,r.kt)("inlineCode",{parentName:"p"},"nanoid")," algorithm to generate the request ID."),(0,r.kt)("p",null,"Create a Route with the ",(0,r.kt)("inlineCode",{parentName:"p"},"request-id")," Plugin as such:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl "http://127.0.0.1:9180/apisix/admin/routes" -X PUT \\\n  -H "X-API-KEY: ${ADMIN_API_KEY}" \\\n  -d \'{\n    "id": "request-id-route",\n    "uri": "/anything",\n    "plugins": {\n      "request-id": {\n        "algorithm": "nanoid"\n      }\n    },\n    "upstream": {\n      "type": "roundrobin",\n      "nodes": {\n        "httpbin.org:80": 1\n      }\n    }\n  }\'\n')),(0,r.kt)("p",null,"Send a request to the Route:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl -i "http://127.0.0.1:9080/anything"\n')),(0,r.kt)("p",null,"You should receive an ",(0,r.kt)("inlineCode",{parentName:"p"},"HTTP/1.1 200 OK")," response and see the response includes the ",(0,r.kt)("inlineCode",{parentName:"p"},"X-Req-Identifier")," header with an ID generated using the ",(0,r.kt)("inlineCode",{parentName:"p"},"nanoid")," algorithm:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"X-Request-Id: kepgHWCH2ycQ6JknQKrX2\n")),(0,r.kt)("h3",{id:"attach-request-id-globally-and-on-a-route"},"Attach Request ID Globally and on a Route"),(0,r.kt)("p",null,"The following example demonstrates how to configure ",(0,r.kt)("inlineCode",{parentName:"p"},"request-id")," as a global Plugin and on a Route to attach two IDs."),(0,r.kt)("p",null,"Create a global rule for the ",(0,r.kt)("inlineCode",{parentName:"p"},"request-id")," Plugin which adds request ID to a custom header:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl -i "http://127.0.0.1:9180/apisix/admin/global_rules" -X PUT -d \'{\n  "id": "rule-for-request-id",\n  "plugins": {\n    "request-id": {\n      "header_name": "Global-Request-ID"\n    }\n  }\n}\'\n')),(0,r.kt)("p",null,"Create a Route with the ",(0,r.kt)("inlineCode",{parentName:"p"},"request-id")," Plugin which adds request ID to a different custom header:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl "http://127.0.0.1:9180/apisix/admin/routes" -X PUT \\\n  -H "X-API-KEY: ${ADMIN_API_KEY}" \\\n  -d \'{\n    "id": "request-id-route",\n    "uri": "/anything",\n    "plugins": {\n      "request-id": {\n        "header_name": "Route-Request-ID"\n      }\n    },\n    "upstream": {\n      "type": "roundrobin",\n      "nodes": {\n        "httpbin.org:80": 1\n      }\n    }\n  }\'\n')),(0,r.kt)("p",null,"Send a request to the Route:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl -i "http://127.0.0.1:9080/anything"\n')),(0,r.kt)("p",null,"You should receive an ",(0,r.kt)("inlineCode",{parentName:"p"},"HTTP/1.1 200 OK")," response and see the response includes the following headers:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"Global-Request-ID: 2e9b99c1-08ed-4a74-b347-49c0891b07ad\nRoute-Request-ID: d755666b-732c-4f0e-a30e-a7a71ace4e26\n")))}u.isMDXComponent=!0}}]);