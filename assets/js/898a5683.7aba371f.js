"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[47276],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>p});var r=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),f=c(t),p=i,g=f["".concat(s,".").concat(p)]||f[p]||d[p]||o;return t?r.createElement(g,l(l({ref:n},u),{},{components:t})):r.createElement(g,l({ref:n},u))}));function p(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,l=new Array(o);l[0]=f;var a={};for(var s in n)hasOwnProperty.call(n,s)&&(a[s]=n[s]);a.originalType=e,a.mdxType="string"==typeof e?e:i,l[1]=a;for(var c=2;c<o;c++)l[c]=t[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},99950:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>s});var r=t(87462),i=(t(67294),t(3905));const o={title:"Configuration File",slug:"/reference/apisix-ingress-controller/configuration-file",description:"Configure the APISIX Ingress Controller using the config.yaml file, including configurations such as log settings, leader election, metrics, and sync behavior."},l=void 0,a={unversionedId:"reference/configuration-file",id:"reference/configuration-file",isDocsHomePage:!1,title:"Configuration File",description:"Configure the APISIX Ingress Controller using the config.yaml file, including configurations such as log settings, leader election, metrics, and sync behavior.",source:"@site/docs/apisix-ingress-controller/reference/configuration-file.md",sourceDirName:"reference",slug:"/reference/apisix-ingress-controller/configuration-file",permalink:"/docs/ingress-controller/next/reference/apisix-ingress-controller/configuration-file",editUrl:"/edit#https://github.com/apache/apisix-ingress-controller/edit/master/docs/en/latest/reference/configuration-file.md",tags:[],version:"current",frontMatter:{title:"Configuration File",slug:"/reference/apisix-ingress-controller/configuration-file",description:"Configure the APISIX Ingress Controller using the config.yaml file, including configurations such as log settings, leader election, metrics, and sync behavior."},sidebar:"docs",previous:{title:"Configuration Examples",permalink:"/docs/ingress-controller/next/reference/apisix-ingress-controller/examples"},next:{title:"Upgrade Guide",permalink:"/docs/ingress-controller/next/upgrade-guide"}},s=[],c={toc:s};function u(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"The APISIX Ingress Controller uses a configuration file ",(0,i.kt)("inlineCode",{parentName:"p"},"config.yaml")," to define core settings such as log level, leader election behavior, metrics endpoints, and sync intervals."),(0,i.kt)("p",null,"Configurations are defined in a Kubernetes ConfigMap and mounted into the controller pod as a file at runtime. To apply changes, you can update the ConfigMap and restart the controller Deployment to reload the configurations."),(0,i.kt)("p",null,"Below are all available configuration options, including their default values and usage:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'log_level: "info"                               # The log level of the APISIX Ingress Controller.\n                                                # The default value is "info".\n\ncontroller_name: apisix.apache.org/apisix-ingress-controller  # The controller name of the APISIX Ingress Controller,\n                                                              # which is used to identify the controller in the GatewayClass.\n                                                              # The default value is "apisix.apache.org/apisix-ingress-controller".\nleader_election_id: "apisix-ingress-controller-leader"        # The leader election ID for the APISIX Ingress Controller.\n                                                              # The default value is "apisix-ingress-controller-leader".\nleader_election:\n  lease_duration: 30s                   # lease_duration is the duration that non-leader candidates will wait\n                                        # after observing a leadership renewal until attempting to acquire leadership of a\n                                        # leader election.\n  renew_deadline: 20s                   # renew_deadline is the time in seconds that the acting controller\n                                        # will retry refreshing leadership before giving up.\n  retry_period: 2s                      # retry_period is the time in seconds that the acting controller\n                                        # will wait between tries of actions with the controller.\n  disable: false                        # Whether to disable leader election.\n\nmetrics_addr: ":8080"                   # The address the metrics endpoint binds to.\n                                        # The default value is ":8080".\n\nenable_http2: false                     # Whether to enable HTTP/2 for the server.\n                                        # The default value is false.\n\nprobe_addr: ":8081"                     # The address the probe endpoint binds to.\n                                        # The default value is ":8081".\n\nsecure_metrics: false                   # The secure metrics configuration.\n                                        # The default value is "" (empty).\n\nexec_adc_timeout: 15s                   # The timeout for the ADC to execute.\n                                        # The default value is 15 seconds.\n\nprovider:\n  type: "apisix"                        # Provider type.\n                                        # Value can be "apisix" or "apisix-standalone".\n\n  sync_period: 1h                       # The period between two consecutive syncs.\n                                        # The default value is 1 hour, which means the controller will not sync.\n                                        # If you want to enable the sync, set it to a positive value.\n  init_sync_delay: 20m                  # The initial delay before the first sync, only used when the controller is started.\n                                        # The default value is 20 minutes.\n')))}u.isMDXComponent=!0}}]);