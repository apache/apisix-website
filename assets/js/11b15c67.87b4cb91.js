"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[29552],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>c});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),d=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=d(e.components);return a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),m=d(n),c=r,g=m["".concat(p,".").concat(c)]||m[c]||u[c]||l;return n?a.createElement(g,i(i({ref:t},s),{},{components:n})):a.createElement(g,i({ref:t},s))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var d=2;d<l;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},90176:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>i,default:()=>s,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const l={title:"chaitin-waf",keywords:["Apache APISIX","API Gateway","Plugin","WAF"],description:"This document contains basic information about the Apache APISIX `chaitin-waf` plugin."},i=void 0,o={unversionedId:"plugins/chaitin-waf",id:"version-3.13/plugins/chaitin-waf",isDocsHomePage:!1,title:"chaitin-waf",description:"This document contains basic information about the Apache APISIX `chaitin-waf` plugin.",source:"@site/docs-apisix_versioned_docs/version-3.13/plugins/chaitin-waf.md",sourceDirName:"plugins",slug:"/plugins/chaitin-waf",permalink:"/docs/apisix/3.13/plugins/chaitin-waf",editUrl:"/edit#https://github.com/apache/apisix/edit/release/3.13/docs/en/latest/plugins/chaitin-waf.md",tags:[],version:"3.13",frontMatter:{title:"chaitin-waf",keywords:["Apache APISIX","API Gateway","Plugin","WAF"],description:"This document contains basic information about the Apache APISIX `chaitin-waf` plugin."},sidebar:"version-3.13/docs",previous:{title:"GM",permalink:"/docs/apisix/3.13/plugins/gm"},next:{title:"limit-req",permalink:"/docs/apisix/3.13/plugins/limit-req"}},p=[{value:"Description",id:"description",children:[]},{value:"Response Headers",id:"response-headers",children:[]},{value:"Plugin Metadata",id:"plugin-metadata",children:[]},{value:"Attributes",id:"attributes",children:[]},{value:"Test Plugin",id:"test-plugin",children:[]},{value:"Delete Plugin",id:"delete-plugin",children:[]}],d={toc:p};function s(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"description"},"Description"),(0,r.kt)("p",null,"After enabling the chaitin-waf plugin, the traffic will be forwarded to the Chaitin WAF service for detection and\nprevention of various web application attacks, ensuring the security of the application and user data."),(0,r.kt)("h2",{id:"response-headers"},"Response Headers"),(0,r.kt)("p",null,"Depending on the plugin configuration, it is optional to add additional response headers."),(0,r.kt)("p",null,"The response headers are listed below:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"X-APISIX-CHAITIN-WAF"),": Whether APISIX forwards the request to the WAF server.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"yes: forwarded"),(0,r.kt)("li",{parentName:"ul"},"no: not forwarded"),(0,r.kt)("li",{parentName:"ul"},"unhealthy: matches the match variables, but no WAF server is available."),(0,r.kt)("li",{parentName:"ul"},"err: an error occurred during the execution of the plugin. Also includes the ",(0,r.kt)("strong",{parentName:"li"},"X-APISIX-CHAITIN-WAF-ERROR")," header."),(0,r.kt)("li",{parentName:"ul"},"waf-err: error while interacting with the WAF server. Also includes the ",(0,r.kt)("strong",{parentName:"li"},"X-APISIX-CHAITIN-WAF-ERROR")," header."),(0,r.kt)("li",{parentName:"ul"},"timeout: request to the WAF server timed out."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"X-APISIX-CHAITIN-WAF-ERROR"),": Debug header. Contains WAF error message."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"X-APISIX-CHAITIN-WAF-TIME"),": The time in milliseconds that APISIX spent interacting with WAF."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"X-APISIX-CHAITIN-WAF-STATUS"),": The status code returned to APISIX by the WAF server."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"X-APISIX-CHAITIN-WAF-ACTION"),": The action returned to APISIX by the WAF server.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"pass: request valid and passed."),(0,r.kt)("li",{parentName:"ul"},"reject: request rejected by WAF service."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"X-APISIX-CHAITIN-WAF-SERVER"),": Debug header. Indicates which WAF server was selected.")),(0,r.kt)("h2",{id:"plugin-metadata"},"Plugin Metadata"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Default value"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"nodes"),(0,r.kt)("td",{parentName:"tr",align:null},"array(object)"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"A list of addresses for the Chaitin SafeLine WAF service.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"nodes","[0]",".host"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"The address of Chaitin SafeLine WAF service. Supports IPv4, IPv6, Unix Socket, etc.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"nodes","[0]",".port"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"80"),(0,r.kt)("td",{parentName:"tr",align:null},"The port of the Chaitin SafeLine WAF service.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"mode"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"block"),(0,r.kt)("td",{parentName:"tr",align:null},"The global default mode if a Route doesn't specify its own: ",(0,r.kt)("inlineCode",{parentName:"td"},"off"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"monitor"),", or ",(0,r.kt)("inlineCode",{parentName:"td"},"block"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"config"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"WAF configuration defaults if none are specified on the Route.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"config.connect_timeout"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"1000"),(0,r.kt)("td",{parentName:"tr",align:null},"Connect timeout, in milliseconds.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"config.send_timeout"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"1000"),(0,r.kt)("td",{parentName:"tr",align:null},"Send timeout, in milliseconds.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"config.read_timeout"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"1000"),(0,r.kt)("td",{parentName:"tr",align:null},"Read timeout, in milliseconds.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"config.req_body_size"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"1024"),(0,r.kt)("td",{parentName:"tr",align:null},"Request body size, in KB.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"config.keepalive_size"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"256"),(0,r.kt)("td",{parentName:"tr",align:null},"Maximum concurrent idle connections to the SafeLine WAF detection service.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"config.keepalive_timeout"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"60000"),(0,r.kt)("td",{parentName:"tr",align:null},"Idle connection timeout, in milliseconds.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"config.real_client_ip"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},"Specifies whether to use the ",(0,r.kt)("inlineCode",{parentName:"td"},"X-Forwarded-For")," as the client IP (if present). If ",(0,r.kt)("inlineCode",{parentName:"td"},"false"),", uses the direct client IP from the connection.")))),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"You can fetch the ",(0,r.kt)("inlineCode",{parentName:"p"},"admin_key")," from ",(0,r.kt)("inlineCode",{parentName:"p"},"config.yaml")," and save to an environment variable with the following command:"),(0,r.kt)("pre",{parentName:"div"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"admin_key=$(yq '.deployment.admin.admin_key[0].key' conf/config.yaml | sed 's/\"//g')\n")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'curl http://127.0.0.1:9180/apisix/admin/plugin_metadata/chaitin-waf -H "X-API-KEY: $admin_key" -X PUT -d \'\n{\n  "nodes": [\n    {\n      "host": "unix:/path/to/safeline/resources/detector/snserver.sock",\n      "port": 8000\n    }\n  ],\n  "mode": "block",\n  "config": {\n    "real_client_ip": true\n  }\n}\'\n\n')),(0,r.kt)("h2",{id:"attributes"},"Attributes"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Default value"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"mode"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"block"),(0,r.kt)("td",{parentName:"tr",align:null},"Determines how the plugin behaves for matched requests. Valid values are ",(0,r.kt)("inlineCode",{parentName:"td"},"off"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"monitor"),", or ",(0,r.kt)("inlineCode",{parentName:"td"},"block"),". When set to ",(0,r.kt)("inlineCode",{parentName:"td"},"off"),", the plugin skips WAF checks. In ",(0,r.kt)("inlineCode",{parentName:"td"},"monitor")," mode, the plugin logs potential blocks without actually blocking the request. In ",(0,r.kt)("inlineCode",{parentName:"td"},"block")," mode, the plugin enforces blocks as determined by the WAF service.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"match"),(0,r.kt)("td",{parentName:"tr",align:null},"array","[object]"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"A list of matching rules. The plugin evaluates these rules to decide whether to perform the WAF check on a request. If empty, all requests are processed.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"match.vars"),(0,r.kt)("td",{parentName:"tr",align:null},"array","[array]"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"List of variables used for matching requests. Each rule is specified as ",(0,r.kt)("inlineCode",{parentName:"td"},"[variable, operator, value]")," (for example, ",(0,r.kt)("inlineCode",{parentName:"td"},'["http_waf", "==", "true"]'),"). These variables refer to NGINX internal variables. For supported operators, see ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/api7/lua-resty-expr#operator-list"},"lua-resty-expr"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"append_waf_resp_header"),(0,r.kt)("td",{parentName:"tr",align:null},"bool"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},"Determines whether the plugin adds WAF-related response headers (such as ",(0,r.kt)("inlineCode",{parentName:"td"},"X-APISIX-CHAITIN-WAF"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"X-APISIX-CHAITIN-WAF-ACTION"),", etc.) to the response.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"append_waf_debug_header"),(0,r.kt)("td",{parentName:"tr",align:null},"bool"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"Determines whether debugging headers (such as ",(0,r.kt)("inlineCode",{parentName:"td"},"X-APISIX-CHAITIN-WAF-ERROR")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"X-APISIX-CHAITIN-WAF-SERVER"),") are added. Effective only when ",(0,r.kt)("inlineCode",{parentName:"td"},"append_waf_resp_header")," is enabled.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"config"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Provides route-specific configuration for the Chaitin SafeLine WAF service. Settings here override the corresponding metadata defaults when specified.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"config.connect_timeout"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"1000"),(0,r.kt)("td",{parentName:"tr",align:null},"The connect timeout for the WAF server, in milliseconds.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"config.send_timeout"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"1000"),(0,r.kt)("td",{parentName:"tr",align:null},"The send timeout for transmitting data to the WAF server, in milliseconds.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"config.read_timeout"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"1000"),(0,r.kt)("td",{parentName:"tr",align:null},"The read timeout for receiving data from the WAF server, in milliseconds.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"config.req_body_size"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"1024"),(0,r.kt)("td",{parentName:"tr",align:null},"The maximum allowed request body size, in KB.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"config.keepalive_size"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"256"),(0,r.kt)("td",{parentName:"tr",align:null},"The maximum number of idle connections to the WAF detection service that can be maintained concurrently.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"config.keepalive_timeout"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"60000"),(0,r.kt)("td",{parentName:"tr",align:null},"The idle connection timeout for the WAF service, in milliseconds.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"config.real_client_ip"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},"Specifies whether to determine the client IP from the ",(0,r.kt)("inlineCode",{parentName:"td"},"X-Forwarded-For")," header. If set to ",(0,r.kt)("inlineCode",{parentName:"td"},"false"),", the plugin uses the direct client IP from the connection.")))),(0,r.kt)("p",null,"Below is a sample Route configuration that uses:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"httpbun.org as the upstream backend."),(0,r.kt)("li",{parentName:"ul"},"mode set to monitor, so the plugin only logs potential blocks."),(0,r.kt)("li",{parentName:"ul"},"A matching rule that triggers the plugin when the custom header waf: true is set."),(0,r.kt)("li",{parentName:"ul"},"An override to disable the ",(0,r.kt)("inlineCode",{parentName:"li"},"real client IP")," logic by setting config.real_client_ip to false.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'curl http://127.0.0.1:9180/apisix/admin/routes/1 \\\n  -H "X-API-KEY: $admin_key" \\\n  -X PUT -d \'\n{\n   "uri": "/*",\n   "plugins": {\n       "chaitin-waf": {\n           "mode": "monitor",\n           "match": [\n                {\n                    "vars": [\n                        ["http_waf", "==", "true"]\n                    ]\n                }\n            ],\n           "config": {\n               "real_client_ip": false\n           },\n           "append_waf_resp_header": true,\n           "append_waf_debug_header": false\n       }\n    },\n   "upstream": {\n       "type": "roundrobin",\n       "nodes": {\n           "httpbun.org:80": 1\n       }\n   }\n}\'\n')),(0,r.kt)("h2",{id:"test-plugin"},"Test Plugin"),(0,r.kt)("p",null,"With the sample configuration described above (including your chosen ",(0,r.kt)("inlineCode",{parentName:"p"},"mode")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"real_client_ip")," settings), the plugin behaves as follows:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"If the ",(0,r.kt)("inlineCode",{parentName:"strong"},"match")," condition is not satisfied")," (for example, ",(0,r.kt)("inlineCode",{parentName:"p"},"waf: true")," is missing), the request proceeds normally without contacting the WAF. You can observe:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'curl -H "Host: httpbun.org" http://127.0.0.1:9080/get -i\n\nHTTP/1.1 200 OK\nContent-Type: application/json\nContent-Length: 408\nConnection: keep-alive\nX-APISIX-CHAITIN-WAF: no\nDate: Wed, 19 Jul 2023 09:30:42 GMT\nX-Powered-By: httpbun/3c0dc05883dd9212ac38b04705037d50b02f2596\nServer: APISIX/3.3.0\n\n{\n  "args": {},\n  "headers": {\n    "Accept": "*/*",\n    "Connection": "close",\n    "Host": "httpbun.org",\n    "User-Agent": "curl/8.1.2",\n    "X-Forwarded-For": "127.0.0.1",\n    "X-Forwarded-Host": "httpbun.org",\n    "X-Forwarded-Port": "9080",\n    "X-Forwarded-Proto": "http",\n    "X-Real-Ip": "127.0.0.1"\n  },\n  "method": "GET",\n  "origin": "127.0.0.1, 122.231.76.178",\n  "url": "http://httpbun.org/get"\n}\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Potential injection requests")," (e.g., containing SQL snippets) are forwarded unmodified if they do not meet the plugin\u2019s match rules, and might result in a ",(0,r.kt)("inlineCode",{parentName:"p"},"404 Not Found")," or other response from the upstream:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'  curl -H "Host: httpbun.org" http://127.0.0.1:9080/getid=1%20AND%201=1 -i\n\n  HTTP/1.1 404 Not Found\n  Content-Type: text/plain; charset=utf-8\n  Content-Length: 19\n  Connection: keep-alive\n  X-APISIX-CHAITIN-WAF: no\n  Date: Wed, 19 Jul 2023 09:30:28 GMT\n  X-Content-Type-Options: nosniff\n  X-Powered-By: httpbun/3c0dc05883dd9212ac38b04705037d50b02f2596\n  Server: APISIX/3.3.0\n\n  404 page not found\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Matching safe requests")," (those that satisfy ",(0,r.kt)("inlineCode",{parentName:"p"},"match.vars"),", such as ",(0,r.kt)("inlineCode",{parentName:"p"},'-H "waf: true"'),") are checked by the WAF. If deemed harmless, you see:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'  curl -H "Host: httpbun.org" -H "waf: true" http://127.0.0.1:9080/get -i\n\n  HTTP/1.1 200 OK\n  Content-Type: application/json\n  Content-Length: 427\n  Connection: keep-alive\n  X-APISIX-CHAITIN-WAF-TIME: 2\n  X-APISIX-CHAITIN-WAF-STATUS: 200\n  X-APISIX-CHAITIN-WAF: yes\n  X-APISIX-CHAITIN-WAF-ACTION: pass\n  Date: Wed, 19 Jul 2023 09:29:58 GMT\n  X-Powered-By: httpbun/3c0dc05883dd9212ac38b04705037d50b02f2596\n  Server: APISIX/3.3.0\n\n  {\n    "args": {},\n    "headers": {\n      "Accept": "*/*",\n      "Connection": "close",\n      "Host": "httpbun.org",\n      "User-Agent": "curl/8.1.2",\n      "Waf": "true",\n      "X-Forwarded-For": "127.0.0.1",\n      "X-Forwarded-Host": "httpbun.org",\n      "X-Forwarded-Port": "9080",\n      "X-Forwarded-Proto": "http",\n      "X-Real-Ip": "127.0.0.1"\n    },\n    "method": "GET",\n    "origin": "127.0.0.1, 122.231.76.178",\n    "url": "http://httpbun.org/get"\n  }\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Suspicious requests")," that meet the plugin\u2019s match rules and are flagged by the WAF are typically rejected with a 403 status, along with headers that include ",(0,r.kt)("inlineCode",{parentName:"p"},"X-APISIX-CHAITIN-WAF-ACTION: reject"),". For example:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'  curl -H "Host: httpbun.org" -H "waf: true" http://127.0.0.1:9080/getid=1%20AND%201=1 -i\n\n  HTTP/1.1 403 Forbidden\n  Date: Wed, 19 Jul 2023 09:29:06 GMT\n  Content-Type: text/plain; charset=utf-8\n  Transfer-Encoding: chunked\n  Connection: keep-alive\n  X-APISIX-CHAITIN-WAF: yes\n  X-APISIX-CHAITIN-WAF-TIME: 2\n  X-APISIX-CHAITIN-WAF-ACTION: reject\n  X-APISIX-CHAITIN-WAF-STATUS: 403\n  Server: APISIX/3.3.0\n  Set-Cookie: sl-session=UdywdGL+uGS7q8xMfnJlbQ==; Domain=; Path=/; Max-Age=86400\n\n  {"code": 403, "success":false, "message": "blocked by Chaitin SafeLine Web Application Firewall", "event_id": "51a268653f2c4189bfa3ec66afbcb26d"}\n')))),(0,r.kt)("h2",{id:"delete-plugin"},"Delete Plugin"),(0,r.kt)("p",null,"To remove the ",(0,r.kt)("inlineCode",{parentName:"p"},"chaitin-waf")," plugin, you can delete the corresponding JSON configuration from the Plugin configuration.\nAPISIX will automatically reload and you do not have to restart for this to take effect:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'$ curl http://127.0.0.1:9180/apisix/admin/routes/1 -H "X-API-KEY: $admin_key" -X PUT -d \'\n{\n   "uri": "/*",\n   "upstream": {\n       "type": "roundrobin",\n       "nodes": {\n           "httpbun.org:80": 1\n       }\n   }\n}\'\n')))}s.isMDXComponent=!0}}]);