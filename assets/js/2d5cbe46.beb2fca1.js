"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[46476],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),d=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=d(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=d(n),h=a,c=m["".concat(s,".").concat(h)]||m[h]||u[h]||i;return n?r.createElement(c,l(l({ref:t},p),{},{components:n})):r.createElement(c,l({ref:t},p))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var d=2;d<i;d++)l[d]=n[d];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2897:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var r=n(87462),a=(n(67294),n(3905));const i={title:"proxy-rewrite",keywords:["Apache APISIX","API Gateway","Plugin","Proxy Rewrite","proxy-rewrite"],description:"The proxy-rewrite Plugin offers options to rewrite requests that APISIX forwards to Upstream services. With this plugin, you can modify the HTTP methods, request destination Upstream addresses, request headers, and more."},l=void 0,o={unversionedId:"plugins/proxy-rewrite",id:"version-3.13/plugins/proxy-rewrite",isDocsHomePage:!1,title:"proxy-rewrite",description:"The proxy-rewrite Plugin offers options to rewrite requests that APISIX forwards to Upstream services. With this plugin, you can modify the HTTP methods, request destination Upstream addresses, request headers, and more.",source:"@site/docs-apisix_versioned_docs/version-3.13/plugins/proxy-rewrite.md",sourceDirName:"plugins",slug:"/plugins/proxy-rewrite",permalink:"/docs/apisix/3.13/plugins/proxy-rewrite",editUrl:"/edit#https://github.com/apache/apisix/edit/release/3.13/docs/en/latest/plugins/proxy-rewrite.md",tags:[],version:"3.13",frontMatter:{title:"proxy-rewrite",keywords:["Apache APISIX","API Gateway","Plugin","Proxy Rewrite","proxy-rewrite"],description:"The proxy-rewrite Plugin offers options to rewrite requests that APISIX forwards to Upstream services. With this plugin, you can modify the HTTP methods, request destination Upstream addresses, request headers, and more."},sidebar:"version-3.13/docs",previous:{title:"response-rewrite",permalink:"/docs/apisix/3.13/plugins/response-rewrite"},next:{title:"grpc-transcode",permalink:"/docs/apisix/3.13/plugins/grpc-transcode"}},s=[{value:"Description",id:"description",children:[]},{value:"Attributes",id:"attributes",children:[]},{value:"Examples",id:"examples",children:[{value:"Rewrite Host Header",id:"rewrite-host-header",children:[]},{value:"Rewrite URI And Set Headers",id:"rewrite-uri-and-set-headers",children:[]},{value:"Rewrite URI And Append Headers",id:"rewrite-uri-and-append-headers",children:[]},{value:"Remove Existing Header",id:"remove-existing-header",children:[]},{value:"Rewrite URI Using RegEx",id:"rewrite-uri-using-regex",children:[]},{value:"Add URL Parameters",id:"add-url-parameters",children:[]},{value:"Rewrite HTTP Method",id:"rewrite-http-method",children:[]},{value:"Forward Consumer Names to Upstream",id:"forward-consumer-names-to-upstream",children:[]}]}],d={toc:s};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("head",null,(0,a.kt)("link",{rel:"canonical",href:"https://docs.api7.ai/hub/proxy-rewrite"})),(0,a.kt)("h2",{id:"description"},"Description"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"proxy-rewrite")," Plugin offers options to rewrite requests that APISIX forwards to Upstream services. With this plugin, you can modify the HTTP methods, request destination Upstream addresses, request headers, and more."),(0,a.kt)("h2",{id:"attributes"},"Attributes"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Required"),(0,a.kt)("th",{parentName:"tr",align:null},"Default"),(0,a.kt)("th",{parentName:"tr",align:null},"Valid values"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"uri"),(0,a.kt)("td",{parentName:"tr",align:null},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"False"),(0,a.kt)("td",{parentName:"tr",align:null}),(0,a.kt)("td",{parentName:"tr",align:null}),(0,a.kt)("td",{parentName:"tr",align:null},"New Upstream URI path. Value supports ",(0,a.kt)("a",{parentName:"td",href:"https://nginx.org/en/docs/http/ngx_http_core_module.html"},"NGINX variables"),". For example, ",(0,a.kt)("inlineCode",{parentName:"td"},"$arg_name"),".")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"method"),(0,a.kt)("td",{parentName:"tr",align:null},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"False"),(0,a.kt)("td",{parentName:"tr",align:null}),(0,a.kt)("td",{parentName:"tr",align:null},'["GET", "POST", "PUT", "HEAD", "DELETE", "OPTIONS","MKCOL", "COPY", "MOVE", "PROPFIND", "PROPFIND","LOCK", "UNLOCK", "PATCH", "TRACE"]'),(0,a.kt)("td",{parentName:"tr",align:null},"HTTP method to rewrite requests to use.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"regex_uri"),(0,a.kt)("td",{parentName:"tr",align:null},"array","[string]"),(0,a.kt)("td",{parentName:"tr",align:null},"False"),(0,a.kt)("td",{parentName:"tr",align:null}),(0,a.kt)("td",{parentName:"tr",align:null}),(0,a.kt)("td",{parentName:"tr",align:null},"Regular expressions used to match the URI path from client requests and compose a new Upstream URI path. When both ",(0,a.kt)("inlineCode",{parentName:"td"},"uri")," and ",(0,a.kt)("inlineCode",{parentName:"td"},"regex_uri")," are configured, ",(0,a.kt)("inlineCode",{parentName:"td"},"uri")," has a higher priority. The array should contain one or more ",(0,a.kt)("strong",{parentName:"td"},"key-value pairs"),", with the key being the regular expression to match URI against and value being the new Upstream URI path. For example, with ",(0,a.kt)("inlineCode",{parentName:"td"},'["^/iresty/(. *)/(. *)", "/$1-$2", ^/theothers/*", "/theothers"]'),", if a request is originally sent to ",(0,a.kt)("inlineCode",{parentName:"td"},"/iresty/hello/world"),", the Plugin will rewrite the Upstream URI path to ",(0,a.kt)("inlineCode",{parentName:"td"},"/iresty/hello-world"),"; if a request is originally sent to ",(0,a.kt)("inlineCode",{parentName:"td"},"/theothers/hello/world"),", the Plugin will rewrite the Upstream URI path to ",(0,a.kt)("inlineCode",{parentName:"td"},"/theothers"),".")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"host"),(0,a.kt)("td",{parentName:"tr",align:null},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"False"),(0,a.kt)("td",{parentName:"tr",align:null}),(0,a.kt)("td",{parentName:"tr",align:null}),(0,a.kt)("td",{parentName:"tr",align:null},"Set ",(0,a.kt)("a",{parentName:"td",href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Host"},(0,a.kt)("inlineCode",{parentName:"a"},"Host"))," request header.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"headers"),(0,a.kt)("td",{parentName:"tr",align:null},"object"),(0,a.kt)("td",{parentName:"tr",align:null},"False"),(0,a.kt)("td",{parentName:"tr",align:null}),(0,a.kt)("td",{parentName:"tr",align:null}),(0,a.kt)("td",{parentName:"tr",align:null},"Header actions to be executed. Can be set to objects of action verbs ",(0,a.kt)("inlineCode",{parentName:"td"},"add"),", ",(0,a.kt)("inlineCode",{parentName:"td"},"remove"),", and/or ",(0,a.kt)("inlineCode",{parentName:"td"},"set"),"; or an object consisting of headers to be ",(0,a.kt)("inlineCode",{parentName:"td"},"set"),". When multiple action verbs are configured, actions are executed in the order of ",(0,a.kt)("inlineCode",{parentName:"td"},"add"),", ",(0,a.kt)("inlineCode",{parentName:"td"},"remove"),", and ",(0,a.kt)("inlineCode",{parentName:"td"},"set"),".")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"headers.add"),(0,a.kt)("td",{parentName:"tr",align:null},"object"),(0,a.kt)("td",{parentName:"tr",align:null},"False"),(0,a.kt)("td",{parentName:"tr",align:null}),(0,a.kt)("td",{parentName:"tr",align:null}),(0,a.kt)("td",{parentName:"tr",align:null},"Headers to append to requests. If a header already present in the request, the header value will be appended. Header value could be set to a constant, one or more ",(0,a.kt)("a",{parentName:"td",href:"https://nginx.org/en/docs/http/ngx_http_core_module.html"},"NGINX variables"),", or the matched result of ",(0,a.kt)("inlineCode",{parentName:"td"},"regex_uri")," using variables such as ",(0,a.kt)("inlineCode",{parentName:"td"},"$1-$2-$3"),".")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"headers.set"),(0,a.kt)("td",{parentName:"tr",align:null},"object"),(0,a.kt)("td",{parentName:"tr",align:null},"False"),(0,a.kt)("td",{parentName:"tr",align:null}),(0,a.kt)("td",{parentName:"tr",align:null}),(0,a.kt)("td",{parentName:"tr",align:null},"Headers to set to requests. If a header already present in the request, the header value will be overwritten. Header value could be set to a constant, one or more ",(0,a.kt)("a",{parentName:"td",href:"https://nginx.org/en/docs/http/ngx_http_core_module.html"},"NGINX variables"),", or the matched result of ",(0,a.kt)("inlineCode",{parentName:"td"},"regex_uri")," using variables such as ",(0,a.kt)("inlineCode",{parentName:"td"},"$1-$2-$3"),". Should not be used to set ",(0,a.kt)("inlineCode",{parentName:"td"},"Host"),".")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"headers.remove"),(0,a.kt)("td",{parentName:"tr",align:null},"array","[string]"),(0,a.kt)("td",{parentName:"tr",align:null},"False"),(0,a.kt)("td",{parentName:"tr",align:null}),(0,a.kt)("td",{parentName:"tr",align:null}),(0,a.kt)("td",{parentName:"tr",align:null},"Headers to remove from requests.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"use_real_request_uri_unsafe"),(0,a.kt)("td",{parentName:"tr",align:null},"boolean"),(0,a.kt)("td",{parentName:"tr",align:null},"False"),(0,a.kt)("td",{parentName:"tr",align:null},"false"),(0,a.kt)("td",{parentName:"tr",align:null}),(0,a.kt)("td",{parentName:"tr",align:null},"If true, bypass URI normalization and allow for the full original request URI. Enabling this option is considered unsafe.")))),(0,a.kt)("h2",{id:"examples"},"Examples"),(0,a.kt)("p",null,"The examples below demonstrate how you can configure ",(0,a.kt)("inlineCode",{parentName:"p"},"proxy-rewrite")," on a Route in different scenarios."),(0,a.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"You can fetch the ",(0,a.kt)("inlineCode",{parentName:"p"},"admin_key")," from ",(0,a.kt)("inlineCode",{parentName:"p"},"config.yaml")," and save to an environment variable with the following command:"),(0,a.kt)("pre",{parentName:"div"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"admin_key=$(yq '.deployment.admin.admin_key[0].key' conf/config.yaml | sed 's/\"//g')\n")))),(0,a.kt)("h3",{id:"rewrite-host-header"},"Rewrite Host Header"),(0,a.kt)("p",null,"The following example demonstrates how you can modify the ",(0,a.kt)("inlineCode",{parentName:"p"},"Host")," header in a request. Note that you should not use ",(0,a.kt)("inlineCode",{parentName:"p"},"headers.set")," to set the ",(0,a.kt)("inlineCode",{parentName:"p"},"Host")," header."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'curl "http://127.0.0.1:9180/apisix/admin/routes" -X PUT \\\n  -H "X-API-KEY: ${admin_key}" \\\n  -d \'{\n    "id": "proxy-rewrite-route",\n    "methods": ["GET"],\n    "uri": "/headers",\n    "plugins": {\n      "proxy-rewrite": {\n        "host": "myapisix.demo"\n      }\n    },\n    "upstream": {\n      "type": "roundrobin",\n      "nodes": {\n        "httpbin.org:80": 1\n      }\n    }\n  }\'\n')),(0,a.kt)("p",null,"Send a request to ",(0,a.kt)("inlineCode",{parentName:"p"},"/headers")," to check all the request headers sent to upstream:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'curl "http://127.0.0.1:9080/headers"\n')),(0,a.kt)("p",null,"You should see a response similar to the following:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},'{\n  "headers": {\n    "Accept": "*/*",\n    "Host": "myapisix.demo",\n    "User-Agent": "curl/8.2.1",\n    "X-Amzn-Trace-Id": "Root=1-64fef198-29da0970383150175bd2d76d",\n    "X-Forwarded-Host": "127.0.0.1"\n  }\n}\n')),(0,a.kt)("h3",{id:"rewrite-uri-and-set-headers"},"Rewrite URI And Set Headers"),(0,a.kt)("p",null,"The following example demonstrates how you can rewrite the request Upstream URI and set additional header values. If the same headers present in the client request, the corresponding header values set in the Plugin will overwrite the values present in the client request."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'curl "http://127.0.0.1:9180/apisix/admin/routes" -X PUT \\\n  -H "X-API-KEY: ${admin_key}" \\\n  -d \'{\n    "id": "proxy-rewrite-route",\n    "methods": ["GET"],\n    "uri": "/",\n    "plugins": {\n      "proxy-rewrite": {\n        "uri": "/anything",\n        "headers": {\n          "set": {\n            "X-Api-Version": "v1",\n            "X-Api-Engine": "apisix"\n          }\n        }\n      }\n    },\n    "upstream": {\n      "type": "roundrobin",\n      "nodes": {\n        "httpbin.org:80": 1\n      }\n    }\n  }\'\n')),(0,a.kt)("p",null,"Send a request to verify:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'curl "http://127.0.0.1:9080/" -H \'"X-Api-Version": "v2"\'\n')),(0,a.kt)("p",null,"You should see a response similar to the following:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},'{\n  "args": {},\n  "data": "",\n  "files": {},\n  "form": {},\n  "headers": {\n    "Accept": "*/*",\n    "Host": "httpbin.org",\n    "User-Agent": "curl/8.2.1",\n    "X-Amzn-Trace-Id": "Root=1-64fed73a-59cd3bd640d76ab16c97f1f1",\n    "X-Api-Engine": "apisix",\n    "X-Api-Version": "v1",\n    "X-Forwarded-Host": "127.0.0.1"\n  },\n  "json": null,\n  "method": "GET",\n  "origin": "::1, 103.248.35.179",\n  "url": "http://localhost/anything"\n}\n')),(0,a.kt)("p",null,"Note that both headers present and the header value of ",(0,a.kt)("inlineCode",{parentName:"p"},"X-Api-Version")," configured in the Plugin overwrites the header value passed in the request."),(0,a.kt)("h3",{id:"rewrite-uri-and-append-headers"},"Rewrite URI And Append Headers"),(0,a.kt)("p",null,"The following example demonstrates how you can rewrite the request Upstream URI and append additional header values. If the same headers present in the client request, their headers values will append to the configured header values in the plugin."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'curl "http://127.0.0.1:9180/apisix/admin/routes" -X PUT \\\n  -H "X-API-KEY: ${admin_key}" \\\n  -d \'{\n    "id": "proxy-rewrite-route",\n    "methods": ["GET"],\n    "uri": "/",\n    "plugins": {\n      "proxy-rewrite": {\n        "uri": "/headers",\n        "headers": {\n          "add": {\n            "X-Api-Version": "v1",\n            "X-Api-Engine": "apisix"\n          }\n        }\n      }\n    },\n    "upstream": {\n      "type": "roundrobin",\n      "nodes": {\n        "httpbin.org:80": 1\n      }\n    }\n  }\'\n')),(0,a.kt)("p",null,"Send a request to verify:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'curl "http://127.0.0.1:9080/" -H \'"X-Api-Version": "v2"\'\n')),(0,a.kt)("p",null,"You should see a response similar to the following:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},'{\n  "headers": {\n    "Accept": "*/*",\n    "Host": "httpbin.org",\n    "User-Agent": "curl/8.2.1",\n    "X-Amzn-Trace-Id": "Root=1-64fed73a-59cd3bd640d76ab16c97f1f1",\n    "X-Api-Engine": "apisix",\n    "X-Api-Version": "v1,v2",\n    "X-Forwarded-Host": "127.0.0.1"\n  }\n}\n')),(0,a.kt)("p",null,"Note that both headers present and the header value of ",(0,a.kt)("inlineCode",{parentName:"p"},"X-Api-Version")," configured in the Plugin is appended by the header value passed in the request."),(0,a.kt)("h3",{id:"remove-existing-header"},"Remove Existing Header"),(0,a.kt)("p",null,"The following example demonstrates how you can remove an existing header ",(0,a.kt)("inlineCode",{parentName:"p"},"User-Agent"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'curl "http://127.0.0.1:9180/apisix/admin/routes" -X PUT \\\n  -H "X-API-KEY: ${admin_key}" \\\n  -d \'{\n    "id": "proxy-rewrite-route",\n    "methods": ["GET"],\n    "uri": "/headers",\n    "plugins": {\n      "proxy-rewrite": {\n        "headers": {\n          "remove":[\n            "User-Agent"\n          ]\n        }\n      }\n    },\n    "upstream": {\n      "type": "roundrobin",\n      "nodes": {\n        "httpbin.org:80": 1\n      }\n    }\n  }\'\n')),(0,a.kt)("p",null,"Send a request to verify if the specified header is removed:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'curl "http://127.0.0.1:9080/headers"\n')),(0,a.kt)("p",null,"You should see a response similar to the following, where the ",(0,a.kt)("inlineCode",{parentName:"p"},"User-Agent")," header is not present:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},'{\n  "headers": {\n    "Accept": "*/*",\n    "Host": "httpbin.org",\n    "X-Amzn-Trace-Id": "Root=1-64fef302-07f2b13e0eb006ba776ad91d",\n    "X-Forwarded-Host": "127.0.0.1"\n  }\n}\n')),(0,a.kt)("h3",{id:"rewrite-uri-using-regex"},"Rewrite URI Using RegEx"),(0,a.kt)("p",null,"The following example demonstrates how you can parse text from the original Upstream URI path and use them to compose a new Upstream URI path. In this example, APISIX is configured to forward all requests from ",(0,a.kt)("inlineCode",{parentName:"p"},"/test/user/agent")," to ",(0,a.kt)("inlineCode",{parentName:"p"},"/user-agent"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'curl "http://127.0.0.1:9180/apisix/admin/routes" -X PUT \\\n  -H "X-API-KEY: ${admin_key}" \\\n  -d \'{\n    "id": "proxy-rewrite-route",\n    "uri": "/test/*",\n    "plugins": {\n      # highlight-start\n      "proxy-rewrite": {\n        "regex_uri": ["^/test/(.*)/(.*)", "/$1-$2"]\n      }\n    },\n    "upstream": {\n      "type": "roundrobin",\n      "nodes": {\n        "httpbin.org:80": 1\n      }\n    }\n  }\'\n')),(0,a.kt)("p",null,"Send a request to ",(0,a.kt)("inlineCode",{parentName:"p"},"/test/user/agent")," to check if it is redirected to ",(0,a.kt)("inlineCode",{parentName:"p"},"/user-agent"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'curl "http://127.0.0.1:9080/test/user/agent"\n')),(0,a.kt)("p",null,"You should see a response similar to the following:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},'{\n  "user-agent": "curl/8.2.1"\n}\n')),(0,a.kt)("h3",{id:"add-url-parameters"},"Add URL Parameters"),(0,a.kt)("p",null,"The following example demonstrates how you can add URL parameters to the request."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'curl "http://127.0.0.1:9180/apisix/admin/routes" -X PUT \\\n  -H "X-API-KEY: ${admin_key}" \\\n  -d \'{\n    "id": "proxy-rewrite-route",\n    "methods": ["GET"],\n    "uri": "/get",\n    "plugins": {\n      "proxy-rewrite": {\n        "uri": "/get?arg1=apisix&arg2=plugin"\n      }\n    },\n    "upstream": {\n      "type": "roundrobin",\n      "nodes": {\n        "httpbin.org:80": 1\n      }\n    }\n  }\'\n')),(0,a.kt)("p",null,"Send a request to verify if the URL parameters are also forwarded to upstream:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'curl "http://127.0.0.1:9080/get"\n')),(0,a.kt)("p",null,"You should see a response similar to the following:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},'{\n  "args": {\n    "arg1": "apisix",\n    "arg2": "plugin"\n  },\n  "headers": {\n    "Accept": "*/*",\n    "Host": "127.0.0.1",\n    "User-Agent": "curl/8.2.1",\n    "X-Amzn-Trace-Id": "Root=1-64fef6dc-2b0e09591db7353a275cdae4",\n    "X-Forwarded-Host": "127.0.0.1"\n  },\n  "origin": "127.0.0.1, 103.248.35.148",\n  # highlight-next-line\n  "url": "http://127.0.0.1/get?arg1=apisix&arg2=plugin"\n}\n')),(0,a.kt)("h3",{id:"rewrite-http-method"},"Rewrite HTTP Method"),(0,a.kt)("p",null,"The following example demonstrates how you can rewrite a GET request into a POST request."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'curl "http://127.0.0.1:9180/apisix/admin/routes" -X PUT \\\n  -H "X-API-KEY: ${admin_key}" \\\n  -d \'{\n    "id": "proxy-rewrite-route",\n    "methods": ["GET"],\n    "uri": "/get",\n    "plugins": {\n      "proxy-rewrite": {\n        "uri": "/anything",\n        "method":"POST"\n      }\n    },\n    "upstream": {\n      "type": "roundrobin",\n      "nodes": {\n        "httpbin.org:80": 1\n      }\n    }\n  }\'\n')),(0,a.kt)("p",null,"Send a GET request to ",(0,a.kt)("inlineCode",{parentName:"p"},"/get")," to verify if it is transformed into a POST request to ",(0,a.kt)("inlineCode",{parentName:"p"},"/anything"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'curl "http://127.0.0.1:9080/get"\n')),(0,a.kt)("p",null,"You should see a response similar to the following:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},'{\n  "args": {},\n  "data": "",\n  "files": {},\n  "form": {},\n  "headers": {\n    "Accept": "*/*",\n    "Host": "127.0.0.1",\n    "User-Agent": "curl/8.2.1",\n    "X-Amzn-Trace-Id": "Root=1-64fef7de-0c63387645353998196317f2",\n    "X-Forwarded-Host": "127.0.0.1"\n  },\n  "json": null,\n  "method": "POST",\n  "origin": "::1, 103.248.35.179",\n  "url": "http://localhost/anything"\n}\n')),(0,a.kt)("h3",{id:"forward-consumer-names-to-upstream"},"Forward Consumer Names to Upstream"),(0,a.kt)("p",null,"The following example demonstrates how you can forward the name of consumers who authenticates successfully to Upstream services. As an example, you will be using ",(0,a.kt)("inlineCode",{parentName:"p"},"key-auth")," as the authentication method."),(0,a.kt)("p",null,"Create a Consumer ",(0,a.kt)("inlineCode",{parentName:"p"},"JohnDoe"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'curl "http://127.0.0.1:9180/apisix/admin/consumers" -X PUT \\\n  -H "X-API-KEY: ${admin_key}" \\\n  -d \'{\n    "username": "JohnDoe"\n  }\'\n')),(0,a.kt)("p",null,"Create ",(0,a.kt)("inlineCode",{parentName:"p"},"key-auth")," credential for the Consumer:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'curl "http://127.0.0.1:9180/apisix/admin/consumers/JohnDoe/credentials" -X PUT \\\n  -H "X-API-KEY: ${admin_key}" \\\n  -d \'{\n    "id": "cred-john-key-auth",\n    "plugins": {\n      "key-auth": {\n        "key": "john-key"\n      }\n    }\n  }\'\n')),(0,a.kt)("p",null,"Next, create a Route with key authentication enabled, configure ",(0,a.kt)("inlineCode",{parentName:"p"},"proxy-rewrite")," to add Consumer name to the header, and remove the authentication key so that it is not visible to the Upstream service:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'curl "http://127.0.0.1:9180/apisix/admin/routes" -X PUT \\\n  -H "X-API-KEY: ${admin_key}" \\\n  -d \'{\n    "id": "consumer-restricted-route",\n    "uri": "/get",\n    "plugins": {\n      "key-auth": {},\n      "proxy-rewrite": {\n        "headers": {\n          "set": {\n            "X-Apisix-Consumer": "$consumer_name"\n          },\n          "remove": [ "Apikey" ]\n        }\n      }\n    },\n    "upstream" : {\n      "nodes": {\n        "httpbin.org":1\n      }\n    }\n  }\'\n')),(0,a.kt)("p",null,"Send a request to the Route as Consumer ",(0,a.kt)("inlineCode",{parentName:"p"},"JohnDoe"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"curl -i \"http://127.0.0.1:9080/get\" -H 'apikey: john-key'\n")),(0,a.kt)("p",null,"You should receive an ",(0,a.kt)("inlineCode",{parentName:"p"},"HTTP/1.1 200 OK")," response with the following body:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},'{\n  "args": {},\n  "headers": {\n    "Accept": "*/*",\n    "Host": "127.0.0.1",\n    "User-Agent": "curl/8.4.0",\n    "X-Amzn-Trace-Id": "Root=1-664b01a6-2163c0156ed4bff51d87d877",\n    "X-Apisix-Consumer": "JohnDoe",\n    "X-Forwarded-Host": "127.0.0.1"\n  },\n  "origin": "172.19.0.1, 203.12.12.12",\n  "url": "http://127.0.0.1/get"\n}\n')),(0,a.kt)("p",null,"Send another request to the Route without the valid credential:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'curl -i "http://127.0.0.1:9080/get"\n')),(0,a.kt)("p",null,"You should receive an ",(0,a.kt)("inlineCode",{parentName:"p"},"HTTP/1.1 403 Forbidden")," response."))}p.isMDXComponent=!0}}]);