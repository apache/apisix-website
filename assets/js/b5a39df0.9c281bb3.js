"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[94862],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>k});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),g=p(n),k=r,d=g["".concat(s,".").concat(k)]||g[k]||u[k]||i;return n?a.createElement(d,l(l({ref:t},c),{},{components:n})):a.createElement(d,l({ref:t},c))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=g;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var p=2;p<i;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},66906:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>l,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var a=n(87462),r=(n(67294),n(3905));const i={title:"skywalking",keywords:["Apache APISIX","API Gateway","Plugin","SkyWalking"],description:"The skywalking Plugin supports the integrating with Apache SkyWalking for request tracing."},l=void 0,o={unversionedId:"plugins/skywalking",id:"plugins/skywalking",isDocsHomePage:!1,title:"skywalking",description:"The skywalking Plugin supports the integrating with Apache SkyWalking for request tracing.",source:"@site/docs/apisix/plugins/skywalking.md",sourceDirName:"plugins",slug:"/plugins/skywalking",permalink:"/docs/apisix/next/plugins/skywalking",editUrl:"/edit#https://github.com/apache/apisix/edit/master/docs/en/latest/plugins/skywalking.md",tags:[],version:"current",frontMatter:{title:"skywalking",keywords:["Apache APISIX","API Gateway","Plugin","SkyWalking"],description:"The skywalking Plugin supports the integrating with Apache SkyWalking for request tracing."},sidebar:"docs",previous:{title:"zipkin",permalink:"/docs/apisix/next/plugins/zipkin"},next:{title:"opentelemetry",permalink:"/docs/apisix/next/plugins/opentelemetry"}},s=[{value:"Description",id:"description",children:[]},{value:"Static Configurations",id:"static-configurations",children:[]},{value:"Attributes",id:"attributes",children:[]},{value:"Example",id:"example",children:[{value:"Trace All Requests",id:"trace-all-requests",children:[]},{value:"Associate Traces with Logs",id:"associate-traces-with-logs",children:[]}]}],p={toc:s};function c(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("head",null,(0,r.kt)("link",{rel:"canonical",href:"https://docs.api7.ai/hub/skywalking"})),(0,r.kt)("h2",{id:"description"},"Description"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"skywalking")," Plugin supports the integrating with ",(0,r.kt)("a",{parentName:"p",href:"https://skywalking.apache.org"},"Apache SkyWalking")," for request tracing."),(0,r.kt)("p",null,"SkyWalking uses its native Nginx Lua tracer to provide tracing, topology analysis, and metrics from both service and URI perspectives. APISIX supports HTTP protocol to interact with the SkyWalking server."),(0,r.kt)("p",null,"The server currently supports two protocols: HTTP and gRPC. In APISIX, only HTTP is currently supported."),(0,r.kt)("h2",{id:"static-configurations"},"Static Configurations"),(0,r.kt)("p",null,"By default, service names and endpoint address for the Plugin are pre-configured in the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/apache/apisix/blob/master/apisix/cli/config.lua"},"default configuration"),"."),(0,r.kt)("p",null,"To customize these values, add the corresponding configurations to ",(0,r.kt)("inlineCode",{parentName:"p"},"config.yaml"),". For example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'plugin_attr:\n  skywalking:\n    report_interval: 3      # Reporting interval time in seconds.\n    service_name: APISIX    # Service name for SkyWalking reporter.\n    service_instance_name: "APISIX Instance Name"   # Service instance name for SkyWalking reporter.\n                                                    # Set to $hostname to get the local hostname.\n    endpoint_addr: http://127.0.0.1:12800           # SkyWalking HTTP endpoint.\n')),(0,r.kt)("p",null,"Reload APISIX for changes to take effect."),(0,r.kt)("h2",{id:"attributes"},"Attributes"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Valid values"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"sample_ratio"),(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:null},"True"),(0,r.kt)("td",{parentName:"tr",align:null},"1"),(0,r.kt)("td",{parentName:"tr",align:null},"[0.00001, 1]"),(0,r.kt)("td",{parentName:"tr",align:null},"Frequency of request sampling. Setting the sample ratio to ",(0,r.kt)("inlineCode",{parentName:"td"},"1")," means to sample all requests.")))),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)("p",null,"To follow along the example, start a storage, OAP and Booster UI with Docker Compose, following ",(0,r.kt)("a",{parentName:"p",href:"https://skywalking.apache.org/docs/main/next/en/setup/backend/backend-docker/"},"Skywalking's documentation"),". Once set up, the OAP server should be listening on ",(0,r.kt)("inlineCode",{parentName:"p"},"12800")," and you should be able to access the UI at ",(0,r.kt)("a",{parentName:"p",href:"http://localhost:8080"},"http://localhost:8080"),"."),(0,r.kt)("p",null,"Update APISIX configuration file to enable the ",(0,r.kt)("inlineCode",{parentName:"p"},"skywalking")," plugin, which is disabled by default, and update the endpoint address:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="config.yaml"',title:'"config.yaml"'},"plugins:\n  - skywalking\n  - ...\n\nplugin_attr:\n  skywalking:\n    report_interval: 3\n    service_name: APISIX\n    service_instance_name: APISIX Instance\n    endpoint_addr: http://192.168.2.103:12800\n")),(0,r.kt)("p",null,"Reload APISIX for configuration changes to take effect."),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"You can fetch the ",(0,r.kt)("inlineCode",{parentName:"p"},"admin_key")," from ",(0,r.kt)("inlineCode",{parentName:"p"},"config.yaml")," and save to an environment variable with the following command:"),(0,r.kt)("pre",{parentName:"div"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"admin_key=$(yq '.deployment.admin.admin_key[0].key' conf/config.yaml | sed 's/\"//g')\n")))),(0,r.kt)("h3",{id:"trace-all-requests"},"Trace All Requests"),(0,r.kt)("p",null,"The following example demonstrates how you can trace all requests passing through a Route."),(0,r.kt)("p",null,"Create a Route with ",(0,r.kt)("inlineCode",{parentName:"p"},"skywalking")," and configure the sampling ratio to be 1 to trace all requests:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl "http://127.0.0.1:9180/apisix/admin/routes" -X PUT \\\n  -H "X-API-KEY: ${admin_key}" \\\n  -d \'{\n    "id": "skywalking-route",\n    "uri": "/anything",\n    "plugins": {\n      "skywalking": {\n        "sample_ratio": 1\n      }\n    },\n    "upstream": {\n      "nodes": {\n        "httpbin.org:80": 1\n      },\n      "type": "roundrobin"\n    }\n  }\'\n')),(0,r.kt)("p",null,"Send a few requests to the Route:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl -i "http://127.0.0.1:9080/anything"\n')),(0,r.kt)("p",null,"You should receive ",(0,r.kt)("inlineCode",{parentName:"p"},"HTTP/1.1 200 OK")," responses."),(0,r.kt)("p",null,"In ",(0,r.kt)("a",{parentName:"p",href:"http://localhost:8080"},"Skywalking UI"),", navigate to ",(0,r.kt)("strong",{parentName:"p"},"General Service")," > ",(0,r.kt)("strong",{parentName:"p"},"Services"),". You should see a service called ",(0,r.kt)("inlineCode",{parentName:"p"},"APISIX")," with traces corresponding to your requests:"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://static.apiseven.com/uploads/2025/01/15/UdwiO8NJ_skywalking-traces.png",alt:"SkyWalking APISIX traces"})),(0,r.kt)("h3",{id:"associate-traces-with-logs"},"Associate Traces with Logs"),(0,r.kt)("p",null,"The following example demonstrates how you can configure the ",(0,r.kt)("inlineCode",{parentName:"p"},"skywalking-logger")," Plugin on a Route to log information of requests hitting the Route."),(0,r.kt)("p",null,"Create a Route with the ",(0,r.kt)("inlineCode",{parentName:"p"},"skywalking-logger")," Plugin and configure the Plugin with your OAP server URI:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl "http://127.0.0.1:9180/apisix/admin/routes" -X PUT \\\n  -H "X-API-KEY: ${admin_key}" \\\n  -d \'{\n    "id": "skywalking-logger-route",\n    "uri": "/anything",\n    "plugins": {\n      "skywalking": {\n        "sample_ratio": 1\n      },\n      "skywalking-logger": {\n        "endpoint_addr": "http://192.168.2.103:12800"\n      }\n    },\n    "upstream": {\n      "nodes": {\n        "httpbin.org:80": 1\n      },\n      "type": "roundrobin"\n    }\n  }\'\n')),(0,r.kt)("p",null,"Generate a few requests to the Route:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl -i "http://127.0.0.1:9080/anything"\n')),(0,r.kt)("p",null,"You should receive ",(0,r.kt)("inlineCode",{parentName:"p"},"HTTP/1.1 200 OK")," responses."),(0,r.kt)("p",null,"In ",(0,r.kt)("a",{parentName:"p",href:"http://localhost:8080"},"Skywalking UI"),", navigate to ",(0,r.kt)("strong",{parentName:"p"},"General Service")," > ",(0,r.kt)("strong",{parentName:"p"},"Services"),". You should see a service called ",(0,r.kt)("inlineCode",{parentName:"p"},"APISIX")," with a trace corresponding to your request, where you can view the associated logs:"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://static.apiseven.com/uploads/2025/01/16/soUpXm6b_trace-view-logs.png",alt:"trace context"})),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://static.apiseven.com/uploads/2025/01/16/XD934LvU_associated-logs.png",alt:"associated log"})))}c.isMDXComponent=!0}}]);