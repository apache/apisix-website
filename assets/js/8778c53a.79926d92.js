"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[69345],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>u});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),d=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},s=function(e){var t=d(e.components);return n.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),c=d(a),u=r,g=c["".concat(p,".").concat(u)]||c[u]||m[u]||i;return a?n.createElement(g,o(o({ref:t},s),{},{components:a})):n.createElement(g,o({ref:t},s))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=c;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var d=2;d<i;d++)o[d]=a[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},16034:(e,t,a)=>{a.r(t),a.d(t,{contentTitle:()=>o,default:()=>s,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var n=a(87462),r=(a(67294),a(3905));const i={title:"Upgrade Guide",keywords:["APISIX Ingress","Apache APISIX","Kubernetes Ingress","Gateway API"]},o=void 0,l={unversionedId:"upgrade-guide",id:"version-2.0.0/upgrade-guide",isDocsHomePage:!1,title:"Upgrade Guide",description:"This document outlines the major updates, configuration compatibility changes, API behavior differences, and critical considerations when upgrading the APISIX Ingress Controller from version 1.x.x to 2.0.0. Please read carefully and assess the impact on your existing system before proceeding with the upgrade.",source:"@site/docs-apisix-ingress-controller_versioned_docs/version-2.0.0/upgrade-guide.md",sourceDirName:".",slug:"/upgrade-guide",permalink:"/docs/ingress-controller/upgrade-guide",editUrl:"/edit#https://github.com/apache/apisix-ingress-controller/edit/v2.0.0/docs/en/latest/upgrade-guide.md",tags:[],version:"2.0.0",frontMatter:{title:"Upgrade Guide",keywords:["APISIX Ingress","Apache APISIX","Kubernetes Ingress","Gateway API"]},sidebar:"version-2.0.0/docs",previous:{title:"Configuration File",permalink:"/docs/ingress-controller/reference/apisix-ingress-controller/configuration-file"},next:{title:"FAQ",permalink:"/docs/ingress-controller/FAQ"}},p=[{value:"Upgrading from 1.x.x to 2.0.0: Key Changes and Considerations",id:"upgrading-from-1xx-to-200-key-changes-and-considerations",children:[{value:"APISIX Version Dependency (Data Plane)",id:"apisix-version-dependency-data-plane",children:[]},{value:"Architecture Changes",id:"architecture-changes",children:[]},{value:"Ingress Configuration Changes",id:"ingress-configuration-changes",children:[]},{value:"API Changes",id:"api-changes",children:[]},{value:"Summary",id:"summary",children:[]}]}],d={toc:p};function s(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"upgrading-from-1xx-to-200-key-changes-and-considerations"},"Upgrading from 1.x.x to 2.0.0: Key Changes and Considerations"),(0,r.kt)("p",null,"This document outlines the major updates, configuration compatibility changes, API behavior differences, and critical considerations when upgrading the APISIX Ingress Controller from version 1.x.x to 2.0.0. Please read carefully and assess the impact on your existing system before proceeding with the upgrade."),(0,r.kt)("h3",{id:"apisix-version-dependency-data-plane"},"APISIX Version Dependency (Data Plane)"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"apisix-standalone")," mode is supported only with ",(0,r.kt)("strong",{parentName:"p"},"APISIX 3.13.0"),". When using this mode, it is mandatory to upgrade the data plane APISIX instance along with the Ingress Controller."),(0,r.kt)("h3",{id:"architecture-changes"},"Architecture Changes"),(0,r.kt)("h4",{id:"architecture-in-1xx"},"Architecture in 1.x.x"),(0,r.kt)("p",null,"There were two main deployment architectures in 1.x.x:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Mode"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Issue"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Admin API Mode"),(0,r.kt)("td",{parentName:"tr",align:null},"Runs a separate etcd instance, with APISIX Admin API managing data plane configuration"),(0,r.kt)("td",{parentName:"tr",align:null},"Complex to deploy; high maintenance overhead for etcd")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Mock-ETCD Mode"),(0,r.kt)("td",{parentName:"tr",align:null},"APISIX and the Ingress Controller are deployed in the same Pod, mocking etcd endpoints"),(0,r.kt)("td",{parentName:"tr",align:null},"Stateless Ingress cannot persist revision info; may lead to data inconsistency")))),(0,r.kt)("h4",{id:"architecture-in-200"},"Architecture in 2.0.0"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/apache/apisix-ingress-controller/v2.0.0/docs/assets/images/upgrade-to-architecture.png",alt:"upgrade to 2.0.0 architecture"})),(0,r.kt)("h5",{id:"mock-etcd-mode-deprecated"},"Mock-ETCD Mode Deprecated"),(0,r.kt)("p",null,"The mock-etcd architecture is no longer supported. This mode introduced significant reliability issues: stateless ingress controllers could not persist revision metadata, leading to memory pollution in the data plane and data inconsistencies."),(0,r.kt)("p",null,"The following configuration block has been removed:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'etcdserver:\n  enabled: false\n  listen_address: ":12379"\n  prefix: /apisix\n  ssl_key_encrypt_salt: edd1c9f0985e76a2\n')),(0,r.kt)("h5",{id:"controller-only-configuration-source"},"Controller-Only Configuration Source"),(0,r.kt)("p",null,"Starting with APISIX Ingress Controller 2.0.0, the controller is the single source of truth. Manual Admin API changes will be overwritten on the next full sync. The prior approach, which allowed controller-managed and manually added configurations to coexist, was incorrect and is now deprecated."),(0,r.kt)("h4",{id:"apisix-with-etcd-admin-api-synchronization-performance"},"APISIX With Etcd (Admin API) synchronization performance"),(0,r.kt)("p",null,"In APISIX Ingress Controller 2.0.0, ADC performs scheduled resource synchronization by comparing resources against the admin API response."),(0,r.kt)("p",null,"Because the Admin API fills in default values, the submitted content may differ from the returned result. This breaks the diff, triggering full updates to data plane resources, causing cache invalidation and significant performance impact."),(0,r.kt)("h3",{id:"ingress-configuration-changes"},"Ingress Configuration Changes"),(0,r.kt)("h4",{id:"configuration-path-changes"},"Configuration Path Changes"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Old Path"),(0,r.kt)("th",{parentName:"tr",align:null},"New Path"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"kubernetes.election_id")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"leader_election_id"))))),(0,r.kt)("h4",{id:"removed-configuration-fields"},"Removed Configuration Fields"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Configuration Path"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"kubernetes.*")),(0,r.kt)("td",{parentName:"tr",align:null},"Multi-namespace control / sync interval")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"plugin_metadata_cm")),(0,r.kt)("td",{parentName:"tr",align:null},"Plugin metadata ConfigMap")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"log_rotation_*")),(0,r.kt)("td",{parentName:"tr",align:null},"Log rotation settings")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"apisix.*")),(0,r.kt)("td",{parentName:"tr",align:null},"Static Admin API configuration")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"etcdserver.*")),(0,r.kt)("td",{parentName:"tr",align:null},"Configuration for mock-etcd (deprecated)")))),(0,r.kt)("h4",{id:"example-legacy-configuration-removed-in-200"},"Example: Legacy Configuration Removed in 2.0.0"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'apisix:\n  admin_api_version: v3\n  default_cluster_base_url: "http://127.0.0.1:9180/apisix/admin"\n  default_cluster_admin_key: ""\n  default_cluster_name: "default"\n')),(0,r.kt)("h4",{id:"new-configuration-via-gatewayproxy-crd"},"New Configuration via ",(0,r.kt)("inlineCode",{parentName:"h4"},"GatewayProxy")," CRD"),(0,r.kt)("p",null,"From version 2.0.0, the data plane must be connected via the ",(0,r.kt)("inlineCode",{parentName:"p"},"GatewayProxy")," CRD:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: networking.k8s.io/v1\nkind: IngressClass\nmetadata:\n  namespace: ingress-apisix\n  name: apisix\nspec:\n  controller: "apisix.apache.org/apisix-ingress-controller"\n  parameters:\n    apiGroup: "apisix.apache.org"\n    kind: "GatewayProxy"\n    name: "apisix-proxy-config"\n    namespace: "default"\n    scope: "Namespace"\n---\napiVersion: apisix.apache.org/v1alpha1\nkind: GatewayProxy\nmetadata:\n  namespace: ingress-apisix\n  name: apisix-proxy-config\nspec:\n  provider:\n    type: ControlPlane\n    controlPlane:\n      endpoints:\n      - https://127.0.0.1:9180\n      auth:\n        type: AdminKey\n        adminKey:\n          value: ""\n')),(0,r.kt)("h3",{id:"api-changes"},"API Changes"),(0,r.kt)("h4",{id:"apisixclusterconfig"},(0,r.kt)("inlineCode",{parentName:"h4"},"ApisixClusterConfig")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"ApisixClusterConfig")," CRD has been removed in 2.0.0. global rules and configurations should now be managed through the ",(0,r.kt)("inlineCode",{parentName:"p"},"ApisixGlobalRule")," CRDs."),(0,r.kt)("h4",{id:"apisixconsumer---hmac-auth"},(0,r.kt)("inlineCode",{parentName:"h4"},"ApisixConsumer")," - ",(0,r.kt)("inlineCode",{parentName:"h4"},"hmac-auth")),(0,r.kt)("p",null,"In apisix >= 3.11, most of the hmac-auth related configuration has been deprecated from consumer and moved to service/route level. The name of a ",(0,r.kt)("inlineCode",{parentName:"p"},"required")," field has also been changed from ",(0,r.kt)("inlineCode",{parentName:"p"},"access_key")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"key_id"),". If you have ApisixConsumer configuration with hmac-auth plugin compatible with <3.11, they will not be compatible with newer versions of APISIX. Since all 3+ versions of apisix are supported by ingress controller, if you dont upgrade APISIX, you don't need to change your ApisixConsumer configuration. But when using >3.11, pass all configurations other than ",(0,r.kt)("inlineCode",{parentName:"p"},"key_id"),"(previously ",(0,r.kt)("inlineCode",{parentName:"p"},"access_key"),") via PluginConfig or ApisixRoute."),(0,r.kt)("h4",{id:"ingress"},"Ingress"),(0,r.kt)("h5",{id:"api-version-support"},"API Version Support"),(0,r.kt)("p",null,"Currently supports networking.k8s.io/v1 only. Support for other Ingress API versions (networking.k8s.io/v1beta1 and extensions/v1beta1) is not yet available in 2.0.0."),(0,r.kt)("h5",{id:"limited-support-for-ingress-annotations"},"Limited Support for Ingress Annotations"),(0,r.kt)("p",null,"The following Ingress annotations supported in version 1.x.x are not supported in the current version (2.0.0-rc*). They will be supported in the 2.0.0 final release. If your existing setup relies on any of the following annotations, validate compatibility or consider delaying the upgrade."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Ingress Annotations"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"k8s.apisix.apache.org/use-regex"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"k8s.apisix.apache.org/enable-websocket"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"k8s.apisix.apache.org/plugin-config-name"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"k8s.apisix.apache.org/upstream-scheme"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"k8s.apisix.apache.org/upstream-retries"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"k8s.apisix.apache.org/upstream-connect-timeout"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"k8s.apisix.apache.org/upstream-read-timeout"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"k8s.apisix.apache.org/upstream-send-timeout"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"k8s.apisix.apache.org/enable-cors"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"k8s.apisix.apache.org/cors-allow-origin"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"k8s.apisix.apache.org/cors-allow-headers"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"k8s.apisix.apache.org/cors-allow-methods"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"k8s.apisix.apache.org/enable-csrf"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"k8s.apisix.apache.org/csrf-key"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"k8s.apisix.apache.org/http-to-https"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"k8s.apisix.apache.org/http-redirect"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"k8s.apisix.apache.org/http-redirect-code"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"k8s.apisix.apache.org/rewrite-target"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"k8s.apisix.apache.org/rewrite-target-regex"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"k8s.apisix.apache.org/rewrite-target-regex-template"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"k8s.apisix.apache.org/enable-response-rewrite"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"k8s.apisix.apache.org/response-rewrite-status-code"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"k8s.apisix.apache.org/response-rewrite-body"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"k8s.apisix.apache.org/response-rewrite-body-base64"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"k8s.apisix.apache.org/response-rewrite-add-header"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"k8s.apisix.apache.org/response-rewrite-set-header"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"k8s.apisix.apache.org/response-rewrite-remove-header"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"k8s.apisix.apache.org/auth-uri"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"k8s.apisix.apache.org/auth-ssl-verify"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"k8s.apisix.apache.org/auth-request-headers"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"k8s.apisix.apache.org/auth-upstream-headers"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"k8s.apisix.apache.org/auth-client-headers"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"k8s.apisix.apache.org/allowlist-source-range"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"k8s.apisix.apache.org/blocklist-source-range"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"k8s.apisix.apache.org/http-allow-methods"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"k8s.apisix.apache.org/http-block-methods"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"k8s.apisix.apache.org/auth-type"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"k8s.apisix.apache.org/svc-namespace"))))),(0,r.kt)("h3",{id:"summary"},"Summary"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Category"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Architecture"),(0,r.kt)("td",{parentName:"tr",align:null},"The ",(0,r.kt)("inlineCode",{parentName:"td"},"mock-etcd")," component has been removed. Configuration is now centralized through the Controller.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Configuration"),(0,r.kt)("td",{parentName:"tr",align:null},"Static configuration fields have been removed. Use ",(0,r.kt)("inlineCode",{parentName:"td"},"GatewayProxy")," CRD to configure the data plane.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Data Plane"),(0,r.kt)("td",{parentName:"tr",align:null},"The Admin API configuration method is still supported. Support for the Standalone API-driven mode was introduced in APISIX 3.13.0 and later.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"API"),(0,r.kt)("td",{parentName:"tr",align:null},"Some fields in ",(0,r.kt)("inlineCode",{parentName:"td"},"Ingress Annotations")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"ApisixUpstream")," are not yet supported.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Upgrade Strategy"),(0,r.kt)("td",{parentName:"tr",align:null},"Blue-green deployment or canary release is recommended before full switchover.")))))}s.isMDXComponent=!0}}]);