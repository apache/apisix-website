"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[45171],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(n),m=a,h=u["".concat(l,".").concat(m)]||u[m]||d[m]||o;return n?r.createElement(h,i(i({ref:t},c),{},{components:n})):r.createElement(h,i({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},15771:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var r=n(87462),a=(n(67294),n(3905));const o={title:"Route",keywords:["API Gateway","Apache APISIX","Route"],description:"This article describes the concept of Route and how to use it."},i=void 0,s={unversionedId:"terminology/route",id:"terminology/route",isDocsHomePage:!1,title:"Route",description:"This article describes the concept of Route and how to use it.",source:"@site/docs/apisix/terminology/route.md",sourceDirName:"terminology",slug:"/terminology/route",permalink:"/docs/apisix/next/terminology/route",editUrl:"/edit#https://github.com/apache/apisix/edit/master/docs/en/latest/terminology/route.md",tags:[],version:"current",frontMatter:{title:"Route",keywords:["API Gateway","Apache APISIX","Route"],description:"This article describes the concept of Route and how to use it."},sidebar:"docs",previous:{title:"Plugin Metadata",permalink:"/docs/apisix/next/terminology/plugin-metadata"},next:{title:"Router",permalink:"/docs/apisix/next/terminology/router"}},l=[{value:"Description",id:"description",children:[]},{value:"Example",id:"example",children:[]},{value:"Configuration",id:"configuration",children:[]}],p={toc:l};function c(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"description"},"Description"),(0,a.kt)("p",null,"Routes match the client's request based on defined rules, load and execute the corresponding ",(0,a.kt)("a",{parentName:"p",href:"/docs/apisix/next/terminology/plugin"},"plugins"),", and forwards the request to the specified ",(0,a.kt)("a",{parentName:"p",href:"/docs/apisix/next/terminology/upstream"},"Upstream"),"."),(0,a.kt)("p",null,"A Route mainly consists of three parts:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Matching rules (",(0,a.kt)("inlineCode",{parentName:"li"},"uri"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"host"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"remote address"),")"),(0,a.kt)("li",{parentName:"ol"},"Plugin configuration (current-limit, rate-limit)"),(0,a.kt)("li",{parentName:"ol"},"Upstream information")),(0,a.kt)("p",null,"The image below shows some example Route rules. Note that the values are of the same color if they are identical."),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/apache/apisix/master/docs/assets/images/routes-example.png",alt:"routes-example"})),(0,a.kt)("p",null,"All the parameters are configured directly in the Route. It is easy to set up, and each Route has a high degree of freedom."),(0,a.kt)("p",null,"When Routes have repetitive configurations (say, enabling the same plugin configuration or Upstream information), to update it, we need to traverse all the Routes and modify them. This adds a lot of complexity, making it difficult to maintain."),(0,a.kt)("p",null,"These shortcomings are independently abstracted in APISIX by two concepts: ",(0,a.kt)("a",{parentName:"p",href:"/docs/apisix/next/terminology/service"},"Service")," and ",(0,a.kt)("a",{parentName:"p",href:"/docs/apisix/next/terminology/upstream"},"Upstream"),"."),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)("p",null,"The Route example shown below proxies the request with the URL ",(0,a.kt)("inlineCode",{parentName:"p"},"/index.html")," to the Upstream service with the address ",(0,a.kt)("inlineCode",{parentName:"p"},"127.0.0.1:1980"),"."),(0,a.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"You can fetch the ",(0,a.kt)("inlineCode",{parentName:"p"},"admin_key")," from ",(0,a.kt)("inlineCode",{parentName:"p"},"config.yaml")," and save to an environment variable with the following command:"),(0,a.kt)("pre",{parentName:"div"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"admin_key=$(yq '.deployment.admin.admin_key[0].key' conf/config.yaml | sed 's/\"//g')\n")))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'curl http://127.0.0.1:9180/apisix/admin/routes/1 \\\n-H "X-API-KEY: $admin_key" -X PUT -i -d \'\n{\n    "uri": "/index.html",\n    "upstream": {\n        "type": "roundrobin",\n        "nodes": {\n            "127.0.0.1:1980": 1\n        }\n    }\n}\'\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'HTTP/1.1 201 Created\nDate: Sat, 31 Aug 2019 01:17:15 GMT\nContent-Type: text/plain\nTransfer-Encoding: chunked\nConnection: keep-alive\nServer: APISIX web server\n\n{"node":{"value":{"uri":"\\/index.html","upstream":{"nodes":{"127.0.0.1:1980":1},"type":"roundrobin"}},"createdIndex":61925,"key":"\\/apisix\\/routes\\/1","modifiedIndex":61925}}\n')),(0,a.kt)("p",null,"A successful response indicates that the route was created."),(0,a.kt)("h2",{id:"configuration"},"Configuration"),(0,a.kt)("p",null,"For specific options of Route, please refer to the ",(0,a.kt)("a",{parentName:"p",href:"/docs/apisix/next/admin-api#route"},"Admin API"),"."))}c.isMDXComponent=!0}}]);