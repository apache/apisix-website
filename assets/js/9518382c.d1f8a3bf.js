"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[61069],{35318:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>h});var a=r(27378);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),m=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=m(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=m(r),h=n,d=c["".concat(s,".").concat(h)]||c[h]||u[h]||o;return r?a.createElement(d,i(i({ref:t},p),{},{components:r})):a.createElement(d,i({ref:t},p))}));function h(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:n,i[1]=l;for(var m=2;m<o;m++)i[m]=r[m];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}c.displayName="MDXCreateElement"},90017:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>m});var a=r(25773),n=(r(27378),r(35318));const o={title:"Dynamic watermarking with imgproxy and Apache APISIX",authors:[{name:"Nicolas Fr\xe4nkel",title:"Author",url:"https://github.com/nfrankel",image_url:"https://avatars.githubusercontent.com/u/752258"}],keywords:["APISIX","watermarking","image processing","imgproxy"],description:"Last week, I described how to add a dynamic watermark to your images on the JVM. I didn't find any library, so I had to develop the feature, or, more precisely, an embryo of a feature, by myself. Depending on your tech stack, you must search for an existing library or roll up your sleeves. For example, Rust offers such an out-of-the-box library. Worse, this approach might be impossible to implement if you don't have access to the source image. Another alternative is to use ready-made components, namely imgproxy and Apache APISIX. I already combined them to resize images on-the-fly.\n",tags:["Ecosystem"],image:"https://static.apiseven.com/uploads/2024/07/04/j2xS06dA_faucet-1684902.jpg"},i=void 0,l={permalink:"/blog/2024/07/11/watermarking-infrastructure",source:"@site/blog/2024/07/11/watermarking-infrastructure.md",title:"Dynamic watermarking with imgproxy and Apache APISIX",description:"Last week, I described how to add a dynamic watermark to your images on the JVM. I didn't find any library, so I had to develop the feature, or, more precisely, an embryo of a feature, by myself. Depending on your tech stack, you must search for an existing library or roll up your sleeves. For example, Rust offers such an out-of-the-box library. Worse, this approach might be impossible to implement if you don't have access to the source image. Another alternative is to use ready-made components, namely imgproxy and Apache APISIX. I already combined them to resize images on-the-fly.\n",date:"2024-07-11T00:00:00.000Z",formattedDate:"July 11, 2024",tags:[{label:"Ecosystem",permalink:"/blog/tags/ecosystem"}],readingTime:1.685,truncated:!0,authors:[{name:"Nicolas Fr\xe4nkel",title:"Author",url:"https://github.com/nfrankel",image_url:"https://avatars.githubusercontent.com/u/752258",imageURL:"https://avatars.githubusercontent.com/u/752258"}],prevItem:{title:"Advanced URL rewriting with Apache APISIX",permalink:"/blog/2024/07/18/advanced-url-rewrite-apisix"},nextItem:{title:"Monthly Report (June 01 - June 30)",permalink:"/blog/2024/06/30/monthly-report"}},s={authorsImageUrls:[void 0]},m=[],p={toc:m};function u(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("head",null,(0,n.kt)("link",{rel:"canonical",href:"https://blog.frankel.ch/dynamic-watermarking/2/"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Last week, I described ",(0,n.kt)("a",{parentName:"p",href:"https://blog.frankel.ch/dynamic-watermarking/1/"},"how to add a dynamic watermark to your images on the JVM"),". I didn't find any library, so I had to develop the feature, or, more precisely, an embryo of a feature, by myself. Depending on your tech stack, you must search for an existing library or roll up your sleeves. For example, Rust offers such an out-of-the-box library. Worse, this approach might be impossible to implement if you don't have access to the source image."),(0,n.kt)("p",{parentName:"blockquote"},"Another alternative is to use ready-made components, namely ",(0,n.kt)("a",{parentName:"p",href:"https://imgproxy.net/"},"imgproxy")," and ",(0,n.kt)("a",{parentName:"p",href:"https://apisix.apache.org/"},"Apache APISIX"),". I already combined them to ",(0,n.kt)("a",{parentName:"p",href:"https://blog.frankel.ch/resize-images-on-the-fly/"},"resize images on-the-fly"),".")),(0,n.kt)("p",null,"Here's the general sequence flow of the process:"),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://static.apiseven.com/uploads/2024/07/04/E1AzirzN_watermark_sequence_diagram.png",alt:"Watermark sequence diagram"})),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"When APISIX receives a specific pattern, it calls ",(0,n.kt)("inlineCode",{parentName:"li"},"imgproxy")," with the relevant parameters"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"imgproxy")," fetches the original image and the watermark to apply"),(0,n.kt)("li",{parentName:"ul"},"It watermarks the original image and returns the result to APISIX")),(0,n.kt)("p",null,"Let's say the pattern is ",(0,n.kt)("inlineCode",{parentName:"p"},"/watermark/*"),"."),(0,n.kt)("p",null,"We can define two routes:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-yaml"},'routes:\n  - uri: "*"                                                                     #1\n    upstream:\n      nodes:\n        "server:3000": 1\n  - uri: /watermark/*                                                            #2\n    plugins:\n      proxy-rewrite:                                                             #3\n        regex_uri:\n          - /watermark/(.*)\n          - /dummy_sig/watermark:0.8:nowe:20:20:0.2/plain/http://server:3000/$1  #4\n    upstream:\n      nodes:\n        "imgproxy:8080": 1                                                       #5\n')),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Catch-all route that forwards to the web server"),(0,n.kt)("li",{parentName:"ol"},"Watermark images route"),(0,n.kt)("li",{parentName:"ol"},"Rewrite the URL..."),(0,n.kt)("li",{parentName:"ol"},"...with an ",(0,n.kt)("inlineCode",{parentName:"li"},"imgproxy"),"-configured route and..."),(0,n.kt)("li",{parentName:"ol"},"...forward to ",(0,n.kt)("inlineCode",{parentName:"li"},"imageproxy"))),(0,n.kt)("p",null,"You can find the exact rewritten URL syntax in ",(0,n.kt)("a",{parentName:"p",href:"https://docs.imgproxy.net/features/watermark"},"imgproxy")," documentation. The watermark itself is configured via a single environment variable. You should buy ",(0,n.kt)("inlineCode",{parentName:"p"},"imgproxy"),"'s Pro version if you need different watermarks. As a poor man's alternative, you could also set up different instances, each with its watermark, and configure APISIX to route the request to the desired instance."),(0,n.kt)("p",null,"In this post, we implemented a watermarking feature with the help of ",(0,n.kt)("inlineCode",{parentName:"p"},"imgproxy"),". The more I think about it, the more I think they make a match made in Heaven."),(0,n.kt)("p",null,"The complete source code for this post can be found on ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/ajavageek/watermark-on-the-fly"},"GitHub"),"."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"To go further:")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Digital_watermarking"},"Digital watermarking")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://docs.imgproxy.net/"},"imgproxy documentation")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://imgproxy.net/"},"imgproxy interactive demo"))))}u.isMDXComponent=!0}}]);