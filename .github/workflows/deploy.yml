# This is a basic workflow to help you get started with Actions

name: Test and Deploy Website

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  schedule:
    # Run everyday at 9:00 AM (See https://pubs.opengroup.org/onlinepubs/9699919799/utilities/crontab.html#tag_20_25_07)
    - cron: "0 5 * * *"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3.0.1
      - uses: actions/setup-node@v3
        with:
          node-version: "14"

      - name: Get node version
        id: node-version
        run: |
          echo "::set-output name=ver::$(node --version)"

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Cache install
        uses: actions/cache@v3
        with:
          path: ./node_modules
          key: ${{ runner.os }}-dep-${{ steps.node-version.outputs.ver }}-${{ hashFiles('**/yarn.lock') }}

      - name: Install Dependencies
        run: |
          yarn install

      - name: Sync documents
        run: |
          yarn sync-doc && yarn generate-repos-info && git status

      - name: Apply docusaurus cache
        id: docusaurus-cache
        uses: actions/cache@v3
        with:
          path: |
            ./website/.docusaurus
            ./website/build
          key: ${{ runner.os }}-dep-${{ steps.node-version.outputs.ver }}-${{ hashFiles('./website/docs/apisix/**') }}

      - name: Build
        run: |
          yarn build && cp ./.asf.yaml ./website/build

      - name: Update sitemap.xml
        run: |
          yarn update-sitemap && git status

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3.8.0
        if: github.event_name == 'push' && github.ref == 'refs/heads/master' || github.event_name == 'schedule'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: website/build
          publish_branch: asf-site
          force_orphan: true
