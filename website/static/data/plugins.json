[
  {
    "groupName": "authentication",
    "plugins": [
      {
        "name": "authz-casbin",
        "description": "An authorization plugin based on Lua Casbin supporting various access control models"
      },
      {
        "name": "authz-keycloak",
        "description": "An authorization plugin to be used with the Keycloak Identity Server"
      },
      {
        "name": "basic-auth",
        "description": "An authentication plugin that need to work with consumer to add Basic Authentication to a Service or a Route"
      },
      {
        "name": "hmac-auth",
        "description": "An authentication plugin that need to work with consumer to establish the integrity of incoming requests"
      },
      {
        "name": "jwt-auth",
        "description": "An authentication plugin that need to work with consumer to securely authenticate a valid user requesting access"
      },
      {
        "name": "key-auth",
        "description": "An authentication plugin that need to work with consumer to add key authentication to your Services"
      },
      {
        "name": "openid-connect",
        "description": "An authentication plugin that provides authentication and introspection capability to APISIX"
      }
    ]
  },
  {
    "groupName": "security",
    "plugins": [
      {
        "name": "api-breaker",
        "description": "The plugin implements API fuse functionality to help us protect our upstream business services"
      },
      {
        "name": "consumer-restriction",
        "description": "The plugin makes corresponding access restrictions based on different objects selected"
      },
      {
        "name": "cors",
        "description": "The plugin can help you enable CORS easily"
      },
      {
        "name": "fault-injection",
        "description": "The plugin provides the ability to deliberately cause a service to fail, in order to test failure in a complex distributed solution"
      },
      {
        "name": "ip-restriction",
        "description": "The ip-restriction can restrict access to a Service or a Route by either whitelisting or blacklisting IP addresses"
      },
      {
        "name": "referer-restriction",
        "description": "The referer-restriction can restrict access to a Service or a Route by whitelisting request header Referrers"
      },
      {
        "name": "request-validation",
        "description": "The request-validation plugin validates the requests before forwarding to an upstream service"
      },
      {
        "name": "uri-blocker",
        "description": "The plugin helps to intercept user requests"
      },
      {
        "name": "CSRF",
        "description": "Based on the Double Submit Cookie way, protect your API from CSRF attacks",
        "beta": true
      }
    ]
  },
  {
    "groupName": "Traffic Control",
    "plugins": [
      {
        "name": "limit-conn",
        "description": "The plugin  Limits request concurrency"
      },
      {
        "name": "limit-count",
        "description": "The plugin Limits request rate by a fixed number of requests in a given time window"
      },
      {
        "name": "limit-req",
        "description": "The plugin limits request rate using the eaky bucket method"
      },
      {
        "name": "traffic-split",
        "description": "The traffic split plugin allows users to incrementally direct percentages of traffic between various upstreams"
      }
    ]
  },
  {
    "groupName": "Serverless",
    "plugins": [
      {
        "name": "serverless-pre-function",
        "description": "The serverless-pre-function runs at the beginning of the specified phase"
      },
      {
        "name": "serverless-post-function",
        "description": "The serverless-post-function runs at the end of the specified phase"
      }
    ]
  },
  {
    "groupName": "Observability",
    "plugins": [
      {
        "name": "error-log-logger",
        "description": "Error-log-logger is a plugin which pushes the log data of APISIX's error.log to TCP servers"
      },
      {
        "name": "http-logger",
        "description": "Http-logger is a plugin which push Log data requests to HTTP/HTTPS servers"
      },
      {
        "name": "kafka-logger",
        "description": "Kafka-logger is a plugin which works as a Kafka client driver for the ngx_lua nginx module"
      },
      {
        "name": "prometheus",
        "description": "The plugin exposes metrics in Prometheus Exposition format"
      },
      {
        "name": "request-id",
        "description": "The plugin adds a unique ID (UUID) to each request proxied through APISIX"
      },
      {
        "name": "skywalking",
        "description": "Skywalking uses its native Nginx LUA tracer to provide tracing, topology analysis, and metrics from service and URI perspective"
      },
      {
        "name": "sls-logger",
        "description": "Sls-logger pushes Log data requests to ali cloud Log Server with RF5424"
      },
      {
        "name": "syslog",
        "description": "Sys pushes Log data requests to Syslog"
      },
      {
        "name": "tcp-logger",
        "description": "Tcp-logger pushes Log data requests to TCP servers"
      },
      {
        "name": "udp-logger",
        "description": "Udp-logger pushes Log data requests to UDP servers"
      },
      {
        "name": "zipkin",
        "description": "Zipkin is a OpenTracing plugin"
      },
      {
        "name": "datadog",
        "description": "Datadog is a monitoring plugin built into Apache APISIX to push metrics of different services into DatadogHQ via a locally run Datadog agent."
      },
      {
        "name": "google-cloud-logging",
        "description": "google-cloud-logging plugin is used to send the access log of Apache APISIX to the Google Cloud Logging Service."
      }
    ]
  },
  {
    "groupName": "other",
    "plugins": [
      {
        "name": "batch-requests",
        "description": "Batch-requests accepts multiple request and send them from apisix via http pipeline"
      },
      {
        "name": "grpc-transcode",
        "description": "Grpc-transcoding involves mapping HTTP/JSON requests and their parameters to gRPC methods and their parameters and return types"
      },
      {
        "name": "proxy-cache",
        "description": "The proxy-cache plugin provides the ability to cache upstream response data and can be used with other plugins"
      },
      {
        "name": "proxy-mirror",
        "description": "The proxy-mirror plugin provides the ability to mirror client requests"
      },
      {
        "name": "proxy-rewrite",
        "description": "The proxy-rewrite is an upstream proxy information rewriting plugin"
      },
      {
        "name": "response-rewrite",
        "description": "Response-rewrite rewrites the content returned by the upstream as well as Apache APISIX itself"
      },
      {
        "name": "wolf-rbac",
        "description": "Wolf-rbac is an authentication and authorization (rbac) plugin where the rbac feature is provided by wolf"
      },
      {
        "name": "client-control",
        "description": "The client-control plugin dynamically controls the behavior of Nginx to handle the client request",
        "useDefaultIcon": true
      },
      {
        "name": "ext-plugin-pre-req",
        "description": "The ext-plugin-pre-req runs specific external plugins in the plugin runner, before executing most of the builtin Lua plugins",
        "useDefaultIcon": true
      },
      {
        "name": "ext-plugin-post-req",
        "description": "The ext-plugin-post-req runs after executing builtin Lua plugins and before proxying to the upstream",
        "useDefaultIcon": true
      }
    ]
  }
]
