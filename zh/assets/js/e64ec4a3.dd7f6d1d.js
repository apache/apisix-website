"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[25010],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>h});var n=r(67294);function s(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){s(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,s=function(e,t){if(null==e)return{};var r,n,s={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(s[r]=e[r]);return s}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(s[r]=e[r])}return s}var l=n.createContext({}),u=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=u(e.components);return n.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var r=e.components,s=e.mdxType,i=e.originalType,l=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),g=u(r),h=s,d=g["".concat(l,".").concat(h)]||g[h]||c[h]||i;return r?n.createElement(d,o(o({ref:t},p),{},{components:r})):n.createElement(d,o({ref:t},p))}));function h(e,t){var r=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var i=r.length,o=new Array(i);o[0]=g;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a.mdxType="string"==typeof e?e:s,o[1]=a;for(var u=2;u<i;u++)o[u]=r[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}g.displayName="MDXCreateElement"},33686:(e,t,r)=>{r.r(t),r.d(t,{contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>a,toc:()=>l});var n=r(87462),s=(r(67294),r(3905));const i={title:"Configuring Ingress with Kubernetes Ingress resource",keywords:["APISIX ingress","Apache APISIX","Kubernetes Ingress"],description:"A tutorial on configuring Ingress using the default Kubernetes Ingress resource."},o=void 0,a={unversionedId:"tutorials/proxy-the-httpbin-service-with-ingress",id:"version-1.7.0/tutorials/proxy-the-httpbin-service-with-ingress",isDocsHomePage:!1,title:"Configuring Ingress with Kubernetes Ingress resource",description:"A tutorial on configuring Ingress using the default Kubernetes Ingress resource.",source:"@site/docs-apisix-ingress-controller_versioned_docs/version-1.7.0/tutorials/proxy-the-httpbin-service-with-ingress.md",sourceDirName:"tutorials",slug:"/tutorials/proxy-the-httpbin-service-with-ingress",permalink:"/zh/docs/ingress-controller/1.7.0/tutorials/proxy-the-httpbin-service-with-ingress",editUrl:"/zh/edit#https://github.com/apache/apisix-ingress-controller/edit/v1.7.0/docs/zh/latest/tutorials/proxy-the-httpbin-service-with-ingress.md",tags:[],version:"1.7.0",frontMatter:{title:"Configuring Ingress with Kubernetes Ingress resource",keywords:["APISIX ingress","Apache APISIX","Kubernetes Ingress"],description:"A tutorial on configuring Ingress using the default Kubernetes Ingress resource."},sidebar:"version-1.7.0/docs",previous:{title:"Install APISIX Ingress with Kubernetes manifest files",permalink:"/zh/docs/ingress-controller/1.7.0/tutorials/the-hard-way"},next:{title:"Configuring Ingress with Kubernetes Gateway API",permalink:"/zh/docs/ingress-controller/1.7.0/tutorials/configure-ingress-with-gateway-api"}},l=[{value:"Prerequisites",id:"prerequisites",children:[]},{value:"Deploy httpbin",id:"deploy-httpbin",children:[]},{value:"Configuring Ingress",id:"configuring-ingress",children:[]},{value:"Test the created Routes",id:"test-the-created-routes",children:[]}],u={toc:l};function p(e){let{components:t,...r}=e;return(0,s.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"This tutorial will walk you through on how you can configure APISIX Ingress with the ",(0,s.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/concepts/services-networking/ingress/"},"default Kubernetes Ingress resource"),"."),(0,s.kt)("p",null,"Also see:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://apisix.apache.org/docs/ingress-controller/tutorials/configure-ingress-with-gateway-api"},"Configuring Ingress with Kubernetes Gateway API")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://apisix.apache.org/docs/ingress-controller/tutorials/proxy-the-httpbin-service"},"Configuring Ingress with APISIX CRDs"))),(0,s.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,s.kt)("p",null,"Before you move on, make sure you:"),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},"Have access to a Kubernetes cluster. This tutorial uses ",(0,s.kt)("a",{parentName:"li",href:"https://github.com/kubernetes/minikube"},"minikube"),"."),(0,s.kt)("li",{parentName:"ol"},"Install APISIX Ingress. See the ",(0,s.kt)("a",{parentName:"li",href:"https://apisix.apache.org/docs/ingress-controller/deployments/minikube"},"Installation")," section.")),(0,s.kt)("h2",{id:"deploy-httpbin"},"Deploy httpbin"),(0,s.kt)("p",null,"We will deploy a sample service, ",(0,s.kt)("a",{parentName:"p",href:"https://hub.docker.com/r/kennethreitz/httpbin/"},"kennethreitz/httpbin"),", for this tutorial."),(0,s.kt)("p",null,"You can deploy it to your Kubernetes cluster by running:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl run httpbin --image kennethreitz/httpbin --port 80\nkubectl expose pod httpbin --port 80\n")),(0,s.kt)("h2",{id:"configuring-ingress"},"Configuring Ingress"),(0,s.kt)("p",null,"We can use the ",(0,s.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/concepts/services-networking/ingress/#the-ingress-resource"},"default Kubernetes Ingress resource")," to configure APISIX Ingress. The example below shows a sample configuration that creates a Route to the httpbin service:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="httpbin-ingress.yaml"',title:'"httpbin-ingress.yaml"'},'# use v1beta1 if your Kubernetes cluster version is older than v1.19.0\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: httpserver-ingress\nspec:\n  # we use APISIX Ingress and it watches Ingress resources with "apisix" ingressClassName\n  ingressClassName: apisix\n  rules:\n  - host: local.httpbin.org\n    http:\n      paths:\n      - backend:\n          service:\n            name: httpbin\n            port:\n              number: 80\n        path: /\n        pathType: Prefix\n')),(0,s.kt)("p",null,"This configuration will route all requests with host ",(0,s.kt)("inlineCode",{parentName:"p"},"local.httpbin.org")," to the httpbin service."),(0,s.kt)("p",null,"You can apply it by running:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -f httpbin-ingress.yaml\n")),(0,s.kt)("h2",{id:"test-the-created-routes"},"Test the created Routes"),(0,s.kt)("p",null,"If you followed along and used minikube and ",(0,s.kt)("inlineCode",{parentName:"p"},"NodePort")," service to expose APISIX, you can access it through the Node IP of the service ",(0,s.kt)("inlineCode",{parentName:"p"},"apisix-gateway"),". If the Node IP is not reachable directly (if you are on Darwin, Windows, or WSL), you can create a tunnel to access the service on your machine:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"minikube service apisix-gateway --url -n ingress-apisix\n")),(0,s.kt)("p",null,"Now, you can send a ",(0,s.kt)("inlineCode",{parentName:"p"},"GET")," request to the created Route and it will be Routed to the httpbin service:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},'curl --location --request GET "localhost:57687/get?foo1=bar1&foo2=bar2" -H "Host: local.httpbin.org"\n')),(0,s.kt)("p",null,"You will receive a response similar to:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="output"',title:'"output"'},'{\n  "args": {\n    "foo1": "bar1", \n    "foo2": "bar2"\n  }, \n  "headers": {\n    "Accept": "*/*", \n    "Host": "local.httpbin.org", \n    "User-Agent": "curl/7.84.0", \n    "X-Forwarded-Host": "local.httpbin.org"\n  }, \n  "origin": "172.17.0.1", \n  "url": "http://local.httpbin.org/get?foo1=bar1&foo2=bar2"\n}\n')))}p.isMDXComponent=!0}}]);