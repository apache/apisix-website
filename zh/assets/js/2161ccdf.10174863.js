"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[92923],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(n),d=r,g=m["".concat(l,".").concat(d)]||m[d]||u[d]||i;return n?a.createElement(g,o(o({ref:t},c),{},{components:n})):a.createElement(g,o({ref:t},c))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},11970:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>l,default:()=>m,frontMatter:()=>s,metadata:()=>p,toc:()=>c});var a=n(87462),r=(n(67294),n(3905)),i=n(55064),o=n(58215);const s={title:"Key Authentication",keywords:["APISIX ingress","Apache APISIX","Kubernetes ingress"],description:"Explore how to configure key authentication in APISIX using APISIX Ingress Controller, which implement access control to your APIs."},l=void 0,p={unversionedId:"getting-started/key-authentication",id:"version-2.0.0/getting-started/key-authentication",isDocsHomePage:!1,title:"Key Authentication",description:"Explore how to configure key authentication in APISIX using APISIX Ingress Controller, which implement access control to your APIs.",source:"@site/docs-apisix-ingress-controller_versioned_docs/version-2.0.0/getting-started/key-authentication.md",sourceDirName:"getting-started",slug:"/getting-started/key-authentication",permalink:"/zh/docs/ingress-controller/getting-started/key-authentication",editUrl:"/zh/edit#https://github.com/apache/apisix-ingress-controller/edit/v2.0.0/docs/zh/latest/getting-started/key-authentication.md",tags:[],version:"2.0.0",frontMatter:{title:"Key Authentication",keywords:["APISIX ingress","Apache APISIX","Kubernetes ingress"],description:"Explore how to configure key authentication in APISIX using APISIX Ingress Controller, which implement access control to your APIs."},sidebar:"version-2.0.0/docs",previous:{title:"Load Balancing",permalink:"/zh/docs/ingress-controller/getting-started/load-balancing"},next:{title:"Rate Limiting",permalink:"/zh/docs/ingress-controller/getting-started/rate-limiting"}},c=[{value:"Prerequisite",id:"prerequisite",children:[]},{value:"Configure Key Authentication",id:"configure-key-authentication",children:[]},{value:"Verify",id:"verify",children:[]}],u={toc:c};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"APISIX has a flexible plugin extension system and a number of existing plugins for user authentication and authorization."),(0,r.kt)("p",null,"In this tutorial, you will create a Consumer, configure its key authentication Credential, and enable key authentication on a route, using APISIX Ingress Controller."),(0,r.kt)("h2",{id:"prerequisite"},"Prerequisite"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Complete ",(0,r.kt)("a",{parentName:"li",href:"/zh/docs/ingress-controller/getting-started/get-apisix-ingress-controller"},"Get APISIX and APISIX Ingress Controller"),".")),(0,r.kt)("h2",{id:"configure-key-authentication"},"Configure Key Authentication"),(0,r.kt)("p",null,"For demonstration purpose, you will be creating a route to the ",(0,r.kt)("a",{parentName:"p",href:"https://httpbin.org"},"publicly hosted httpbin services"),". If you would like to proxy requests to services on Kubernetes, please modify accordingly."),(0,r.kt)("div",{className:"admonition admonition-important alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"important")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"If you are using Gateway API, you should first configure the GatewayClass and Gateway resources:"),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Show configuration"),(0,r.kt)("pre",{parentName:"div"},(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: gateway.networking.k8s.io/v1\nkind: GatewayClass\nmetadata:\n  namespace: ingress-apisix\n  name: apisix\nspec:\n  controllerName: apisix.apache.org/apisix-ingress-controller\n---\napiVersion: gateway.networking.k8s.io/v1\nkind: Gateway\nmetadata:\n  namespace: ingress-apisix\n  name: apisix\nspec:\n  gatewayClassName: apisix\n  listeners:\n  - name: http\n    protocol: HTTP\n    port: 80\n  infrastructure:\n    parametersRef:\n      group: apisix.apache.org\n      kind: GatewayProxy\n      name: apisix-config\n")),(0,r.kt)("p",{parentName:"div"},"Note that the ",(0,r.kt)("inlineCode",{parentName:"p"},"port")," in the Gateway listener is required but ignored. This is due to limitations in the data plane: it cannot dynamically open new ports. Since the Ingress Controller does not manage the data plane deployment, it cannot automatically update the configuration or restart the data plane to apply port changes.")),(0,r.kt)("p",{parentName:"div"},"If you are using Ingress or APISIX custom resources, you can proceed without additional configuration, as the IngressClass resource below is already applied with installation:"),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Show configuration"),(0,r.kt)("pre",{parentName:"div"},(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: networking.k8s.io/v1\nkind: IngressClass\nmetadata:\n  name: apisix\nspec:\n  controller: apisix.apache.org/apisix-ingress-controller\n  parameters:\n    apiGroup: apisix.apache.org\n    kind: GatewayProxy\n    name: apisix-config\n    namespace: ingress-apisix\n    scope: Namespace\n"))),(0,r.kt)("p",{parentName:"div"},"See ",(0,r.kt)("a",{parentName:"p",href:"/zh/docs/ingress-controller/reference/apisix-ingress-controller/examples#define-controller-and-gateway"},"Define Controller and Gateway")," for more information on parameters."))),(0,r.kt)(i.Z,{groupId:"k8s-api",defaultValue:"gateway-api",values:[{label:"Gateway API",value:"gateway-api"},{label:"APISIX CRD",value:"apisix-crd"}],mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"gateway-api",mdxType:"TabItem"},(0,r.kt)("p",null,"Create a Kubernetes manifest file to configure a consumer:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="consumer.yaml"',title:'"consumer.yaml"'},"apiVersion: apisix.apache.org/v1alpha1\nkind: Consumer\nmetadata:\n  namespace: ingress-apisix\n  name: tom\nspec:\n  gatewayRef:\n    name: apisix\n  credentials:\n    - type: key-auth\n      name: primary-key\n      config:\n        key: secret-key\n")),(0,r.kt)("p",null,"Create a Kubernetes manifest file to configure a route and enable key authentication:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="httpbin-route.yaml"',title:'"httpbin-route.yaml"'},"apiVersion: v1\nkind: Service\nmetadata:\n  namespace: ingress-apisix\n  name: httpbin-external-domain\nspec:\n  type: ExternalName\n  externalName: httpbin.org\n---\napiVersion: apisix.apache.org/v1alpha1\nkind: PluginConfig\nmetadata:\n  namespace: ingress-apisix\n  name: auth-plugin-config\nspec:\n  plugins:\n    - name: key-auth\n      config:\n        _meta:\n          disable: false\n---\napiVersion: gateway.networking.k8s.io/v1\nkind: HTTPRoute\nmetadata:\n  namespace: ingress-apisix\n  name: getting-started-ip\nspec:\n  parentRefs:\n  - name: apisix\n  rules:\n  - matches: \n    - path:\n        type: Exact\n        value: /ip\n    filters:\n    - type: ExtensionRef\n      extensionRef:\n        group: apisix.apache.org\n        kind: PluginConfig\n        name: auth-plugin-config\n    backendRefs:\n    - name: httpbin-external-domain\n      port: 80\n")),(0,r.kt)("p",null,"Apply the configurations to your cluster:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -f consumer.yaml -f httpbin-route.yaml\n"))),(0,r.kt)(o.Z,{value:"apisix-crd",mdxType:"TabItem"},(0,r.kt)("p",null,"Create a Kubernetes manifest file to configure a consumer:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="consumer.yaml"',title:'"consumer.yaml"'},"apiVersion: apisix.apache.org/v2\nkind: ApisixConsumer\nmetadata:\n  namespace: ingress-apisix\n  name: tom\nspec:\n  ingressClassName: apisix\n  authParameter:\n    keyAuth:\n      value:\n        key: secret-key\n")),(0,r.kt)("p",null,"Create a Kubernetes manifest file to configure a route and enable key authentication:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="httpbin-route.yaml"',title:'"httpbin-route.yaml"'},"apiVersion: apisix.apache.org/v2\nkind: ApisixUpstream\nmetadata:\n  namespace: ingress-apisix\n  name: httpbin-external-domain\nspec:\n  ingressClassName: apisix\n  externalNodes:\n  - type: Domain\n    name: httpbin.org\n---\napiVersion: apisix.apache.org/v2\nkind: ApisixRoute\nmetadata:\n  namespace: ingress-apisix\n  name: getting-started-ip\nspec:\n  ingressClassName: apisix\n  http:\n    - name: getting-started-ip\n      match:\n        paths:\n          - /ip\n      upstreams:\n      - name: httpbin-external-domain\n      authentication:\n        enable: true\n        type: keyAuth\n")),(0,r.kt)("p",null,"Apply the configurations to your cluster:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -f consumer.yaml -f httpbin-route.yaml\n")))),(0,r.kt)("h2",{id:"verify"},"Verify"),(0,r.kt)("p",null,"Expose the service port to your local machine by port forwarding:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl port-forward svc/apisix-gateway 9080:80 &\n")),(0,r.kt)("p",null,"Send a request without the ",(0,r.kt)("inlineCode",{parentName:"p"},"apikey")," header."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl -i "http://127.0.0.1:9080/ip"\n')),(0,r.kt)("p",null,"You should receive an an ",(0,r.kt)("inlineCode",{parentName:"p"},"HTTP/1.1 401 Unauthorized")," response."),(0,r.kt)("p",null,"Send a request with a wrong key in the ",(0,r.kt)("inlineCode",{parentName:"p"},"apikey")," header."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"curl -i \"http://127.0.0.1:9080/ip\" -H 'apikey: wrong-key'\n")),(0,r.kt)("p",null,"Since the key is incorrect, you should receive an ",(0,r.kt)("inlineCode",{parentName:"p"},"HTTP/1.1 401 Unauthorized")," response."),(0,r.kt)("p",null,"Send a request with the correct key in the ",(0,r.kt)("inlineCode",{parentName:"p"},"apikey")," header."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"curl -i \"http://127.0.0.1:9080/ip\" -H 'apikey: secret-key'\n")),(0,r.kt)("p",null,"You should receive an ",(0,r.kt)("inlineCode",{parentName:"p"},"HTTP/1.1 200 OK")," response."))}m.isMDXComponent=!0},58215:(e,t,n)=>{n.d(t,{Z:()=>r});var a=n(67294);const r=function(e){let{children:t,hidden:n,className:r}=e;return a.createElement("div",{role:"tabpanel",hidden:n,className:r},t)}},55064:(e,t,n)=>{n.d(t,{Z:()=>p});var a=n(67294),r=n(79443);const i=function(){const e=(0,a.useContext)(r.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e};var o=n(86010);const s="tabItem_vU9c",l="tabItemActive_cw6a";const p=function(e){var t;const{lazy:n,block:r,defaultValue:p,values:c,groupId:u,className:m}=e,d=a.Children.toArray(e.children),g=null!=c?c:d.map((e=>({value:e.props.value,label:e.props.label}))),h=null!=p?p:null==(t=d.find((e=>e.props.default)))?void 0:t.props.value,{tabGroupChoices:y,setTabGroupChoices:k}=i(),[f,v]=(0,a.useState)(h),b=[];if(null!=u){const e=y[u];null!=e&&e!==f&&g.some((t=>t.value===e))&&v(e)}const x=e=>{const t=e.currentTarget,n=b.indexOf(t),a=g[n].value;v(a),null!=u&&(k(u,a),setTimeout((()=>{(function(e){const{top:t,left:n,bottom:a,right:r}=e.getBoundingClientRect(),{innerHeight:i,innerWidth:o}=window;return t>=0&&r<=o&&a<=i&&n>=0})(t)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(l),setTimeout((()=>t.classList.remove(l)),2e3))}),150))},w=e=>{var t;let n=null;switch(e.key){case"ArrowRight":{const t=b.indexOf(e.target)+1;n=b[t]||b[0];break}case"ArrowLeft":{const t=b.indexOf(e.target)-1;n=b[t]||b[b.length-1];break}}null==(t=n)||t.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":r},m)},g.map((e=>{let{value:t,label:n}=e;return a.createElement("li",{role:"tab",tabIndex:f===t?0:-1,"aria-selected":f===t,className:(0,o.Z)("tabs__item",s,{"tabs__item--active":f===t}),key:t,ref:e=>b.push(e),onKeyDown:w,onFocus:x,onClick:x},null!=n?n:t)}))),n?(0,a.cloneElement)(d.filter((e=>e.props.value===f))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},d.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==f})))))}},79443:(e,t,n)=>{n.d(t,{Z:()=>a});const a=(0,n(67294).createContext)(void 0)},86010:(e,t,n)=>{function a(e){var t,n,r="";if("string"==typeof e||"number"==typeof e)r+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=a(e[t]))&&(r&&(r+=" "),r+=n);else for(t in e)e[t]&&(r&&(r+=" "),r+=t);return r}n.d(t,{Z:()=>r});const r=function(){for(var e,t,n=0,r="";n<arguments.length;)(e=arguments[n++])&&(t=a(e))&&(r&&(r+=" "),r+=t);return r}}}]);