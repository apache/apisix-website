"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[35472],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),m=p(n),d=r,g=m["".concat(l,".").concat(d)]||m[d]||u[d]||i;return n?a.createElement(g,s(s({ref:t},c),{},{components:n})):a.createElement(g,s({ref:t},c))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,s=new Array(i);s[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:r,s[1]=o;for(var p=2;p<i;p++)s[p]=n[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},33058:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>p,toc:()=>c});var a=n(87462),r=(n(67294),n(3905)),i=n(55064),s=n(58215);const o={title:"Configure Routes",keywords:["APISIX ingress","Apache APISIX","Kubernetes ingress"],description:"Learn how to create routes in APISIX using APISIX Ingress controller to forward client to upstream services."},l=void 0,p={unversionedId:"getting-started/configure-routes",id:"getting-started/configure-routes",isDocsHomePage:!1,title:"Configure Routes",description:"Learn how to create routes in APISIX using APISIX Ingress controller to forward client to upstream services.",source:"@site/docs/apisix-ingress-controller/getting-started/configure-routes.md",sourceDirName:"getting-started",slug:"/getting-started/configure-routes",permalink:"/zh/docs/ingress-controller/next/getting-started/configure-routes",editUrl:"/zh/edit#https://github.com/apache/apisix-ingress-controller/edit/master/docs/zh/latest/getting-started/configure-routes.md",tags:[],version:"current",frontMatter:{title:"Configure Routes",keywords:["APISIX ingress","Apache APISIX","Kubernetes ingress"],description:"Learn how to create routes in APISIX using APISIX Ingress controller to forward client to upstream services."},sidebar:"docs",previous:{title:"Get APISIX and APISIX Ingress Controller",permalink:"/zh/docs/ingress-controller/next/getting-started/get-apisix-ingress-controller"},next:{title:"Load Balancing",permalink:"/zh/docs/ingress-controller/next/getting-started/load-balancing"}},c=[{value:"Prerequisites",id:"prerequisites",children:[]},{value:"Set Up a Sample Upstream",id:"set-up-a-sample-upstream",children:[]},{value:"Configure a Route",id:"configure-a-route",children:[]},{value:"Verify",id:"verify",children:[]}],u={toc:c};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Apache APISIX provides flexible gateway management capabilities based on routes, in which routing paths and target upstreams are defined."),(0,r.kt)("p",null,"This tutorial guides you through creating a Route using the APISIX Ingress Controller and verifying its behavior. You\u2019ll configure a Route to a sample Upstream pointing to an httpbin service, then send a request to observe how APISIX proxies the traffic."),(0,r.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Complete ",(0,r.kt)("a",{parentName:"li",href:"/zh/docs/ingress-controller/next/getting-started/get-apisix-ingress-controller"},"Get APISIX and APISIX Ingress Controller"),".")),(0,r.kt)("h2",{id:"set-up-a-sample-upstream"},"Set Up a Sample Upstream"),(0,r.kt)("p",null,"Install the httpbin example application on the cluster to test the configuration:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl apply -f https://raw.githubusercontent.com/apache/apisix-ingress-controller/refs/heads/v2.0.0/examples/httpbin/deployment.yaml\n")),(0,r.kt)("h2",{id:"configure-a-route"},"Configure a Route"),(0,r.kt)("p",null,"In this section, you will create a Route that forwards client requests to the httpbin example application, an HTTP request and response service."),(0,r.kt)("p",null,"You can use either Gateway API, Ingress, or APISIX CRD resources to configure the route."),(0,r.kt)("div",{className:"admonition admonition-important alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"important")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"If you are using Gateway API, you should first configure the GatewayClass and Gateway resources:"),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Show configuration"),(0,r.kt)("pre",{parentName:"div"},(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: gateway.networking.k8s.io/v1\nkind: GatewayClass\nmetadata:\n  namespace: ingress-apisix\n  name: apisix\nspec:\n  controllerName: apisix.apache.org/apisix-ingress-controller\n---\napiVersion: gateway.networking.k8s.io/v1\nkind: Gateway\nmetadata:\n  namespace: ingress-apisix\n  name: apisix\nspec:\n  gatewayClassName: apisix\n  listeners:\n  - name: http\n    protocol: HTTP\n    port: 80\n  infrastructure:\n    parametersRef:\n      group: apisix.apache.org\n      kind: GatewayProxy\n      name: apisix-config\n")),(0,r.kt)("p",{parentName:"div"},"Note that the ",(0,r.kt)("inlineCode",{parentName:"p"},"port")," in the Gateway listener is required but ignored. This is due to limitations in the data plane: it cannot dynamically open new ports. Since the Ingress Controller does not manage the data plane deployment, it cannot automatically update the configuration or restart the data plane to apply port changes.")),(0,r.kt)("p",{parentName:"div"},"If you are using Ingress or APISIX custom resources, you can proceed without additional configuration, as the IngressClass resource below is already applied with installation:"),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Show configuration"),(0,r.kt)("pre",{parentName:"div"},(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: networking.k8s.io/v1\nkind: IngressClass\nmetadata:\n  name: apisix\nspec:\n  controller: apisix.apache.org/apisix-ingress-controller\n  parameters:\n    apiGroup: apisix.apache.org\n    kind: GatewayProxy\n    name: apisix-config\n    namespace: ingress-apisix\n    scope: Namespace\n"))),(0,r.kt)("p",{parentName:"div"},"See ",(0,r.kt)("a",{parentName:"p",href:"/zh/docs/ingress-controller/next/reference/apisix-ingress-controller/examples#define-controller-and-gateway"},"Define Controller and Gateway")," for more information on parameters."))),(0,r.kt)("p",null,"Create a Kubernetes manifest file for a Route that proxy requests to httpbin:"),(0,r.kt)(i.Z,{groupId:"k8s-api",defaultValue:"gateway-api",values:[{label:"Gateway API",value:"gateway-api"},{label:"Ingress",value:"ingress-rs"},{label:"APISIX CRD",value:"apisix-crd"}],mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"gateway-api",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="httpbin-route.yaml"',title:'"httpbin-route.yaml"'},"apiVersion: gateway.networking.k8s.io/v1\nkind: HTTPRoute\nmetadata:\n  namespace: ingress-apisix\n  name: getting-started-ip\nspec:\n  parentRefs:\n  - name: apisix\n  rules:\n  - matches:\n    - path:\n        type: Exact\n        value: /ip\n    backendRefs:\n    - name: httpbin\n      port: 80\n"))),(0,r.kt)(s.Z,{value:"ingress-rs",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="httpbin-route.yaml"',title:'"httpbin-route.yaml"'},"apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  namespace: ingress-apisix\n  name: getting-started-ip\nspec:\n  ingressClassName: apisix\n  rules:\n    - http:\n        paths:\n          - backend:\n              service:\n                name: httpbin\n                port:\n                  number: 80\n            path: /ip\n            pathType: Exact\n"))),(0,r.kt)(s.Z,{value:"apisix-crd",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="httpbin-route.yaml"',title:'"httpbin-route.yaml"'},"apiVersion: apisix.apache.org/v2\nkind: ApisixRoute\nmetadata:\n  namespace: ingress-apisix\n  name: getting-started-ip\nspec:\n  ingressClassName: apisix\n  http:\n    - name: getting-started-ip\n      match:\n        paths:\n          - /ip\n      backends:\n        - serviceName: httpbin\n          servicePort: 80\n")))),(0,r.kt)("p",null,"Apply the configurations to your cluster:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -f httpbin-route.yaml\n")),(0,r.kt)("h2",{id:"verify"},"Verify"),(0,r.kt)("p",null,"Expose the service port to your local machine by port forwarding:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl port-forward svc/apisix-gateway 9080:80 &\n")),(0,r.kt)("p",null,"Send a request to the Route:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl "http://127.0.0.1:9080/ip"\n')),(0,r.kt)("p",null,"You should see a response similar to the following:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "origin": "127.0.0.1"\n}\n')))}m.isMDXComponent=!0},58215:(e,t,n)=>{n.d(t,{Z:()=>r});var a=n(67294);const r=function(e){let{children:t,hidden:n,className:r}=e;return a.createElement("div",{role:"tabpanel",hidden:n,className:r},t)}},55064:(e,t,n)=>{n.d(t,{Z:()=>p});var a=n(67294),r=n(79443);const i=function(){const e=(0,a.useContext)(r.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e};var s=n(86010);const o="tabItem_vU9c",l="tabItemActive_cw6a";const p=function(e){var t;const{lazy:n,block:r,defaultValue:p,values:c,groupId:u,className:m}=e,d=a.Children.toArray(e.children),g=null!=c?c:d.map((e=>({value:e.props.value,label:e.props.label}))),h=null!=p?p:null==(t=d.find((e=>e.props.default)))?void 0:t.props.value,{tabGroupChoices:f,setTabGroupChoices:y}=i(),[v,k]=(0,a.useState)(h),b=[];if(null!=u){const e=f[u];null!=e&&e!==v&&g.some((t=>t.value===e))&&k(e)}const w=e=>{const t=e.currentTarget,n=b.indexOf(t),a=g[n].value;k(a),null!=u&&(y(u,a),setTimeout((()=>{(function(e){const{top:t,left:n,bottom:a,right:r}=e.getBoundingClientRect(),{innerHeight:i,innerWidth:s}=window;return t>=0&&r<=s&&a<=i&&n>=0})(t)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(l),setTimeout((()=>t.classList.remove(l)),2e3))}),150))},x=e=>{var t;let n=null;switch(e.key){case"ArrowRight":{const t=b.indexOf(e.target)+1;n=b[t]||b[0];break}case"ArrowLeft":{const t=b.indexOf(e.target)-1;n=b[t]||b[b.length-1];break}}null==(t=n)||t.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":r},m)},g.map((e=>{let{value:t,label:n}=e;return a.createElement("li",{role:"tab",tabIndex:v===t?0:-1,"aria-selected":v===t,className:(0,s.Z)("tabs__item",o,{"tabs__item--active":v===t}),key:t,ref:e=>b.push(e),onKeyDown:x,onFocus:w,onClick:w},null!=n?n:t)}))),n?(0,a.cloneElement)(d.filter((e=>e.props.value===v))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},d.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==v})))))}},79443:(e,t,n)=>{n.d(t,{Z:()=>a});const a=(0,n(67294).createContext)(void 0)},86010:(e,t,n)=>{function a(e){var t,n,r="";if("string"==typeof e||"number"==typeof e)r+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=a(e[t]))&&(r&&(r+=" "),r+=n);else for(t in e)e[t]&&(r&&(r+=" "),r+=t);return r}n.d(t,{Z:()=>r});const r=function(){for(var e,t,n=0,r="";n<arguments.length;)(e=arguments[n++])&&(t=a(e))&&(r&&(r+=" "),r+=t);return r}}}]);