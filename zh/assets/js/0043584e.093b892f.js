"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[39117],{3905:(t,e,n)=>{n.d(e,{Zo:()=>m,kt:()=>k});var a=n(67294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function l(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function o(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},i=Object.keys(t);for(a=0;a<i.length;a++)n=i[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(a=0;a<i.length;a++)n=i[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var p=a.createContext({}),d=function(t){var e=a.useContext(p),n=e;return t&&(n="function"==typeof t?t(e):l(l({},e),t)),n},m=function(t){var e=d(t.components);return a.createElement(p.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},s=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,i=t.originalType,p=t.parentName,m=o(t,["components","mdxType","originalType","parentName"]),s=d(n),k=r,g=s["".concat(p,".").concat(k)]||s[k]||u[k]||i;return n?a.createElement(g,l(l({ref:e},m),{},{components:n})):a.createElement(g,l({ref:e},m))}));function k(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var i=n.length,l=new Array(i);l[0]=s;var o={};for(var p in e)hasOwnProperty.call(e,p)&&(o[p]=e[p]);o.originalType=t,o.mdxType="string"==typeof t?t:r,l[1]=o;for(var d=2;d<i;d++)l[d]=n[d];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}s.displayName="MDXCreateElement"},22341:(t,e,n)=>{n.r(e),n.d(e,{contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const i={title:"ai-proxy-multi",keywords:["Apache APISIX","API Gateway","Plugin","ai-proxy-multi"],description:"This document contains information about the Apache APISIX ai-proxy-multi Plugin."},l=void 0,o={unversionedId:"plugins/ai-proxy-multi",id:"version-3.12/plugins/ai-proxy-multi",isDocsHomePage:!1,title:"ai-proxy-multi",description:"This document contains information about the Apache APISIX ai-proxy-multi Plugin.",source:"@site/docs-apisix_versioned_docs/version-3.12/plugins/ai-proxy-multi.md",sourceDirName:"plugins",slug:"/plugins/ai-proxy-multi",permalink:"/zh/docs/apisix/3.12/plugins/ai-proxy-multi",editUrl:"/zh/edit#https://github.com/apache/apisix/edit/release/3.12/docs/zh/latest/plugins/ai-proxy-multi.md",tags:[],version:"3.12",frontMatter:{title:"ai-proxy-multi",keywords:["Apache APISIX","API Gateway","Plugin","ai-proxy-multi"],description:"This document contains information about the Apache APISIX ai-proxy-multi Plugin."},sidebar:"version-3.12/docs",previous:{title:"ai-proxy",permalink:"/zh/docs/apisix/3.12/plugins/ai-proxy"},next:{title:"ai-rate-limiting",permalink:"/zh/docs/apisix/3.12/plugins/ai-rate-limiting"}},p=[{value:"Description",id:"description",children:[]},{value:"Request Format",id:"request-format",children:[{value:"OpenAI",id:"openai",children:[]}]},{value:"Plugin Attributes",id:"plugin-attributes",children:[]},{value:"Example usage",id:"example-usage",children:[{value:"Retry and fallback:",id:"retry-and-fallback",children:[]},{value:"Send request to an OpenAI compatible LLM",id:"send-request-to-an-openai-compatible-llm",children:[]}]}],d={toc:p};function m(t){let{components:e,...n}=t;return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"description"},"Description"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"ai-proxy-multi")," plugin simplifies access to LLM providers and models by defining a standard request format\nthat allows key fields in plugin configuration to be embedded into the request."),(0,r.kt)("p",null,"This plugin adds additional features like ",(0,r.kt)("inlineCode",{parentName:"p"},"load balancing")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"retries")," to the existing ",(0,r.kt)("inlineCode",{parentName:"p"},"ai-proxy")," plugin."),(0,r.kt)("p",null,"Proxying requests to OpenAI is supported now. Other LLM services will be supported soon."),(0,r.kt)("h2",{id:"request-format"},"Request Format"),(0,r.kt)("h3",{id:"openai"},"OpenAI"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Chat API")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"messages")),(0,r.kt)("td",{parentName:"tr",align:null},"Array"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"An array of message objects")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"messages.role")),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"Role of the message (",(0,r.kt)("inlineCode",{parentName:"td"},"system"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"user"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"assistant"),")")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"messages.content")),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"Content of the message")))),(0,r.kt)("h2",{id:"plugin-attributes"},"Plugin Attributes"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"Name")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"Required")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"Type")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"Description")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"Default")))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"providers"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"array"),(0,r.kt)("td",{parentName:"tr",align:null},"List of AI providers, each following the provider schema."),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"provider.name"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the AI service provider. Allowed values: ",(0,r.kt)("inlineCode",{parentName:"td"},"openai"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"deepseek"),"."),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"provider.model"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the AI model to execute. Example: ",(0,r.kt)("inlineCode",{parentName:"td"},"gpt-4o"),"."),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"provider.priority"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"Priority of the provider for load balancing."),(0,r.kt)("td",{parentName:"tr",align:null},"0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"provider.weight"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"Load balancing weight."),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"balancer.algorithm"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Load balancing algorithm. Allowed values: ",(0,r.kt)("inlineCode",{parentName:"td"},"chash"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"roundrobin"),"."),(0,r.kt)("td",{parentName:"tr",align:null},"roundrobin")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"balancer.hash_on"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Defines what to hash on for consistent hashing (",(0,r.kt)("inlineCode",{parentName:"td"},"vars"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"header"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"cookie"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"consumer"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"vars_combinations"),")."),(0,r.kt)("td",{parentName:"tr",align:null},"vars")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"balancer.key"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Key for consistent hashing in dynamic load balancing."),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"provider.auth"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null},"Authentication details, including headers and query parameters."),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"provider.auth.header"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null},"Authentication details sent via headers. Header name must match ",(0,r.kt)("inlineCode",{parentName:"td"},"^[a-zA-Z0-9._-]+$"),"."),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"provider.auth.query"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null},"Authentication details sent via query parameters. Keys must match ",(0,r.kt)("inlineCode",{parentName:"td"},"^[a-zA-Z0-9._-]+$"),"."),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"provider.override.endpoint"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Custom host override for the AI provider."),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"timeout"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"Request timeout in milliseconds (1-60000)."),(0,r.kt)("td",{parentName:"tr",align:null},"30000")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"keepalive"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"Enables keepalive connections."),(0,r.kt)("td",{parentName:"tr",align:null},"true")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"keepalive_timeout"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"Timeout for keepalive connections (minimum 1000ms)."),(0,r.kt)("td",{parentName:"tr",align:null},"60000")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"keepalive_pool"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"Maximum keepalive connections."),(0,r.kt)("td",{parentName:"tr",align:null},"30")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ssl_verify"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"Enables SSL certificate verification."),(0,r.kt)("td",{parentName:"tr",align:null},"true")))),(0,r.kt)("h2",{id:"example-usage"},"Example usage"),(0,r.kt)("p",null,"Create a route with the ",(0,r.kt)("inlineCode",{parentName:"p"},"ai-proxy-multi")," plugin like so:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl "http://127.0.0.1:9180/apisix/admin/routes" -X PUT \\\n  -H "X-API-KEY: ${ADMIN_API_KEY}" \\\n  -d \'{\n    "id": "ai-proxy-multi-route",\n    "uri": "/anything",\n    "methods": ["POST"],\n    "plugins": {\n      "ai-proxy-multi": {\n        "providers": [\n          {\n            "name": "openai",\n            "model": "gpt-4",\n            "weight": 1,\n            "priority": 1,\n            "auth": {\n              "header": {\n                "Authorization": "Bearer \'"$OPENAI_API_KEY"\'"\n              }\n            },\n            "options": {\n                "max_tokens": 512,\n                "temperature": 1.0\n            }\n          },\n          {\n            "name": "deepseek",\n            "model": "deepseek-chat",\n            "weight": 1,\n            "auth": {\n              "header": {\n                "Authorization": "Bearer \'"$DEEPSEEK_API_KEY"\'"\n              }\n            },\n            "options": {\n                "max_tokens": 512,\n                "temperature": 1.0\n            }\n          }\n        ]\n      }\n    },\n    "upstream": {\n      "type": "roundrobin",\n      "nodes": {\n        "httpbin.org": 1\n      }\n    }\n  }\'\n')),(0,r.kt)("p",null,"In the above configuration, requests will be equally balanced among the ",(0,r.kt)("inlineCode",{parentName:"p"},"openai")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"deepseek")," providers."),(0,r.kt)("h3",{id:"retry-and-fallback"},"Retry and fallback:"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"priority")," attribute can be adjusted to implement the fallback and retry feature."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl "http://127.0.0.1:9180/apisix/admin/routes" -X PUT \\\n  -H "X-API-KEY: ${ADMIN_API_KEY}" \\\n  -d \'{\n    "id": "ai-proxy-multi-route",\n    "uri": "/anything",\n    "methods": ["POST"],\n    "plugins": {\n      "ai-proxy-multi": {\n        "providers": [\n          {\n            "name": "openai",\n            "model": "gpt-4",\n            "weight": 1,\n            "priority": 1,\n            "auth": {\n              "header": {\n                "Authorization": "Bearer \'"$OPENAI_API_KEY"\'"\n              }\n            },\n            "options": {\n                "max_tokens": 512,\n                "temperature": 1.0\n            }\n          },\n          {\n            "name": "deepseek",\n            "model": "deepseek-chat",\n            "weight": 1,\n            "priority": 0,\n            "auth": {\n              "header": {\n                "Authorization": "Bearer \'"$DEEPSEEK_API_KEY"\'"\n              }\n            },\n            "options": {\n                "max_tokens": 512,\n                "temperature": 1.0\n            }\n          }\n        ]\n      }\n    },\n    "upstream": {\n      "type": "roundrobin",\n      "nodes": {\n        "httpbin.org": 1\n      }\n    }\n  }\'\n')),(0,r.kt)("p",null,"In the above configuration ",(0,r.kt)("inlineCode",{parentName:"p"},"priority")," for the deepseek provider is set to ",(0,r.kt)("inlineCode",{parentName:"p"},"0"),". Which means if ",(0,r.kt)("inlineCode",{parentName:"p"},"openai")," provider is unavailable then ",(0,r.kt)("inlineCode",{parentName:"p"},"ai-proxy-multi")," plugin will retry sending request to ",(0,r.kt)("inlineCode",{parentName:"p"},"deepseek")," in the second attempt."),(0,r.kt)("h3",{id:"send-request-to-an-openai-compatible-llm"},"Send request to an OpenAI compatible LLM"),(0,r.kt)("p",null,"Create a route with the ",(0,r.kt)("inlineCode",{parentName:"p"},"ai-proxy-multi")," plugin with ",(0,r.kt)("inlineCode",{parentName:"p"},"provider.name")," set to ",(0,r.kt)("inlineCode",{parentName:"p"},"openai-compatible")," and the endpoint of the model set to ",(0,r.kt)("inlineCode",{parentName:"p"},"provider.override.endpoint")," like so:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl "http://127.0.0.1:9180/apisix/admin/routes" -X PUT \\\n  -H "X-API-KEY: ${ADMIN_API_KEY}" \\\n  -d \'{\n    "id": "ai-proxy-multi-route",\n    "uri": "/anything",\n    "methods": ["POST"],\n    "plugins": {\n      "ai-proxy-multi": {\n        "providers": [\n          {\n            "name": "openai-compatible",\n            "model": "qwen-plus",\n            "weight": 1,\n            "priority": 1,\n            "auth": {\n              "header": {\n                "Authorization": "Bearer \'"$OPENAI_API_KEY"\'"\n              }\n            },\n            "override": {\n              "endpoint": "https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions"\n            }\n          },\n          {\n            "name": "deepseek",\n            "model": "deepseek-chat",\n            "weight": 1,\n            "auth": {\n              "header": {\n                "Authorization": "Bearer \'"$DEEPSEEK_API_KEY"\'"\n              }\n            },\n            "options": {\n                "max_tokens": 512,\n                "temperature": 1.0\n            }\n          }\n        ],\n        "passthrough": false\n      }\n    },\n    "upstream": {\n      "type": "roundrobin",\n      "nodes": {\n        "httpbin.org": 1\n      }\n    }\n  }\'\n')))}m.isMDXComponent=!0}}]);