"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[40926],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>d});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=a.createContext({}),p=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=p(e.components);return a.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(t),d=r,g=m["".concat(l,".").concat(d)]||m[d]||u[d]||i;return t?a.createElement(g,o(o({ref:n},c),{},{components:t})):a.createElement(g,o({ref:n},c))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=m;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var p=2;p<i;p++)o[p]=t[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},40859:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>l,default:()=>m,frontMatter:()=>s,metadata:()=>p,toc:()=>c});var a=t(87462),r=(t(67294),t(3905)),i=t(55064),o=t(58215);const s={title:"Load Balancing",keywords:["APISIX ingress","Apache APISIX","Kubernetes ingress"],description:"Learn how to implement load balancing in APISIX using APISIX Ingress Controller, distributing clients requests across multiple upstream nodes."},l=void 0,p={unversionedId:"getting-started/load-balancing",id:"version-2.0.0/getting-started/load-balancing",isDocsHomePage:!1,title:"Load Balancing",description:"Learn how to implement load balancing in APISIX using APISIX Ingress Controller, distributing clients requests across multiple upstream nodes.",source:"@site/docs-apisix-ingress-controller_versioned_docs/version-2.0.0/getting-started/load-balancing.md",sourceDirName:"getting-started",slug:"/getting-started/load-balancing",permalink:"/zh/docs/ingress-controller/getting-started/load-balancing",editUrl:"/zh/edit#https://github.com/apache/apisix-ingress-controller/edit/v2.0.0/docs/zh/latest/getting-started/load-balancing.md",tags:[],version:"2.0.0",frontMatter:{title:"Load Balancing",keywords:["APISIX ingress","Apache APISIX","Kubernetes ingress"],description:"Learn how to implement load balancing in APISIX using APISIX Ingress Controller, distributing clients requests across multiple upstream nodes."},sidebar:"version-2.0.0/docs",previous:{title:"Configure Routes",permalink:"/zh/docs/ingress-controller/getting-started/configure-routes"},next:{title:"Key Authentication",permalink:"/zh/docs/ingress-controller/getting-started/key-authentication"}},c=[{value:"Prerequisite",id:"prerequisite",children:[]},{value:"Configure Load Balancing",id:"configure-load-balancing",children:[]},{value:"Verify",id:"verify",children:[]}],u={toc:c};function m(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Load balancing is a technique used to distribute network request loads. It is a key consideration in designing systems that need to handle a large volume of traffic, allowing for improved system performance, scalability, and reliability."),(0,r.kt)("p",null,"In this tutorial, you will create a route using APISIX Ingress Controller with two upstream services and uses the round-robin load balancing algorithm to load balance requests."),(0,r.kt)("h2",{id:"prerequisite"},"Prerequisite"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Complete ",(0,r.kt)("a",{parentName:"li",href:"/zh/docs/ingress-controller/getting-started/get-apisix-ingress-controller"},"Get APISIX and APISIX Ingress Controller"),".")),(0,r.kt)("h2",{id:"configure-load-balancing"},"Configure Load Balancing"),(0,r.kt)("p",null,"For demonstration purpose, you will be creating a route to the ",(0,r.kt)("a",{parentName:"p",href:"https://httpbin.org"},"publicly hosted httpbin services")," and ",(0,r.kt)("a",{parentName:"p",href:"https://mock.api7.ai"},"mock.api7.ai"),". If you would like to proxy requests to services on Kubernetes, please modify accordingly."),(0,r.kt)("div",{className:"admonition admonition-important alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"important")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"If you are using Gateway API, you should first configure the GatewayClass and Gateway resources:"),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Show configuration"),(0,r.kt)("pre",{parentName:"div"},(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: gateway.networking.k8s.io/v1\nkind: GatewayClass\nmetadata:\n  namespace: ingress-apisix\n  name: apisix\nspec:\n  controllerName: apisix.apache.org/apisix-ingress-controller\n---\napiVersion: gateway.networking.k8s.io/v1\nkind: Gateway\nmetadata:\n  namespace: ingress-apisix\n  name: apisix\nspec:\n  gatewayClassName: apisix\n  listeners:\n  - name: http\n    protocol: HTTP\n    port: 80\n  infrastructure:\n    parametersRef:\n      group: apisix.apache.org\n      kind: GatewayProxy\n      name: apisix-config\n")),(0,r.kt)("p",{parentName:"div"},"Note that the ",(0,r.kt)("inlineCode",{parentName:"p"},"port")," in the Gateway listener is required but ignored. This is due to limitations in the data plane: it cannot dynamically open new ports. Since the Ingress Controller does not manage the data plane deployment, it cannot automatically update the configuration or restart the data plane to apply port changes.")),(0,r.kt)("p",{parentName:"div"},"If you are using Ingress or APISIX custom resources, you can proceed without additional configuration, as the IngressClass resource below is already applied with installation:"),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Show configuration"),(0,r.kt)("pre",{parentName:"div"},(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: networking.k8s.io/v1\nkind: IngressClass\nmetadata:\n  name: apisix\nspec:\n  controller: apisix.apache.org/apisix-ingress-controller\n  parameters:\n    apiGroup: apisix.apache.org\n    kind: GatewayProxy\n    name: apisix-config\n    namespace: ingress-apisix\n    scope: Namespace\n"))),(0,r.kt)("p",{parentName:"div"},"See ",(0,r.kt)("a",{parentName:"p",href:"/zh/docs/ingress-controller/reference/apisix-ingress-controller/examples#define-controller-and-gateway"},"Define Controller and Gateway")," for more information on parameters."))),(0,r.kt)("p",null,"Create a Kubernetes manifest file for a route that proxy requests to two upstream services for load balancing:"),(0,r.kt)(i.Z,{groupId:"k8s-api",defaultValue:"gateway-api",values:[{label:"Gateway API",value:"gateway-api"},{label:"APISIX CRD",value:"apisix-crd"}],mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"gateway-api",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="lb-route.yaml"',title:'"lb-route.yaml"'},'apiVersion: v1\nkind: Service\nmetadata:\n  namespace: ingress-apisix\n  name: httpbin-external-domain\nspec:\n  type: ExternalName\n  externalName: httpbin.org\n---\napiVersion: v1\nkind: Service\nmetadata:\n  namespace: ingress-apisix\n  name: mockapi7-external-domain\nspec:\n  type: ExternalName\n  externalName: mock.api7.ai\n---\napiVersion: apisix.apache.org/v1alpha1\nkind: BackendTrafficPolicy\nmetadata:\n  namespace: ingress-apisix\n  name: passhost-node\nspec:\n  targetRefs:\n  - name: httpbin-external-domain\n    kind: Service\n    group: ""\n  - name: mockapi7-external-domain\n    kind: Service\n    group: ""\n  passHost: node\n  scheme: https\n---\napiVersion: gateway.networking.k8s.io/v1\nkind: HTTPRoute\nmetadata:\n  namespace: ingress-apisix\n  name: lb-route\nspec:\n  parentRefs:\n  - name: apisix\n  rules:\n  - matches:\n    - path:\n        type: Exact\n        value: /headers\n    backendRefs:\n    - name: httpbin-external-domain\n      port: 443\n      weight: 1\n    - name: mockapi7-external-domain\n      port: 443\n      weight: 1\n'))),(0,r.kt)(o.Z,{value:"apisix-crd",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="lb-route.yaml"',title:'"lb-route.yaml"'},"apiVersion: apisix.apache.org/v2\nkind: ApisixUpstream\nmetadata:\n  namespace: ingress-apisix\n  name: httpbin-external-domain\nspec:\n  ingressClassName: apisix\n  scheme: https\n  passHost: node\n  externalNodes:\n  - type: Domain\n    name: httpbin.org\n    weight: 1\n    port: 443\n---\napiVersion: apisix.apache.org/v2\nkind: ApisixUpstream\nmetadata:\n  namespace: ingress-apisix\n  name: mockapi7-external-domain\nspec:\n  ingressClassName: apisix\n  scheme: https\n  passHost: node\n  externalNodes:\n  - type: Domain\n    name: mock.api7.ai\n    weight: 1\n    port: 443\n---\napiVersion: apisix.apache.org/v2\nkind: ApisixRoute\nmetadata:\n  namespace: ingress-apisix\n  name: lb-route\nspec:\n  ingressClassName: apisix\n  http:\n    - name: lb-route\n      match:\n        paths:\n          - /headers\n      upstreams:\n      - name: httpbin-external-domain\n      - name: mockapi7-external-domain\n")))),(0,r.kt)("p",null,"Apply the configuration to your cluster:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -f lb-route.yaml\n")),(0,r.kt)("h2",{id:"verify"},"Verify"),(0,r.kt)("p",null,"Expose the service port to your local machine by port forwarding:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl port-forward svc/apisix-gateway 9080:80 &\n")),(0,r.kt)("p",null,"Generate 50 consecutive requests to the route to see the load-balancing effect:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'resp=$(seq 50 | xargs -I{} curl "http://127.0.0.1:9080/headers" -sL) && \\\n  count_httpbin=$(echo "$resp" | grep "httpbin.org" | wc -l) && \\\n  count_mockapi7=$(echo "$resp" | grep "mock.api7.ai" | wc -l) && \\\n  echo httpbin.org: $count_httpbin, mock.api7.ai: $count_mockapi7\n')),(0,r.kt)("p",null,"The command keeps count of the number of requests that was handled by the two services respectively. The output shows that requests were distributed over to the two services:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"httpbin.org: 23, mock.api7.ai: 27\n")),(0,r.kt)("p",null,"The distribution of requests across services should be close to 1:1 but might not always result in a perfect 1:1 ratio. The slight deviation is due to APISIX operates with multiple workers."))}m.isMDXComponent=!0},58215:(e,n,t)=>{t.d(n,{Z:()=>r});var a=t(67294);const r=function(e){let{children:n,hidden:t,className:r}=e;return a.createElement("div",{role:"tabpanel",hidden:t,className:r},n)}},55064:(e,n,t)=>{t.d(n,{Z:()=>p});var a=t(67294),r=t(79443);const i=function(){const e=(0,a.useContext)(r.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e};var o=t(86010);const s="tabItem_vU9c",l="tabItemActive_cw6a";const p=function(e){var n;const{lazy:t,block:r,defaultValue:p,values:c,groupId:u,className:m}=e,d=a.Children.toArray(e.children),g=null!=c?c:d.map((e=>({value:e.props.value,label:e.props.label}))),h=null!=p?p:null==(n=d.find((e=>e.props.default)))?void 0:n.props.value,{tabGroupChoices:f,setTabGroupChoices:y}=i(),[b,k]=(0,a.useState)(h),v=[];if(null!=u){const e=f[u];null!=e&&e!==b&&g.some((n=>n.value===e))&&k(e)}const w=e=>{const n=e.currentTarget,t=v.indexOf(n),a=g[t].value;k(a),null!=u&&(y(u,a),setTimeout((()=>{(function(e){const{top:n,left:t,bottom:a,right:r}=e.getBoundingClientRect(),{innerHeight:i,innerWidth:o}=window;return n>=0&&r<=o&&a<=i&&t>=0})(n)||(n.scrollIntoView({block:"center",behavior:"smooth"}),n.classList.add(l),setTimeout((()=>n.classList.remove(l)),2e3))}),150))},x=e=>{var n;let t=null;switch(e.key){case"ArrowRight":{const n=v.indexOf(e.target)+1;t=v[n]||v[0];break}case"ArrowLeft":{const n=v.indexOf(e.target)-1;t=v[n]||v[v.length-1];break}}null==(n=t)||n.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":r},m)},g.map((e=>{let{value:n,label:t}=e;return a.createElement("li",{role:"tab",tabIndex:b===n?0:-1,"aria-selected":b===n,className:(0,o.Z)("tabs__item",s,{"tabs__item--active":b===n}),key:n,ref:e=>v.push(e),onKeyDown:x,onFocus:w,onClick:w},null!=t?t:n)}))),t?(0,a.cloneElement)(d.filter((e=>e.props.value===b))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},d.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==b})))))}},79443:(e,n,t)=>{t.d(n,{Z:()=>a});const a=(0,t(67294).createContext)(void 0)},86010:(e,n,t)=>{function a(e){var n,t,r="";if("string"==typeof e||"number"==typeof e)r+=e;else if("object"==typeof e)if(Array.isArray(e))for(n=0;n<e.length;n++)e[n]&&(t=a(e[n]))&&(r&&(r+=" "),r+=t);else for(n in e)e[n]&&(r&&(r+=" "),r+=n);return r}t.d(n,{Z:()=>r});const r=function(){for(var e,n,t=0,r="";t<arguments.length;)(e=arguments[t++])&&(n=a(e))&&(r&&(r+=" "),r+=n);return r}}}]);